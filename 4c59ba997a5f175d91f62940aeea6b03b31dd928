{
  "comments": [
    {
      "key": {
        "uuid": "e1b3fd84_614e15ca",
        "filename": "pkg/cmd/contrailschema/generate.go",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 558
      },
      "writtenOn": "2019-10-15T17:57:14Z",
      "side": 1,
      "message": "Why do we need that?",
      "revId": "4c59ba997a5f175d91f62940aeea6b03b31dd928",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "095456a1_9e1fc373",
        "filename": "pkg/cmd/contrailschema/generate.go",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-10-15T19:00:01Z",
      "side": 1,
      "message": "This was previously default behavior. It is one of turbo optimizations that was meant to make `make generate` faster. Because the files were not regenerated, the `go fmt` took no time.\n\nUnfortunately it was working good only in `make generate` case. When I tried calling contrailschema tool with different schema paths, the tool did not regenerate the files because it thought that nothing has changed.\n\nIMO this behavior is harmful because the user has no idea why the files are not regenerated. Also it is narrowly tailored for the GoAPI\u0027s `make generate` case.\n\nBecause of all that, I thought we can keep this as an optional parameter. See Makefile for usage.",
      "parentUuid": "e1b3fd84_614e15ca",
      "revId": "4c59ba997a5f175d91f62940aeea6b03b31dd928",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2edafb3_900a0b96",
        "filename": "pkg/schema/schema.go",
        "patchSetId": 2
      },
      "lineNbr": 564,
      "author": {
        "id": 578
      },
      "writtenOn": "2019-10-15T11:37:02Z",
      "side": 1,
      "message": "This function is used only once in line 1109. Please merge body of this function with place where it is used or at least move it closer to line 1109.",
      "range": {
        "startLine": 560,
        "startChar": 0,
        "endLine": 564,
        "endChar": 1
      },
      "revId": "4c59ba997a5f175d91f62940aeea6b03b31dd928",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce3fe64e_a23dd901",
        "filename": "pkg/schema/schema.go",
        "patchSetId": 2
      },
      "lineNbr": 564,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-10-15T17:47:02Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d2edafb3_900a0b96",
      "range": {
        "startLine": 560,
        "startChar": 0,
        "endLine": 564,
        "endChar": 1
      },
      "revId": "4c59ba997a5f175d91f62940aeea6b03b31dd928",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2339ebda_a4c412e8",
        "filename": "pkg/schema/schema.go",
        "patchSetId": 2
      },
      "lineNbr": 1068,
      "author": {
        "id": 578
      },
      "writtenOn": "2019-10-15T11:37:02Z",
      "side": 1,
      "message": "Unused function.",
      "range": {
        "startLine": 1063,
        "startChar": 0,
        "endLine": 1068,
        "endChar": 1
      },
      "revId": "4c59ba997a5f175d91f62940aeea6b03b31dd928",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5817802d_e6ea735b",
        "filename": "pkg/schema/schema.go",
        "patchSetId": 2
      },
      "lineNbr": 1068,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-10-15T17:47:02Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "2339ebda_a4c412e8",
      "range": {
        "startLine": 1063,
        "startChar": 0,
        "endLine": 1068,
        "endChar": 1
      },
      "revId": "4c59ba997a5f175d91f62940aeea6b03b31dd928",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d64502a_303e6f1f",
        "filename": "pkg/schema/test_data/schema_enums/schema/base.yml",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 578
      },
      "writtenOn": "2019-10-15T11:37:02Z",
      "side": 1,
      "message": "YAML files are inconsistent.\n\n1. several files have unnecessary indentation\n2. few of them don\u0027t start with triple dash\n3. one file has .yaml extension and rest of them .yml",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 3
      },
      "revId": "4c59ba997a5f175d91f62940aeea6b03b31dd928",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83d327de_9fca51b3",
        "filename": "pkg/schema/test_data/schema_enums/schema/base.yml",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-10-15T17:47:02Z",
      "side": 1,
      "message": "Maybe that was part of the test ;)\nI can fix the problems related to files that I change, but I would prefer to leave the files that were just moved out of scope of this change.",
      "parentUuid": "0d64502a_303e6f1f",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 3
      },
      "revId": "4c59ba997a5f175d91f62940aeea6b03b31dd928",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f76e8550_2a0d2824",
        "filename": "pkg/schema/test_data/schema_enums/schema/base.yml",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-10-15T19:00:01Z",
      "side": 1,
      "message": "1. I agree it should be fixed\n2. It\u0027s not mandatory, IMO all files that don\u0027t have header shouldn\u0027t use triple dash, because otherwise we keep them \"just in case\".\n3. Which files have yaml extension? All test_data files have yml extension, files in schema have yaml extension. I agree that it should be unified, but such change deserves an another CR at least.",
      "parentUuid": "83d327de_9fca51b3",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 3
      },
      "revId": "4c59ba997a5f175d91f62940aeea6b03b31dd928",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    }
  ]
}