syntax = "proto3";
package github.com.Juniper.contrail.pkg.generated.models;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/field_mask.proto";

option (gogoproto.gostring_all) = true;
option (gogoproto.equal_all) = true;
option (gogoproto.verbose_equal_all) = true;
option (gogoproto.goproto_stringer_all) = false;
option (gogoproto.stringer_all) =  true;
option (gogoproto.populate_all) = true;
option (gogoproto.benchgen_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.protosizer_all) = false;

option go_package = "models";

message ListSpec {
    repeated Filter filters = 1 [(gogoproto.customname) = "Filters"];
	int64 limit = 2 [(gogoproto.customname) = "Limit", (gogoproto.casttype) = "int"];
	int64 offset = 3 [(gogoproto.customname) = "Offset", (gogoproto.casttype) = "int"];
    bool detail = 4 [(gogoproto.customname) = "Detail"];
    bool count = 5 [(gogoproto.customname) = "Count"];
    bool shared = 6 [(gogoproto.customname) = "Shared"];
    bool exclude_hrefs = 7 [(gogoproto.customname) = "ExcludeHrefs"];
    repeated string parent_fq_name = 8 [(gogoproto.customname) = "ParentFQName"];
    string parent_type = 9  [(gogoproto.customname) = "ParentType"];
    repeated string parent_uuids = 10 [(gogoproto.customname) = "ParentUUIDs"];
    repeated string backref_uuids = 11 [(gogoproto.customname) = "BackRefUUIDs"];
    repeated string object_uuids = 12 [(gogoproto.customname) = "ObjectUUIDs"];
    repeated string fields = 13 [(gogoproto.customname) = "Fields"];
}

message Filter {
    string key = 1 [(gogoproto.customname) = "Key"];
    repeated string values = 2 [(gogoproto.customname) = "Values"];
}



message AccessControlList {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    int64 access_control_list_hash = 9 [(gogoproto.customname) = "AccessControlListHash"];
    AclEntriesType access_control_list_entries = 10 [(gogoproto.customname) = "AccessControlListEntries"]; 


}



message CreateAccessControlListRequest {
    AccessControlList access_control_list = 1 [(gogoproto.customname) = "AccessControlList",(gogoproto.jsontag) = "access-control-list"];
}

message CreateAccessControlListResponse {
    AccessControlList access_control_list = 1 [(gogoproto.customname) = "AccessControlList" ,(gogoproto.jsontag) = "access-control-list"];
}

message UpdateAccessControlListRequest {
    AccessControlList access_control_list = 1 [(gogoproto.customname) = "AccessControlList",(gogoproto.jsontag) = "access-control-list"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateAccessControlListResponse {
    AccessControlList access_control_list = 1 [(gogoproto.customname) = "AccessControlList",(gogoproto.jsontag) = "access-control-list"];
}

message DeleteAccessControlListRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteAccessControlListResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListAccessControlListRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListAccessControlListResponse {
    repeated AccessControlList access_control_lists = 1 [(gogoproto.customname) = "AccessControlLists", (gogoproto.jsontag) = "access-control-lists"];
}

message GetAccessControlListRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetAccessControlListResponse {
    AccessControlList access_control_list = 1 [(gogoproto.customname) = "AccessControlList", (gogoproto.jsontag) = "access-control-list"];
}



message AddressGroup {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    SubnetListType address_group_prefix = 9 [(gogoproto.customname) = "AddressGroupPrefix"]; 


}



message CreateAddressGroupRequest {
    AddressGroup address_group = 1 [(gogoproto.customname) = "AddressGroup",(gogoproto.jsontag) = "address-group"];
}

message CreateAddressGroupResponse {
    AddressGroup address_group = 1 [(gogoproto.customname) = "AddressGroup" ,(gogoproto.jsontag) = "address-group"];
}

message UpdateAddressGroupRequest {
    AddressGroup address_group = 1 [(gogoproto.customname) = "AddressGroup",(gogoproto.jsontag) = "address-group"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateAddressGroupResponse {
    AddressGroup address_group = 1 [(gogoproto.customname) = "AddressGroup",(gogoproto.jsontag) = "address-group"];
}

message DeleteAddressGroupRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteAddressGroupResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListAddressGroupRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListAddressGroupResponse {
    repeated AddressGroup address_groups = 1 [(gogoproto.customname) = "AddressGroups", (gogoproto.jsontag) = "address-groups"];
}

message GetAddressGroupRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetAddressGroupResponse {
    AddressGroup address_group = 1 [(gogoproto.customname) = "AddressGroup", (gogoproto.jsontag) = "address-group"];
}



message Alarm {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    AlarmOrList alarm_rules = 9 [(gogoproto.customname) = "AlarmRules"];
    UveKeysType uve_keys = 10 [(gogoproto.customname) = "UveKeys"];
    int64 alarm_severity = 11 [(gogoproto.customname) = "AlarmSeverity"]; 


}



message CreateAlarmRequest {
    Alarm alarm = 1 [(gogoproto.customname) = "Alarm",(gogoproto.jsontag) = "alarm"];
}

message CreateAlarmResponse {
    Alarm alarm = 1 [(gogoproto.customname) = "Alarm" ,(gogoproto.jsontag) = "alarm"];
}

message UpdateAlarmRequest {
    Alarm alarm = 1 [(gogoproto.customname) = "Alarm",(gogoproto.jsontag) = "alarm"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateAlarmResponse {
    Alarm alarm = 1 [(gogoproto.customname) = "Alarm",(gogoproto.jsontag) = "alarm"];
}

message DeleteAlarmRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteAlarmResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListAlarmRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListAlarmResponse {
    repeated Alarm alarms = 1 [(gogoproto.customname) = "Alarms", (gogoproto.jsontag) = "alarms"];
}

message GetAlarmRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetAlarmResponse {
    Alarm alarm = 1 [(gogoproto.customname) = "Alarm", (gogoproto.jsontag) = "alarm"];
}



message AliasIPPool {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"]; 


    
    repeated AliasIP alias_ips = 3009 [(gogoproto.customname) = "AliasIPs"];
}



message CreateAliasIPPoolRequest {
    AliasIPPool alias_ip_pool = 1 [(gogoproto.customname) = "AliasIPPool",(gogoproto.jsontag) = "alias-ip-pool"];
}

message CreateAliasIPPoolResponse {
    AliasIPPool alias_ip_pool = 1 [(gogoproto.customname) = "AliasIPPool" ,(gogoproto.jsontag) = "alias-ip-pool"];
}

message UpdateAliasIPPoolRequest {
    AliasIPPool alias_ip_pool = 1 [(gogoproto.customname) = "AliasIPPool",(gogoproto.jsontag) = "alias-ip-pool"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateAliasIPPoolResponse {
    AliasIPPool alias_ip_pool = 1 [(gogoproto.customname) = "AliasIPPool",(gogoproto.jsontag) = "alias-ip-pool"];
}

message DeleteAliasIPPoolRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteAliasIPPoolResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListAliasIPPoolRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListAliasIPPoolResponse {
    repeated AliasIPPool alias_ip_pools = 1 [(gogoproto.customname) = "AliasIPPools", (gogoproto.jsontag) = "alias-ip-pools"];
}

message GetAliasIPPoolRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetAliasIPPoolResponse {
    AliasIPPool alias_ip_pool = 1 [(gogoproto.customname) = "AliasIPPool", (gogoproto.jsontag) = "alias-ip-pool"];
}



message AliasIP {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    string alias_ip_address = 9 [(gogoproto.customname) = "AliasIPAddress"];
    string alias_ip_address_family = 10 [(gogoproto.customname) = "AliasIPAddressFamily"]; 

    repeated AliasIPVirtualMachineInterfaceRef virtual_machine_interface_refs = 1012 [(gogoproto.customname) = "VirtualMachineInterfaceRefs"];
    repeated AliasIPProjectRef project_refs = 1011 [(gogoproto.customname) = "ProjectRefs"];

}


message AliasIPProjectRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message AliasIPVirtualMachineInterfaceRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}


message CreateAliasIPRequest {
    AliasIP alias_ip = 1 [(gogoproto.customname) = "AliasIP",(gogoproto.jsontag) = "alias-ip"];
}

message CreateAliasIPResponse {
    AliasIP alias_ip = 1 [(gogoproto.customname) = "AliasIP" ,(gogoproto.jsontag) = "alias-ip"];
}

message UpdateAliasIPRequest {
    AliasIP alias_ip = 1 [(gogoproto.customname) = "AliasIP",(gogoproto.jsontag) = "alias-ip"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateAliasIPResponse {
    AliasIP alias_ip = 1 [(gogoproto.customname) = "AliasIP",(gogoproto.jsontag) = "alias-ip"];
}

message DeleteAliasIPRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteAliasIPResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListAliasIPRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListAliasIPResponse {
    repeated AliasIP alias_ips = 1 [(gogoproto.customname) = "AliasIPs", (gogoproto.jsontag) = "alias-ips"];
}

message GetAliasIPRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetAliasIPResponse {
    AliasIP alias_ip = 1 [(gogoproto.customname) = "AliasIP", (gogoproto.jsontag) = "alias-ip"];
}



message AnalyticsNode {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    string analytics_node_ip_address = 9 [(gogoproto.customname) = "AnalyticsNodeIPAddress"]; 


}



message CreateAnalyticsNodeRequest {
    AnalyticsNode analytics_node = 1 [(gogoproto.customname) = "AnalyticsNode",(gogoproto.jsontag) = "analytics-node"];
}

message CreateAnalyticsNodeResponse {
    AnalyticsNode analytics_node = 1 [(gogoproto.customname) = "AnalyticsNode" ,(gogoproto.jsontag) = "analytics-node"];
}

message UpdateAnalyticsNodeRequest {
    AnalyticsNode analytics_node = 1 [(gogoproto.customname) = "AnalyticsNode",(gogoproto.jsontag) = "analytics-node"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateAnalyticsNodeResponse {
    AnalyticsNode analytics_node = 1 [(gogoproto.customname) = "AnalyticsNode",(gogoproto.jsontag) = "analytics-node"];
}

message DeleteAnalyticsNodeRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteAnalyticsNodeResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListAnalyticsNodeRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListAnalyticsNodeResponse {
    repeated AnalyticsNode analytics_nodes = 1 [(gogoproto.customname) = "AnalyticsNodes", (gogoproto.jsontag) = "analytics-nodes"];
}

message GetAnalyticsNodeRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetAnalyticsNodeResponse {
    AnalyticsNode analytics_node = 1 [(gogoproto.customname) = "AnalyticsNode", (gogoproto.jsontag) = "analytics-node"];
}



message APIAccessList {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    RbacRuleEntriesType api_access_list_entries = 9 [(gogoproto.customname) = "APIAccessListEntries"]; 


}



message CreateAPIAccessListRequest {
    APIAccessList api_access_list = 1 [(gogoproto.customname) = "APIAccessList",(gogoproto.jsontag) = "api-access-list"];
}

message CreateAPIAccessListResponse {
    APIAccessList api_access_list = 1 [(gogoproto.customname) = "APIAccessList" ,(gogoproto.jsontag) = "api-access-list"];
}

message UpdateAPIAccessListRequest {
    APIAccessList api_access_list = 1 [(gogoproto.customname) = "APIAccessList",(gogoproto.jsontag) = "api-access-list"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateAPIAccessListResponse {
    APIAccessList api_access_list = 1 [(gogoproto.customname) = "APIAccessList",(gogoproto.jsontag) = "api-access-list"];
}

message DeleteAPIAccessListRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteAPIAccessListResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListAPIAccessListRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListAPIAccessListResponse {
    repeated APIAccessList api_access_lists = 1 [(gogoproto.customname) = "APIAccessLists", (gogoproto.jsontag) = "api-access-lists"];
}

message GetAPIAccessListRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetAPIAccessListResponse {
    APIAccessList api_access_list = 1 [(gogoproto.customname) = "APIAccessList", (gogoproto.jsontag) = "api-access-list"];
}



message ApplicationPolicySet {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    bool all_applications = 9 [(gogoproto.customname) = "AllApplications"]; 

    repeated ApplicationPolicySetFirewallPolicyRef firewall_policy_refs = 1010 [(gogoproto.customname) = "FirewallPolicyRefs"];
    repeated ApplicationPolicySetGlobalVrouterConfigRef global_vrouter_config_refs = 1011 [(gogoproto.customname) = "GlobalVrouterConfigRefs"];

}


message ApplicationPolicySetFirewallPolicyRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
    FirewallSequence attr = 3 [(gogoproto.customname) = "Attr"];
    
}

message ApplicationPolicySetGlobalVrouterConfigRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}


message CreateApplicationPolicySetRequest {
    ApplicationPolicySet application_policy_set = 1 [(gogoproto.customname) = "ApplicationPolicySet",(gogoproto.jsontag) = "application-policy-set"];
}

message CreateApplicationPolicySetResponse {
    ApplicationPolicySet application_policy_set = 1 [(gogoproto.customname) = "ApplicationPolicySet" ,(gogoproto.jsontag) = "application-policy-set"];
}

message UpdateApplicationPolicySetRequest {
    ApplicationPolicySet application_policy_set = 1 [(gogoproto.customname) = "ApplicationPolicySet",(gogoproto.jsontag) = "application-policy-set"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateApplicationPolicySetResponse {
    ApplicationPolicySet application_policy_set = 1 [(gogoproto.customname) = "ApplicationPolicySet",(gogoproto.jsontag) = "application-policy-set"];
}

message DeleteApplicationPolicySetRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteApplicationPolicySetResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListApplicationPolicySetRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListApplicationPolicySetResponse {
    repeated ApplicationPolicySet application_policy_sets = 1 [(gogoproto.customname) = "ApplicationPolicySets", (gogoproto.jsontag) = "application-policy-sets"];
}

message GetApplicationPolicySetRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetApplicationPolicySetResponse {
    ApplicationPolicySet application_policy_set = 1 [(gogoproto.customname) = "ApplicationPolicySet", (gogoproto.jsontag) = "application-policy-set"];
}



message BGPAsAService {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    bool bgpaas_shared = 9 [(gogoproto.customname) = "BgpaasShared"];
    string bgpaas_session_attributes = 10 [(gogoproto.customname) = "BgpaasSessionAttributes"];
    bool bgpaas_suppress_route_advertisement = 11 [(gogoproto.customname) = "BgpaasSuppressRouteAdvertisement"];
    bool bgpaas_ipv4_mapped_ipv6_nexthop = 12 [(gogoproto.customname) = "BgpaasIpv4MappedIpv6Nexthop"];
    string bgpaas_ip_address = 13 [(gogoproto.customname) = "BgpaasIPAddress"];
    int64 autonomous_system = 14 [(gogoproto.customname) = "AutonomousSystem"]; 

    repeated BGPAsAServiceVirtualMachineInterfaceRef virtual_machine_interface_refs = 1015 [(gogoproto.customname) = "VirtualMachineInterfaceRefs"];
    repeated BGPAsAServiceServiceHealthCheckRef service_health_check_refs = 1016 [(gogoproto.customname) = "ServiceHealthCheckRefs"];

}


message BGPAsAServiceVirtualMachineInterfaceRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message BGPAsAServiceServiceHealthCheckRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}


message CreateBGPAsAServiceRequest {
    BGPAsAService bgp_as_a_service = 1 [(gogoproto.customname) = "BGPAsAService",(gogoproto.jsontag) = "bgp-as-a-service"];
}

message CreateBGPAsAServiceResponse {
    BGPAsAService bgp_as_a_service = 1 [(gogoproto.customname) = "BGPAsAService" ,(gogoproto.jsontag) = "bgp-as-a-service"];
}

message UpdateBGPAsAServiceRequest {
    BGPAsAService bgp_as_a_service = 1 [(gogoproto.customname) = "BGPAsAService",(gogoproto.jsontag) = "bgp-as-a-service"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateBGPAsAServiceResponse {
    BGPAsAService bgp_as_a_service = 1 [(gogoproto.customname) = "BGPAsAService",(gogoproto.jsontag) = "bgp-as-a-service"];
}

message DeleteBGPAsAServiceRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteBGPAsAServiceResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListBGPAsAServiceRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListBGPAsAServiceResponse {
    repeated BGPAsAService bgp_as_a_services = 1 [(gogoproto.customname) = "BGPAsAServices", (gogoproto.jsontag) = "bgp-as-a-services"];
}

message GetBGPAsAServiceRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetBGPAsAServiceResponse {
    BGPAsAService bgp_as_a_service = 1 [(gogoproto.customname) = "BGPAsAService", (gogoproto.jsontag) = "bgp-as-a-service"];
}



message BGPRouter {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"]; 


}



message CreateBGPRouterRequest {
    BGPRouter bgp_router = 1 [(gogoproto.customname) = "BGPRouter",(gogoproto.jsontag) = "bgp-router"];
}

message CreateBGPRouterResponse {
    BGPRouter bgp_router = 1 [(gogoproto.customname) = "BGPRouter" ,(gogoproto.jsontag) = "bgp-router"];
}

message UpdateBGPRouterRequest {
    BGPRouter bgp_router = 1 [(gogoproto.customname) = "BGPRouter",(gogoproto.jsontag) = "bgp-router"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateBGPRouterResponse {
    BGPRouter bgp_router = 1 [(gogoproto.customname) = "BGPRouter",(gogoproto.jsontag) = "bgp-router"];
}

message DeleteBGPRouterRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteBGPRouterResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListBGPRouterRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListBGPRouterResponse {
    repeated BGPRouter bgp_routers = 1 [(gogoproto.customname) = "BGPRouters", (gogoproto.jsontag) = "bgp-routers"];
}

message GetBGPRouterRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetBGPRouterResponse {
    BGPRouter bgp_router = 1 [(gogoproto.customname) = "BGPRouter", (gogoproto.jsontag) = "bgp-router"];
}



message BGPVPN {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    RouteTargetList route_target_list = 9 [(gogoproto.customname) = "RouteTargetList"];
    RouteTargetList import_route_target_list = 10 [(gogoproto.customname) = "ImportRouteTargetList"];
    RouteTargetList export_route_target_list = 11 [(gogoproto.customname) = "ExportRouteTargetList"];
    string bgpvpn_type = 12 [(gogoproto.customname) = "BGPVPNType"]; 


}



message CreateBGPVPNRequest {
    BGPVPN bgpvpn = 1 [(gogoproto.customname) = "BGPVPN",(gogoproto.jsontag) = "bgpvpn"];
}

message CreateBGPVPNResponse {
    BGPVPN bgpvpn = 1 [(gogoproto.customname) = "BGPVPN" ,(gogoproto.jsontag) = "bgpvpn"];
}

message UpdateBGPVPNRequest {
    BGPVPN bgpvpn = 1 [(gogoproto.customname) = "BGPVPN",(gogoproto.jsontag) = "bgpvpn"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateBGPVPNResponse {
    BGPVPN bgpvpn = 1 [(gogoproto.customname) = "BGPVPN",(gogoproto.jsontag) = "bgpvpn"];
}

message DeleteBGPVPNRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteBGPVPNResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListBGPVPNRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListBGPVPNResponse {
    repeated BGPVPN bgpvpns = 1 [(gogoproto.customname) = "BGPVPNs", (gogoproto.jsontag) = "bgpvpns"];
}

message GetBGPVPNRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetBGPVPNResponse {
    BGPVPN bgpvpn = 1 [(gogoproto.customname) = "BGPVPN", (gogoproto.jsontag) = "bgpvpn"];
}



message BridgeDomain {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    int64 mac_aging_time = 9 [(gogoproto.customname) = "MacAgingTime"];
    int64 isid = 10 [(gogoproto.customname) = "Isid"];
    bool mac_learning_enabled = 11 [(gogoproto.customname) = "MacLearningEnabled"];
    MACMoveLimitControlType mac_move_control = 12 [(gogoproto.customname) = "MacMoveControl"];
    MACLimitControlType mac_limit_control = 13 [(gogoproto.customname) = "MacLimitControl"]; 


}



message CreateBridgeDomainRequest {
    BridgeDomain bridge_domain = 1 [(gogoproto.customname) = "BridgeDomain",(gogoproto.jsontag) = "bridge-domain"];
}

message CreateBridgeDomainResponse {
    BridgeDomain bridge_domain = 1 [(gogoproto.customname) = "BridgeDomain" ,(gogoproto.jsontag) = "bridge-domain"];
}

message UpdateBridgeDomainRequest {
    BridgeDomain bridge_domain = 1 [(gogoproto.customname) = "BridgeDomain",(gogoproto.jsontag) = "bridge-domain"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateBridgeDomainResponse {
    BridgeDomain bridge_domain = 1 [(gogoproto.customname) = "BridgeDomain",(gogoproto.jsontag) = "bridge-domain"];
}

message DeleteBridgeDomainRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteBridgeDomainResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListBridgeDomainRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListBridgeDomainResponse {
    repeated BridgeDomain bridge_domains = 1 [(gogoproto.customname) = "BridgeDomains", (gogoproto.jsontag) = "bridge-domains"];
}

message GetBridgeDomainRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetBridgeDomainResponse {
    BridgeDomain bridge_domain = 1 [(gogoproto.customname) = "BridgeDomain", (gogoproto.jsontag) = "bridge-domain"];
}



message ConfigNode {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    string config_node_ip_address = 9 [(gogoproto.customname) = "ConfigNodeIPAddress"]; 


}



message CreateConfigNodeRequest {
    ConfigNode config_node = 1 [(gogoproto.customname) = "ConfigNode",(gogoproto.jsontag) = "config-node"];
}

message CreateConfigNodeResponse {
    ConfigNode config_node = 1 [(gogoproto.customname) = "ConfigNode" ,(gogoproto.jsontag) = "config-node"];
}

message UpdateConfigNodeRequest {
    ConfigNode config_node = 1 [(gogoproto.customname) = "ConfigNode",(gogoproto.jsontag) = "config-node"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateConfigNodeResponse {
    ConfigNode config_node = 1 [(gogoproto.customname) = "ConfigNode",(gogoproto.jsontag) = "config-node"];
}

message DeleteConfigNodeRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteConfigNodeResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListConfigNodeRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListConfigNodeResponse {
    repeated ConfigNode config_nodes = 1 [(gogoproto.customname) = "ConfigNodes", (gogoproto.jsontag) = "config-nodes"];
}

message GetConfigNodeRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetConfigNodeResponse {
    ConfigNode config_node = 1 [(gogoproto.customname) = "ConfigNode", (gogoproto.jsontag) = "config-node"];
}



message ConfigRoot {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"]; 

    repeated ConfigRootTagRef tag_refs = 1009 [(gogoproto.customname) = "TagRefs"];

    
    repeated Domain domains = 3010 [(gogoproto.customname) = "Domains"];
    
    repeated GlobalSystemConfig global_system_configs = 3011 [(gogoproto.customname) = "GlobalSystemConfigs"];
    
    repeated Tag tags = 3012 [(gogoproto.customname) = "Tags"];
}


message ConfigRootTagRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}


message CreateConfigRootRequest {
    ConfigRoot config_root = 1 [(gogoproto.customname) = "ConfigRoot",(gogoproto.jsontag) = "config-root"];
}

message CreateConfigRootResponse {
    ConfigRoot config_root = 1 [(gogoproto.customname) = "ConfigRoot" ,(gogoproto.jsontag) = "config-root"];
}

message UpdateConfigRootRequest {
    ConfigRoot config_root = 1 [(gogoproto.customname) = "ConfigRoot",(gogoproto.jsontag) = "config-root"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateConfigRootResponse {
    ConfigRoot config_root = 1 [(gogoproto.customname) = "ConfigRoot",(gogoproto.jsontag) = "config-root"];
}

message DeleteConfigRootRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteConfigRootResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListConfigRootRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListConfigRootResponse {
    repeated ConfigRoot config_roots = 1 [(gogoproto.customname) = "ConfigRoots", (gogoproto.jsontag) = "config-roots"];
}

message GetConfigRootRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetConfigRootResponse {
    ConfigRoot config_root = 1 [(gogoproto.customname) = "ConfigRoot", (gogoproto.jsontag) = "config-root"];
}



message CustomerAttachment {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"]; 

    repeated CustomerAttachmentVirtualMachineInterfaceRef virtual_machine_interface_refs = 1009 [(gogoproto.customname) = "VirtualMachineInterfaceRefs"];
    repeated CustomerAttachmentFloatingIPRef floating_ip_refs = 1010 [(gogoproto.customname) = "FloatingIPRefs"];

}


message CustomerAttachmentVirtualMachineInterfaceRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message CustomerAttachmentFloatingIPRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}


message CreateCustomerAttachmentRequest {
    CustomerAttachment customer_attachment = 1 [(gogoproto.customname) = "CustomerAttachment",(gogoproto.jsontag) = "customer-attachment"];
}

message CreateCustomerAttachmentResponse {
    CustomerAttachment customer_attachment = 1 [(gogoproto.customname) = "CustomerAttachment" ,(gogoproto.jsontag) = "customer-attachment"];
}

message UpdateCustomerAttachmentRequest {
    CustomerAttachment customer_attachment = 1 [(gogoproto.customname) = "CustomerAttachment",(gogoproto.jsontag) = "customer-attachment"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateCustomerAttachmentResponse {
    CustomerAttachment customer_attachment = 1 [(gogoproto.customname) = "CustomerAttachment",(gogoproto.jsontag) = "customer-attachment"];
}

message DeleteCustomerAttachmentRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteCustomerAttachmentResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListCustomerAttachmentRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListCustomerAttachmentResponse {
    repeated CustomerAttachment customer_attachments = 1 [(gogoproto.customname) = "CustomerAttachments", (gogoproto.jsontag) = "customer-attachments"];
}

message GetCustomerAttachmentRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetCustomerAttachmentResponse {
    CustomerAttachment customer_attachment = 1 [(gogoproto.customname) = "CustomerAttachment", (gogoproto.jsontag) = "customer-attachment"];
}



message DatabaseNode {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    string database_node_ip_address = 9 [(gogoproto.customname) = "DatabaseNodeIPAddress"]; 


}



message CreateDatabaseNodeRequest {
    DatabaseNode database_node = 1 [(gogoproto.customname) = "DatabaseNode",(gogoproto.jsontag) = "database-node"];
}

message CreateDatabaseNodeResponse {
    DatabaseNode database_node = 1 [(gogoproto.customname) = "DatabaseNode" ,(gogoproto.jsontag) = "database-node"];
}

message UpdateDatabaseNodeRequest {
    DatabaseNode database_node = 1 [(gogoproto.customname) = "DatabaseNode",(gogoproto.jsontag) = "database-node"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateDatabaseNodeResponse {
    DatabaseNode database_node = 1 [(gogoproto.customname) = "DatabaseNode",(gogoproto.jsontag) = "database-node"];
}

message DeleteDatabaseNodeRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteDatabaseNodeResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListDatabaseNodeRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListDatabaseNodeResponse {
    repeated DatabaseNode database_nodes = 1 [(gogoproto.customname) = "DatabaseNodes", (gogoproto.jsontag) = "database-nodes"];
}

message GetDatabaseNodeRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetDatabaseNodeResponse {
    DatabaseNode database_node = 1 [(gogoproto.customname) = "DatabaseNode", (gogoproto.jsontag) = "database-node"];
}



message DiscoveryServiceAssignment {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"]; 


    
    repeated DsaRule dsa_rules = 3009 [(gogoproto.customname) = "DsaRules"];
}



message CreateDiscoveryServiceAssignmentRequest {
    DiscoveryServiceAssignment discovery_service_assignment = 1 [(gogoproto.customname) = "DiscoveryServiceAssignment",(gogoproto.jsontag) = "discovery-service-assignment"];
}

message CreateDiscoveryServiceAssignmentResponse {
    DiscoveryServiceAssignment discovery_service_assignment = 1 [(gogoproto.customname) = "DiscoveryServiceAssignment" ,(gogoproto.jsontag) = "discovery-service-assignment"];
}

message UpdateDiscoveryServiceAssignmentRequest {
    DiscoveryServiceAssignment discovery_service_assignment = 1 [(gogoproto.customname) = "DiscoveryServiceAssignment",(gogoproto.jsontag) = "discovery-service-assignment"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateDiscoveryServiceAssignmentResponse {
    DiscoveryServiceAssignment discovery_service_assignment = 1 [(gogoproto.customname) = "DiscoveryServiceAssignment",(gogoproto.jsontag) = "discovery-service-assignment"];
}

message DeleteDiscoveryServiceAssignmentRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteDiscoveryServiceAssignmentResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListDiscoveryServiceAssignmentRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListDiscoveryServiceAssignmentResponse {
    repeated DiscoveryServiceAssignment discovery_service_assignments = 1 [(gogoproto.customname) = "DiscoveryServiceAssignments", (gogoproto.jsontag) = "discovery-service-assignments"];
}

message GetDiscoveryServiceAssignmentRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetDiscoveryServiceAssignmentResponse {
    DiscoveryServiceAssignment discovery_service_assignment = 1 [(gogoproto.customname) = "DiscoveryServiceAssignment", (gogoproto.jsontag) = "discovery-service-assignment"];
}



message Domain {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    DomainLimitsType domain_limits = 9 [(gogoproto.customname) = "DomainLimits"]; 


    
    repeated APIAccessList api_access_lists = 3010 [(gogoproto.customname) = "APIAccessLists"];
    
    repeated Namespace namespaces = 3011 [(gogoproto.customname) = "Namespaces"];
    
    repeated Project projects = 3012 [(gogoproto.customname) = "Projects"];
    
    repeated ServiceTemplate service_templates = 3013 [(gogoproto.customname) = "ServiceTemplates"];
    
    repeated VirtualDNS virtual_DNSs = 3014 [(gogoproto.customname) = "VirtualDNSs"];
}



message CreateDomainRequest {
    Domain domain = 1 [(gogoproto.customname) = "Domain",(gogoproto.jsontag) = "domain"];
}

message CreateDomainResponse {
    Domain domain = 1 [(gogoproto.customname) = "Domain" ,(gogoproto.jsontag) = "domain"];
}

message UpdateDomainRequest {
    Domain domain = 1 [(gogoproto.customname) = "Domain",(gogoproto.jsontag) = "domain"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateDomainResponse {
    Domain domain = 1 [(gogoproto.customname) = "Domain",(gogoproto.jsontag) = "domain"];
}

message DeleteDomainRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteDomainResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListDomainRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListDomainResponse {
    repeated Domain domains = 1 [(gogoproto.customname) = "Domains", (gogoproto.jsontag) = "domains"];
}

message GetDomainRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetDomainResponse {
    Domain domain = 1 [(gogoproto.customname) = "Domain", (gogoproto.jsontag) = "domain"];
}



message DsaRule {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    DiscoveryServiceAssignmentType dsa_rule_entry = 9 [(gogoproto.customname) = "DsaRuleEntry"]; 


}



message CreateDsaRuleRequest {
    DsaRule dsa_rule = 1 [(gogoproto.customname) = "DsaRule",(gogoproto.jsontag) = "dsa-rule"];
}

message CreateDsaRuleResponse {
    DsaRule dsa_rule = 1 [(gogoproto.customname) = "DsaRule" ,(gogoproto.jsontag) = "dsa-rule"];
}

message UpdateDsaRuleRequest {
    DsaRule dsa_rule = 1 [(gogoproto.customname) = "DsaRule",(gogoproto.jsontag) = "dsa-rule"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateDsaRuleResponse {
    DsaRule dsa_rule = 1 [(gogoproto.customname) = "DsaRule",(gogoproto.jsontag) = "dsa-rule"];
}

message DeleteDsaRuleRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteDsaRuleResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListDsaRuleRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListDsaRuleResponse {
    repeated DsaRule dsa_rules = 1 [(gogoproto.customname) = "DsaRules", (gogoproto.jsontag) = "dsa-rules"];
}

message GetDsaRuleRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetDsaRuleResponse {
    DsaRule dsa_rule = 1 [(gogoproto.customname) = "DsaRule", (gogoproto.jsontag) = "dsa-rule"];
}



message E2ServiceProvider {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    bool e2_service_provider_promiscuous = 9 [(gogoproto.customname) = "E2ServiceProviderPromiscuous"]; 

    repeated E2ServiceProviderPhysicalRouterRef physical_router_refs = 1010 [(gogoproto.customname) = "PhysicalRouterRefs"];
    repeated E2ServiceProviderPeeringPolicyRef peering_policy_refs = 1011 [(gogoproto.customname) = "PeeringPolicyRefs"];

}


message E2ServiceProviderPhysicalRouterRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message E2ServiceProviderPeeringPolicyRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}


message CreateE2ServiceProviderRequest {
    E2ServiceProvider e2_service_provider = 1 [(gogoproto.customname) = "E2ServiceProvider",(gogoproto.jsontag) = "e2-service-provider"];
}

message CreateE2ServiceProviderResponse {
    E2ServiceProvider e2_service_provider = 1 [(gogoproto.customname) = "E2ServiceProvider" ,(gogoproto.jsontag) = "e2-service-provider"];
}

message UpdateE2ServiceProviderRequest {
    E2ServiceProvider e2_service_provider = 1 [(gogoproto.customname) = "E2ServiceProvider",(gogoproto.jsontag) = "e2-service-provider"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateE2ServiceProviderResponse {
    E2ServiceProvider e2_service_provider = 1 [(gogoproto.customname) = "E2ServiceProvider",(gogoproto.jsontag) = "e2-service-provider"];
}

message DeleteE2ServiceProviderRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteE2ServiceProviderResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListE2ServiceProviderRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListE2ServiceProviderResponse {
    repeated E2ServiceProvider e2_service_providers = 1 [(gogoproto.customname) = "E2ServiceProviders", (gogoproto.jsontag) = "e2-service-providers"];
}

message GetE2ServiceProviderRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetE2ServiceProviderResponse {
    E2ServiceProvider e2_service_provider = 1 [(gogoproto.customname) = "E2ServiceProvider", (gogoproto.jsontag) = "e2-service-provider"];
}



message FirewallPolicy {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"]; 

    repeated FirewallPolicyFirewallRuleRef firewall_rule_refs = 1009 [(gogoproto.customname) = "FirewallRuleRefs"];
    repeated FirewallPolicySecurityLoggingObjectRef security_logging_object_refs = 1010 [(gogoproto.customname) = "SecurityLoggingObjectRefs"];

}


message FirewallPolicyFirewallRuleRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
    FirewallSequence attr = 3 [(gogoproto.customname) = "Attr"];
    
}

message FirewallPolicySecurityLoggingObjectRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}


message CreateFirewallPolicyRequest {
    FirewallPolicy firewall_policy = 1 [(gogoproto.customname) = "FirewallPolicy",(gogoproto.jsontag) = "firewall-policy"];
}

message CreateFirewallPolicyResponse {
    FirewallPolicy firewall_policy = 1 [(gogoproto.customname) = "FirewallPolicy" ,(gogoproto.jsontag) = "firewall-policy"];
}

message UpdateFirewallPolicyRequest {
    FirewallPolicy firewall_policy = 1 [(gogoproto.customname) = "FirewallPolicy",(gogoproto.jsontag) = "firewall-policy"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateFirewallPolicyResponse {
    FirewallPolicy firewall_policy = 1 [(gogoproto.customname) = "FirewallPolicy",(gogoproto.jsontag) = "firewall-policy"];
}

message DeleteFirewallPolicyRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteFirewallPolicyResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListFirewallPolicyRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListFirewallPolicyResponse {
    repeated FirewallPolicy firewall_policys = 1 [(gogoproto.customname) = "FirewallPolicys", (gogoproto.jsontag) = "firewall-policys"];
}

message GetFirewallPolicyRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetFirewallPolicyResponse {
    FirewallPolicy firewall_policy = 1 [(gogoproto.customname) = "FirewallPolicy", (gogoproto.jsontag) = "firewall-policy"];
}



message FirewallRule {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    FirewallRuleEndpointType endpoint_1 = 9 [(gogoproto.customname) = "Endpoint1"];
    FirewallRuleEndpointType endpoint_2 = 10 [(gogoproto.customname) = "Endpoint2"];
    ActionListType action_list = 11 [(gogoproto.customname) = "ActionList"];
    FirewallServiceType service = 12 [(gogoproto.customname) = "Service"];
    string direction = 13 [(gogoproto.customname) = "Direction"];
    FirewallRuleMatchTagsTypeIdList match_tag_types = 14 [(gogoproto.customname) = "MatchTagTypes"];
    FirewallRuleMatchTagsType match_tags = 15 [(gogoproto.customname) = "MatchTags"]; 

    repeated FirewallRuleVirtualNetworkRef virtual_network_refs = 1019 [(gogoproto.customname) = "VirtualNetworkRefs"];
    repeated FirewallRuleServiceGroupRef service_group_refs = 1016 [(gogoproto.customname) = "ServiceGroupRefs"];
    repeated FirewallRuleAddressGroupRef address_group_refs = 1017 [(gogoproto.customname) = "AddressGroupRefs"];
    repeated FirewallRuleSecurityLoggingObjectRef security_logging_object_refs = 1018 [(gogoproto.customname) = "SecurityLoggingObjectRefs"];

}


message FirewallRuleSecurityLoggingObjectRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message FirewallRuleVirtualNetworkRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message FirewallRuleServiceGroupRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message FirewallRuleAddressGroupRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}


message CreateFirewallRuleRequest {
    FirewallRule firewall_rule = 1 [(gogoproto.customname) = "FirewallRule",(gogoproto.jsontag) = "firewall-rule"];
}

message CreateFirewallRuleResponse {
    FirewallRule firewall_rule = 1 [(gogoproto.customname) = "FirewallRule" ,(gogoproto.jsontag) = "firewall-rule"];
}

message UpdateFirewallRuleRequest {
    FirewallRule firewall_rule = 1 [(gogoproto.customname) = "FirewallRule",(gogoproto.jsontag) = "firewall-rule"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateFirewallRuleResponse {
    FirewallRule firewall_rule = 1 [(gogoproto.customname) = "FirewallRule",(gogoproto.jsontag) = "firewall-rule"];
}

message DeleteFirewallRuleRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteFirewallRuleResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListFirewallRuleRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListFirewallRuleResponse {
    repeated FirewallRule firewall_rules = 1 [(gogoproto.customname) = "FirewallRules", (gogoproto.jsontag) = "firewall-rules"];
}

message GetFirewallRuleRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetFirewallRuleResponse {
    FirewallRule firewall_rule = 1 [(gogoproto.customname) = "FirewallRule", (gogoproto.jsontag) = "firewall-rule"];
}



message FloatingIPPool {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    FloatingIpPoolSubnetType floating_ip_pool_subnets = 9 [(gogoproto.customname) = "FloatingIPPoolSubnets"]; 


    
    repeated FloatingIP floating_ips = 3010 [(gogoproto.customname) = "FloatingIPs"];
}



message CreateFloatingIPPoolRequest {
    FloatingIPPool floating_ip_pool = 1 [(gogoproto.customname) = "FloatingIPPool",(gogoproto.jsontag) = "floating-ip-pool"];
}

message CreateFloatingIPPoolResponse {
    FloatingIPPool floating_ip_pool = 1 [(gogoproto.customname) = "FloatingIPPool" ,(gogoproto.jsontag) = "floating-ip-pool"];
}

message UpdateFloatingIPPoolRequest {
    FloatingIPPool floating_ip_pool = 1 [(gogoproto.customname) = "FloatingIPPool",(gogoproto.jsontag) = "floating-ip-pool"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateFloatingIPPoolResponse {
    FloatingIPPool floating_ip_pool = 1 [(gogoproto.customname) = "FloatingIPPool",(gogoproto.jsontag) = "floating-ip-pool"];
}

message DeleteFloatingIPPoolRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteFloatingIPPoolResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListFloatingIPPoolRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListFloatingIPPoolResponse {
    repeated FloatingIPPool floating_ip_pools = 1 [(gogoproto.customname) = "FloatingIPPools", (gogoproto.jsontag) = "floating-ip-pools"];
}

message GetFloatingIPPoolRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetFloatingIPPoolResponse {
    FloatingIPPool floating_ip_pool = 1 [(gogoproto.customname) = "FloatingIPPool", (gogoproto.jsontag) = "floating-ip-pool"];
}



message FloatingIP {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    string floating_ip_address_family = 9 [(gogoproto.customname) = "FloatingIPAddressFamily"];
    PortMappings floating_ip_port_mappings = 10 [(gogoproto.customname) = "FloatingIPPortMappings"];
    bool floating_ip_is_virtual_ip = 11 [(gogoproto.customname) = "FloatingIPIsVirtualIP"];
    string floating_ip_address = 12 [(gogoproto.customname) = "FloatingIPAddress"];
    bool floating_ip_port_mappings_enable = 13 [(gogoproto.customname) = "FloatingIPPortMappingsEnable"];
    string floating_ip_fixed_ip_address = 14 [(gogoproto.customname) = "FloatingIPFixedIPAddress"];
    string floating_ip_traffic_direction = 15 [(gogoproto.customname) = "FloatingIPTrafficDirection"]; 

    repeated FloatingIPProjectRef project_refs = 1016 [(gogoproto.customname) = "ProjectRefs"];
    repeated FloatingIPVirtualMachineInterfaceRef virtual_machine_interface_refs = 1017 [(gogoproto.customname) = "VirtualMachineInterfaceRefs"];

}


message FloatingIPProjectRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message FloatingIPVirtualMachineInterfaceRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}


message CreateFloatingIPRequest {
    FloatingIP floating_ip = 1 [(gogoproto.customname) = "FloatingIP",(gogoproto.jsontag) = "floating-ip"];
}

message CreateFloatingIPResponse {
    FloatingIP floating_ip = 1 [(gogoproto.customname) = "FloatingIP" ,(gogoproto.jsontag) = "floating-ip"];
}

message UpdateFloatingIPRequest {
    FloatingIP floating_ip = 1 [(gogoproto.customname) = "FloatingIP",(gogoproto.jsontag) = "floating-ip"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateFloatingIPResponse {
    FloatingIP floating_ip = 1 [(gogoproto.customname) = "FloatingIP",(gogoproto.jsontag) = "floating-ip"];
}

message DeleteFloatingIPRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteFloatingIPResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListFloatingIPRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListFloatingIPResponse {
    repeated FloatingIP floating_ips = 1 [(gogoproto.customname) = "FloatingIPs", (gogoproto.jsontag) = "floating-ips"];
}

message GetFloatingIPRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetFloatingIPResponse {
    FloatingIP floating_ip = 1 [(gogoproto.customname) = "FloatingIP", (gogoproto.jsontag) = "floating-ip"];
}



message ForwardingClass {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    int64 forwarding_class_dscp = 9 [(gogoproto.customname) = "ForwardingClassDSCP"];
    int64 forwarding_class_vlan_priority = 10 [(gogoproto.customname) = "ForwardingClassVlanPriority"];
    int64 forwarding_class_mpls_exp = 11 [(gogoproto.customname) = "ForwardingClassMPLSExp"];
    int64 forwarding_class_id = 12 [(gogoproto.customname) = "ForwardingClassID"]; 

    repeated ForwardingClassQosQueueRef qos_queue_refs = 1013 [(gogoproto.customname) = "QosQueueRefs"];

}


message ForwardingClassQosQueueRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}


message CreateForwardingClassRequest {
    ForwardingClass forwarding_class = 1 [(gogoproto.customname) = "ForwardingClass",(gogoproto.jsontag) = "forwarding-class"];
}

message CreateForwardingClassResponse {
    ForwardingClass forwarding_class = 1 [(gogoproto.customname) = "ForwardingClass" ,(gogoproto.jsontag) = "forwarding-class"];
}

message UpdateForwardingClassRequest {
    ForwardingClass forwarding_class = 1 [(gogoproto.customname) = "ForwardingClass",(gogoproto.jsontag) = "forwarding-class"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateForwardingClassResponse {
    ForwardingClass forwarding_class = 1 [(gogoproto.customname) = "ForwardingClass",(gogoproto.jsontag) = "forwarding-class"];
}

message DeleteForwardingClassRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteForwardingClassResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListForwardingClassRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListForwardingClassResponse {
    repeated ForwardingClass forwarding_classs = 1 [(gogoproto.customname) = "ForwardingClasss", (gogoproto.jsontag) = "forwarding-classs"];
}

message GetForwardingClassRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetForwardingClassResponse {
    ForwardingClass forwarding_class = 1 [(gogoproto.customname) = "ForwardingClass", (gogoproto.jsontag) = "forwarding-class"];
}



message GlobalQosConfig {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    ControlTrafficDscpType control_traffic_dscp = 9 [(gogoproto.customname) = "ControlTrafficDSCP"]; 


    
    repeated ForwardingClass forwarding_classs = 3010 [(gogoproto.customname) = "ForwardingClasss"];
    
    repeated QosConfig qos_configs = 3011 [(gogoproto.customname) = "QosConfigs"];
    
    repeated QosQueue qos_queues = 3012 [(gogoproto.customname) = "QosQueues"];
}



message CreateGlobalQosConfigRequest {
    GlobalQosConfig global_qos_config = 1 [(gogoproto.customname) = "GlobalQosConfig",(gogoproto.jsontag) = "global-qos-config"];
}

message CreateGlobalQosConfigResponse {
    GlobalQosConfig global_qos_config = 1 [(gogoproto.customname) = "GlobalQosConfig" ,(gogoproto.jsontag) = "global-qos-config"];
}

message UpdateGlobalQosConfigRequest {
    GlobalQosConfig global_qos_config = 1 [(gogoproto.customname) = "GlobalQosConfig",(gogoproto.jsontag) = "global-qos-config"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateGlobalQosConfigResponse {
    GlobalQosConfig global_qos_config = 1 [(gogoproto.customname) = "GlobalQosConfig",(gogoproto.jsontag) = "global-qos-config"];
}

message DeleteGlobalQosConfigRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteGlobalQosConfigResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListGlobalQosConfigRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListGlobalQosConfigResponse {
    repeated GlobalQosConfig global_qos_configs = 1 [(gogoproto.customname) = "GlobalQosConfigs", (gogoproto.jsontag) = "global-qos-configs"];
}

message GetGlobalQosConfigRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetGlobalQosConfigResponse {
    GlobalQosConfig global_qos_config = 1 [(gogoproto.customname) = "GlobalQosConfig", (gogoproto.jsontag) = "global-qos-config"];
}



message GlobalSystemConfig {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    string config_version = 9 [(gogoproto.customname) = "ConfigVersion"];
    BGPaaServiceParametersType bgpaas_parameters = 10 [(gogoproto.customname) = "BgpaasParameters"];
    bool alarm_enable = 11 [(gogoproto.customname) = "AlarmEnable"];
    MACMoveLimitControlType mac_move_control = 12 [(gogoproto.customname) = "MacMoveControl"];
    PluginProperties plugin_tuning = 13 [(gogoproto.customname) = "PluginTuning"];
    bool ibgp_auto_mesh = 14 [(gogoproto.customname) = "IbgpAutoMesh"];
    int64 mac_aging_time = 15 [(gogoproto.customname) = "MacAgingTime"];
    bool bgp_always_compare_med = 16 [(gogoproto.customname) = "BGPAlwaysCompareMed"];
    UserDefinedLogStatList user_defined_log_statistics = 17 [(gogoproto.customname) = "UserDefinedLogStatistics"];
    GracefulRestartParametersType graceful_restart_parameters = 18 [(gogoproto.customname) = "GracefulRestartParameters"];
    SubnetListType ip_fabric_subnets = 19 [(gogoproto.customname) = "IPFabricSubnets"];
    int64 autonomous_system = 20 [(gogoproto.customname) = "AutonomousSystem"];
    MACLimitControlType mac_limit_control = 21 [(gogoproto.customname) = "MacLimitControl"]; 

    repeated GlobalSystemConfigBGPRouterRef bgp_router_refs = 1022 [(gogoproto.customname) = "BGPRouterRefs"];

    
    repeated Alarm alarms = 3023 [(gogoproto.customname) = "Alarms"];
    
    repeated AnalyticsNode analytics_nodes = 3024 [(gogoproto.customname) = "AnalyticsNodes"];
    
    repeated APIAccessList api_access_lists = 3025 [(gogoproto.customname) = "APIAccessLists"];
    
    repeated ConfigNode config_nodes = 3026 [(gogoproto.customname) = "ConfigNodes"];
    
    repeated DatabaseNode database_nodes = 3027 [(gogoproto.customname) = "DatabaseNodes"];
    
    repeated GlobalQosConfig global_qos_configs = 3028 [(gogoproto.customname) = "GlobalQosConfigs"];
    
    repeated GlobalVrouterConfig global_vrouter_configs = 3029 [(gogoproto.customname) = "GlobalVrouterConfigs"];
    
    repeated PhysicalRouter physical_routers = 3030 [(gogoproto.customname) = "PhysicalRouters"];
    
    repeated ServiceApplianceSet service_appliance_sets = 3031 [(gogoproto.customname) = "ServiceApplianceSets"];
    
    repeated VirtualRouter virtual_routers = 3032 [(gogoproto.customname) = "VirtualRouters"];
}


message GlobalSystemConfigBGPRouterRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}


message CreateGlobalSystemConfigRequest {
    GlobalSystemConfig global_system_config = 1 [(gogoproto.customname) = "GlobalSystemConfig",(gogoproto.jsontag) = "global-system-config"];
}

message CreateGlobalSystemConfigResponse {
    GlobalSystemConfig global_system_config = 1 [(gogoproto.customname) = "GlobalSystemConfig" ,(gogoproto.jsontag) = "global-system-config"];
}

message UpdateGlobalSystemConfigRequest {
    GlobalSystemConfig global_system_config = 1 [(gogoproto.customname) = "GlobalSystemConfig",(gogoproto.jsontag) = "global-system-config"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateGlobalSystemConfigResponse {
    GlobalSystemConfig global_system_config = 1 [(gogoproto.customname) = "GlobalSystemConfig",(gogoproto.jsontag) = "global-system-config"];
}

message DeleteGlobalSystemConfigRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteGlobalSystemConfigResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListGlobalSystemConfigRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListGlobalSystemConfigResponse {
    repeated GlobalSystemConfig global_system_configs = 1 [(gogoproto.customname) = "GlobalSystemConfigs", (gogoproto.jsontag) = "global-system-configs"];
}

message GetGlobalSystemConfigRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetGlobalSystemConfigResponse {
    GlobalSystemConfig global_system_config = 1 [(gogoproto.customname) = "GlobalSystemConfig", (gogoproto.jsontag) = "global-system-config"];
}



message GlobalVrouterConfig {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    EcmpHashingIncludeFields ecmp_hashing_include_fields = 9 [(gogoproto.customname) = "EcmpHashingIncludeFields"];
    FlowAgingTimeoutList flow_aging_timeout_list = 10 [(gogoproto.customname) = "FlowAgingTimeoutList"];
    string forwarding_mode = 11 [(gogoproto.customname) = "ForwardingMode"];
    int64 flow_export_rate = 12 [(gogoproto.customname) = "FlowExportRate"];
    LinklocalServicesTypes linklocal_services = 13 [(gogoproto.customname) = "LinklocalServices"];
    EncapsulationPrioritiesType encapsulation_priorities = 14 [(gogoproto.customname) = "EncapsulationPriorities"];
    string vxlan_network_identifier_mode = 15 [(gogoproto.customname) = "VxlanNetworkIdentifierMode"];
    bool enable_security_logging = 16 [(gogoproto.customname) = "EnableSecurityLogging"]; 


    
    repeated SecurityLoggingObject security_logging_objects = 3017 [(gogoproto.customname) = "SecurityLoggingObjects"];
}



message CreateGlobalVrouterConfigRequest {
    GlobalVrouterConfig global_vrouter_config = 1 [(gogoproto.customname) = "GlobalVrouterConfig",(gogoproto.jsontag) = "global-vrouter-config"];
}

message CreateGlobalVrouterConfigResponse {
    GlobalVrouterConfig global_vrouter_config = 1 [(gogoproto.customname) = "GlobalVrouterConfig" ,(gogoproto.jsontag) = "global-vrouter-config"];
}

message UpdateGlobalVrouterConfigRequest {
    GlobalVrouterConfig global_vrouter_config = 1 [(gogoproto.customname) = "GlobalVrouterConfig",(gogoproto.jsontag) = "global-vrouter-config"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateGlobalVrouterConfigResponse {
    GlobalVrouterConfig global_vrouter_config = 1 [(gogoproto.customname) = "GlobalVrouterConfig",(gogoproto.jsontag) = "global-vrouter-config"];
}

message DeleteGlobalVrouterConfigRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteGlobalVrouterConfigResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListGlobalVrouterConfigRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListGlobalVrouterConfigResponse {
    repeated GlobalVrouterConfig global_vrouter_configs = 1 [(gogoproto.customname) = "GlobalVrouterConfigs", (gogoproto.jsontag) = "global-vrouter-configs"];
}

message GetGlobalVrouterConfigRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetGlobalVrouterConfigResponse {
    GlobalVrouterConfig global_vrouter_config = 1 [(gogoproto.customname) = "GlobalVrouterConfig", (gogoproto.jsontag) = "global-vrouter-config"];
}



message InstanceIP {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    bool service_health_check_ip = 9 [(gogoproto.customname) = "ServiceHealthCheckIP"];
    SubnetType secondary_ip_tracking_ip = 10 [(gogoproto.customname) = "SecondaryIPTrackingIP"];
    string instance_ip_address = 11 [(gogoproto.customname) = "InstanceIPAddress"];
    string instance_ip_mode = 12 [(gogoproto.customname) = "InstanceIPMode"];
    string subnet_uuid = 13 [(gogoproto.customname) = "SubnetUUID"];
    string instance_ip_family = 14 [(gogoproto.customname) = "InstanceIPFamily"];
    bool service_instance_ip = 15 [(gogoproto.customname) = "ServiceInstanceIP"];
    bool instance_ip_local_ip = 16 [(gogoproto.customname) = "InstanceIPLocalIP"];
    bool instance_ip_secondary = 17 [(gogoproto.customname) = "InstanceIPSecondary"]; 

    repeated InstanceIPNetworkIpamRef network_ipam_refs = 1018 [(gogoproto.customname) = "NetworkIpamRefs"];
    repeated InstanceIPVirtualNetworkRef virtual_network_refs = 1019 [(gogoproto.customname) = "VirtualNetworkRefs"];
    repeated InstanceIPVirtualMachineInterfaceRef virtual_machine_interface_refs = 1020 [(gogoproto.customname) = "VirtualMachineInterfaceRefs"];
    repeated InstanceIPPhysicalRouterRef physical_router_refs = 1021 [(gogoproto.customname) = "PhysicalRouterRefs"];
    repeated InstanceIPVirtualRouterRef virtual_router_refs = 1022 [(gogoproto.customname) = "VirtualRouterRefs"];

    
    repeated FloatingIP floating_ips = 3023 [(gogoproto.customname) = "FloatingIPs"];
}


message InstanceIPNetworkIpamRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message InstanceIPVirtualNetworkRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message InstanceIPVirtualMachineInterfaceRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message InstanceIPPhysicalRouterRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message InstanceIPVirtualRouterRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}


message CreateInstanceIPRequest {
    InstanceIP instance_ip = 1 [(gogoproto.customname) = "InstanceIP",(gogoproto.jsontag) = "instance-ip"];
}

message CreateInstanceIPResponse {
    InstanceIP instance_ip = 1 [(gogoproto.customname) = "InstanceIP" ,(gogoproto.jsontag) = "instance-ip"];
}

message UpdateInstanceIPRequest {
    InstanceIP instance_ip = 1 [(gogoproto.customname) = "InstanceIP",(gogoproto.jsontag) = "instance-ip"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateInstanceIPResponse {
    InstanceIP instance_ip = 1 [(gogoproto.customname) = "InstanceIP",(gogoproto.jsontag) = "instance-ip"];
}

message DeleteInstanceIPRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteInstanceIPResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListInstanceIPRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListInstanceIPResponse {
    repeated InstanceIP instance_ips = 1 [(gogoproto.customname) = "InstanceIPs", (gogoproto.jsontag) = "instance-ips"];
}

message GetInstanceIPRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetInstanceIPResponse {
    InstanceIP instance_ip = 1 [(gogoproto.customname) = "InstanceIP", (gogoproto.jsontag) = "instance-ip"];
}



message InterfaceRouteTable {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    RouteTableType interface_route_table_routes = 9 [(gogoproto.customname) = "InterfaceRouteTableRoutes"]; 

    repeated InterfaceRouteTableServiceInstanceRef service_instance_refs = 1010 [(gogoproto.customname) = "ServiceInstanceRefs"];

}


message InterfaceRouteTableServiceInstanceRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
    ServiceInterfaceTag attr = 3 [(gogoproto.customname) = "Attr"];
    
}


message CreateInterfaceRouteTableRequest {
    InterfaceRouteTable interface_route_table = 1 [(gogoproto.customname) = "InterfaceRouteTable",(gogoproto.jsontag) = "interface-route-table"];
}

message CreateInterfaceRouteTableResponse {
    InterfaceRouteTable interface_route_table = 1 [(gogoproto.customname) = "InterfaceRouteTable" ,(gogoproto.jsontag) = "interface-route-table"];
}

message UpdateInterfaceRouteTableRequest {
    InterfaceRouteTable interface_route_table = 1 [(gogoproto.customname) = "InterfaceRouteTable",(gogoproto.jsontag) = "interface-route-table"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateInterfaceRouteTableResponse {
    InterfaceRouteTable interface_route_table = 1 [(gogoproto.customname) = "InterfaceRouteTable",(gogoproto.jsontag) = "interface-route-table"];
}

message DeleteInterfaceRouteTableRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteInterfaceRouteTableResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListInterfaceRouteTableRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListInterfaceRouteTableResponse {
    repeated InterfaceRouteTable interface_route_tables = 1 [(gogoproto.customname) = "InterfaceRouteTables", (gogoproto.jsontag) = "interface-route-tables"];
}

message GetInterfaceRouteTableRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetInterfaceRouteTableResponse {
    InterfaceRouteTable interface_route_table = 1 [(gogoproto.customname) = "InterfaceRouteTable", (gogoproto.jsontag) = "interface-route-table"];
}



message LoadbalancerHealthmonitor {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    LoadbalancerHealthmonitorType loadbalancer_healthmonitor_properties = 9 [(gogoproto.customname) = "LoadbalancerHealthmonitorProperties"]; 


}



message CreateLoadbalancerHealthmonitorRequest {
    LoadbalancerHealthmonitor loadbalancer_healthmonitor = 1 [(gogoproto.customname) = "LoadbalancerHealthmonitor",(gogoproto.jsontag) = "loadbalancer-healthmonitor"];
}

message CreateLoadbalancerHealthmonitorResponse {
    LoadbalancerHealthmonitor loadbalancer_healthmonitor = 1 [(gogoproto.customname) = "LoadbalancerHealthmonitor" ,(gogoproto.jsontag) = "loadbalancer-healthmonitor"];
}

message UpdateLoadbalancerHealthmonitorRequest {
    LoadbalancerHealthmonitor loadbalancer_healthmonitor = 1 [(gogoproto.customname) = "LoadbalancerHealthmonitor",(gogoproto.jsontag) = "loadbalancer-healthmonitor"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateLoadbalancerHealthmonitorResponse {
    LoadbalancerHealthmonitor loadbalancer_healthmonitor = 1 [(gogoproto.customname) = "LoadbalancerHealthmonitor",(gogoproto.jsontag) = "loadbalancer-healthmonitor"];
}

message DeleteLoadbalancerHealthmonitorRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteLoadbalancerHealthmonitorResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListLoadbalancerHealthmonitorRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListLoadbalancerHealthmonitorResponse {
    repeated LoadbalancerHealthmonitor loadbalancer_healthmonitors = 1 [(gogoproto.customname) = "LoadbalancerHealthmonitors", (gogoproto.jsontag) = "loadbalancer-healthmonitors"];
}

message GetLoadbalancerHealthmonitorRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetLoadbalancerHealthmonitorResponse {
    LoadbalancerHealthmonitor loadbalancer_healthmonitor = 1 [(gogoproto.customname) = "LoadbalancerHealthmonitor", (gogoproto.jsontag) = "loadbalancer-healthmonitor"];
}



message LoadbalancerListener {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    LoadbalancerListenerType loadbalancer_listener_properties = 9 [(gogoproto.customname) = "LoadbalancerListenerProperties"]; 

    repeated LoadbalancerListenerLoadbalancerRef loadbalancer_refs = 1010 [(gogoproto.customname) = "LoadbalancerRefs"];

}


message LoadbalancerListenerLoadbalancerRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}


message CreateLoadbalancerListenerRequest {
    LoadbalancerListener loadbalancer_listener = 1 [(gogoproto.customname) = "LoadbalancerListener",(gogoproto.jsontag) = "loadbalancer-listener"];
}

message CreateLoadbalancerListenerResponse {
    LoadbalancerListener loadbalancer_listener = 1 [(gogoproto.customname) = "LoadbalancerListener" ,(gogoproto.jsontag) = "loadbalancer-listener"];
}

message UpdateLoadbalancerListenerRequest {
    LoadbalancerListener loadbalancer_listener = 1 [(gogoproto.customname) = "LoadbalancerListener",(gogoproto.jsontag) = "loadbalancer-listener"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateLoadbalancerListenerResponse {
    LoadbalancerListener loadbalancer_listener = 1 [(gogoproto.customname) = "LoadbalancerListener",(gogoproto.jsontag) = "loadbalancer-listener"];
}

message DeleteLoadbalancerListenerRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteLoadbalancerListenerResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListLoadbalancerListenerRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListLoadbalancerListenerResponse {
    repeated LoadbalancerListener loadbalancer_listeners = 1 [(gogoproto.customname) = "LoadbalancerListeners", (gogoproto.jsontag) = "loadbalancer-listeners"];
}

message GetLoadbalancerListenerRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetLoadbalancerListenerResponse {
    LoadbalancerListener loadbalancer_listener = 1 [(gogoproto.customname) = "LoadbalancerListener", (gogoproto.jsontag) = "loadbalancer-listener"];
}



message LoadbalancerMember {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    LoadbalancerMemberType loadbalancer_member_properties = 9 [(gogoproto.customname) = "LoadbalancerMemberProperties"]; 


}



message CreateLoadbalancerMemberRequest {
    LoadbalancerMember loadbalancer_member = 1 [(gogoproto.customname) = "LoadbalancerMember",(gogoproto.jsontag) = "loadbalancer-member"];
}

message CreateLoadbalancerMemberResponse {
    LoadbalancerMember loadbalancer_member = 1 [(gogoproto.customname) = "LoadbalancerMember" ,(gogoproto.jsontag) = "loadbalancer-member"];
}

message UpdateLoadbalancerMemberRequest {
    LoadbalancerMember loadbalancer_member = 1 [(gogoproto.customname) = "LoadbalancerMember",(gogoproto.jsontag) = "loadbalancer-member"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateLoadbalancerMemberResponse {
    LoadbalancerMember loadbalancer_member = 1 [(gogoproto.customname) = "LoadbalancerMember",(gogoproto.jsontag) = "loadbalancer-member"];
}

message DeleteLoadbalancerMemberRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteLoadbalancerMemberResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListLoadbalancerMemberRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListLoadbalancerMemberResponse {
    repeated LoadbalancerMember loadbalancer_members = 1 [(gogoproto.customname) = "LoadbalancerMembers", (gogoproto.jsontag) = "loadbalancer-members"];
}

message GetLoadbalancerMemberRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetLoadbalancerMemberResponse {
    LoadbalancerMember loadbalancer_member = 1 [(gogoproto.customname) = "LoadbalancerMember", (gogoproto.jsontag) = "loadbalancer-member"];
}



message LoadbalancerPool {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    LoadbalancerPoolType loadbalancer_pool_properties = 9 [(gogoproto.customname) = "LoadbalancerPoolProperties"];
    KeyValuePairs loadbalancer_pool_custom_attributes = 10 [(gogoproto.customname) = "LoadbalancerPoolCustomAttributes"];
    string loadbalancer_pool_provider = 11 [(gogoproto.customname) = "LoadbalancerPoolProvider"]; 

    repeated LoadbalancerPoolServiceInstanceRef service_instance_refs = 1015 [(gogoproto.customname) = "ServiceInstanceRefs"];
    repeated LoadbalancerPoolLoadbalancerHealthmonitorRef loadbalancer_healthmonitor_refs = 1016 [(gogoproto.customname) = "LoadbalancerHealthmonitorRefs"];
    repeated LoadbalancerPoolServiceApplianceSetRef service_appliance_set_refs = 1012 [(gogoproto.customname) = "ServiceApplianceSetRefs"];
    repeated LoadbalancerPoolVirtualMachineInterfaceRef virtual_machine_interface_refs = 1013 [(gogoproto.customname) = "VirtualMachineInterfaceRefs"];
    repeated LoadbalancerPoolLoadbalancerListenerRef loadbalancer_listener_refs = 1014 [(gogoproto.customname) = "LoadbalancerListenerRefs"];

    
    repeated LoadbalancerMember loadbalancer_members = 3017 [(gogoproto.customname) = "LoadbalancerMembers"];
}


message LoadbalancerPoolLoadbalancerListenerRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message LoadbalancerPoolServiceInstanceRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message LoadbalancerPoolLoadbalancerHealthmonitorRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message LoadbalancerPoolServiceApplianceSetRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message LoadbalancerPoolVirtualMachineInterfaceRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}


message CreateLoadbalancerPoolRequest {
    LoadbalancerPool loadbalancer_pool = 1 [(gogoproto.customname) = "LoadbalancerPool",(gogoproto.jsontag) = "loadbalancer-pool"];
}

message CreateLoadbalancerPoolResponse {
    LoadbalancerPool loadbalancer_pool = 1 [(gogoproto.customname) = "LoadbalancerPool" ,(gogoproto.jsontag) = "loadbalancer-pool"];
}

message UpdateLoadbalancerPoolRequest {
    LoadbalancerPool loadbalancer_pool = 1 [(gogoproto.customname) = "LoadbalancerPool",(gogoproto.jsontag) = "loadbalancer-pool"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateLoadbalancerPoolResponse {
    LoadbalancerPool loadbalancer_pool = 1 [(gogoproto.customname) = "LoadbalancerPool",(gogoproto.jsontag) = "loadbalancer-pool"];
}

message DeleteLoadbalancerPoolRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteLoadbalancerPoolResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListLoadbalancerPoolRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListLoadbalancerPoolResponse {
    repeated LoadbalancerPool loadbalancer_pools = 1 [(gogoproto.customname) = "LoadbalancerPools", (gogoproto.jsontag) = "loadbalancer-pools"];
}

message GetLoadbalancerPoolRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetLoadbalancerPoolResponse {
    LoadbalancerPool loadbalancer_pool = 1 [(gogoproto.customname) = "LoadbalancerPool", (gogoproto.jsontag) = "loadbalancer-pool"];
}



message Loadbalancer {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    LoadbalancerType loadbalancer_properties = 9 [(gogoproto.customname) = "LoadbalancerProperties"];
    string loadbalancer_provider = 10 [(gogoproto.customname) = "LoadbalancerProvider"]; 

    repeated LoadbalancerServiceApplianceSetRef service_appliance_set_refs = 1011 [(gogoproto.customname) = "ServiceApplianceSetRefs"];
    repeated LoadbalancerVirtualMachineInterfaceRef virtual_machine_interface_refs = 1012 [(gogoproto.customname) = "VirtualMachineInterfaceRefs"];
    repeated LoadbalancerServiceInstanceRef service_instance_refs = 1013 [(gogoproto.customname) = "ServiceInstanceRefs"];

}


message LoadbalancerServiceApplianceSetRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message LoadbalancerVirtualMachineInterfaceRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message LoadbalancerServiceInstanceRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}


message CreateLoadbalancerRequest {
    Loadbalancer loadbalancer = 1 [(gogoproto.customname) = "Loadbalancer",(gogoproto.jsontag) = "loadbalancer"];
}

message CreateLoadbalancerResponse {
    Loadbalancer loadbalancer = 1 [(gogoproto.customname) = "Loadbalancer" ,(gogoproto.jsontag) = "loadbalancer"];
}

message UpdateLoadbalancerRequest {
    Loadbalancer loadbalancer = 1 [(gogoproto.customname) = "Loadbalancer",(gogoproto.jsontag) = "loadbalancer"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateLoadbalancerResponse {
    Loadbalancer loadbalancer = 1 [(gogoproto.customname) = "Loadbalancer",(gogoproto.jsontag) = "loadbalancer"];
}

message DeleteLoadbalancerRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteLoadbalancerResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListLoadbalancerRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListLoadbalancerResponse {
    repeated Loadbalancer loadbalancers = 1 [(gogoproto.customname) = "Loadbalancers", (gogoproto.jsontag) = "loadbalancers"];
}

message GetLoadbalancerRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetLoadbalancerResponse {
    Loadbalancer loadbalancer = 1 [(gogoproto.customname) = "Loadbalancer", (gogoproto.jsontag) = "loadbalancer"];
}



message LogicalInterface {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    int64 logical_interface_vlan_tag = 9 [(gogoproto.customname) = "LogicalInterfaceVlanTag"];
    string logical_interface_type = 10 [(gogoproto.customname) = "LogicalInterfaceType"]; 

    repeated LogicalInterfaceVirtualMachineInterfaceRef virtual_machine_interface_refs = 1011 [(gogoproto.customname) = "VirtualMachineInterfaceRefs"];

}


message LogicalInterfaceVirtualMachineInterfaceRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}


message CreateLogicalInterfaceRequest {
    LogicalInterface logical_interface = 1 [(gogoproto.customname) = "LogicalInterface",(gogoproto.jsontag) = "logical-interface"];
}

message CreateLogicalInterfaceResponse {
    LogicalInterface logical_interface = 1 [(gogoproto.customname) = "LogicalInterface" ,(gogoproto.jsontag) = "logical-interface"];
}

message UpdateLogicalInterfaceRequest {
    LogicalInterface logical_interface = 1 [(gogoproto.customname) = "LogicalInterface",(gogoproto.jsontag) = "logical-interface"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateLogicalInterfaceResponse {
    LogicalInterface logical_interface = 1 [(gogoproto.customname) = "LogicalInterface",(gogoproto.jsontag) = "logical-interface"];
}

message DeleteLogicalInterfaceRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteLogicalInterfaceResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListLogicalInterfaceRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListLogicalInterfaceResponse {
    repeated LogicalInterface logical_interfaces = 1 [(gogoproto.customname) = "LogicalInterfaces", (gogoproto.jsontag) = "logical-interfaces"];
}

message GetLogicalInterfaceRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetLogicalInterfaceResponse {
    LogicalInterface logical_interface = 1 [(gogoproto.customname) = "LogicalInterface", (gogoproto.jsontag) = "logical-interface"];
}



message LogicalRouter {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    string vxlan_network_identifier = 9 [(gogoproto.customname) = "VxlanNetworkIdentifier"];
    RouteTargetList configured_route_target_list = 10 [(gogoproto.customname) = "ConfiguredRouteTargetList"]; 

    repeated LogicalRouterBGPVPNRef bgpvpn_refs = 1017 [(gogoproto.customname) = "BGPVPNRefs"];
    repeated LogicalRouterRouteTargetRef route_target_refs = 1011 [(gogoproto.customname) = "RouteTargetRefs"];
    repeated LogicalRouterVirtualMachineInterfaceRef virtual_machine_interface_refs = 1012 [(gogoproto.customname) = "VirtualMachineInterfaceRefs"];
    repeated LogicalRouterServiceInstanceRef service_instance_refs = 1013 [(gogoproto.customname) = "ServiceInstanceRefs"];
    repeated LogicalRouterRouteTableRef route_table_refs = 1014 [(gogoproto.customname) = "RouteTableRefs"];
    repeated LogicalRouterVirtualNetworkRef virtual_network_refs = 1015 [(gogoproto.customname) = "VirtualNetworkRefs"];
    repeated LogicalRouterPhysicalRouterRef physical_router_refs = 1016 [(gogoproto.customname) = "PhysicalRouterRefs"];

}


message LogicalRouterPhysicalRouterRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message LogicalRouterBGPVPNRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message LogicalRouterRouteTargetRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message LogicalRouterVirtualMachineInterfaceRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message LogicalRouterServiceInstanceRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message LogicalRouterRouteTableRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message LogicalRouterVirtualNetworkRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}


message CreateLogicalRouterRequest {
    LogicalRouter logical_router = 1 [(gogoproto.customname) = "LogicalRouter",(gogoproto.jsontag) = "logical-router"];
}

message CreateLogicalRouterResponse {
    LogicalRouter logical_router = 1 [(gogoproto.customname) = "LogicalRouter" ,(gogoproto.jsontag) = "logical-router"];
}

message UpdateLogicalRouterRequest {
    LogicalRouter logical_router = 1 [(gogoproto.customname) = "LogicalRouter",(gogoproto.jsontag) = "logical-router"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateLogicalRouterResponse {
    LogicalRouter logical_router = 1 [(gogoproto.customname) = "LogicalRouter",(gogoproto.jsontag) = "logical-router"];
}

message DeleteLogicalRouterRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteLogicalRouterResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListLogicalRouterRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListLogicalRouterResponse {
    repeated LogicalRouter logical_routers = 1 [(gogoproto.customname) = "LogicalRouters", (gogoproto.jsontag) = "logical-routers"];
}

message GetLogicalRouterRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetLogicalRouterResponse {
    LogicalRouter logical_router = 1 [(gogoproto.customname) = "LogicalRouter", (gogoproto.jsontag) = "logical-router"];
}



message Namespace {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    SubnetType namespace_cidr = 9 [(gogoproto.customname) = "NamespaceCidr"]; 


}



message CreateNamespaceRequest {
    Namespace namespace = 1 [(gogoproto.customname) = "Namespace",(gogoproto.jsontag) = "namespace"];
}

message CreateNamespaceResponse {
    Namespace namespace = 1 [(gogoproto.customname) = "Namespace" ,(gogoproto.jsontag) = "namespace"];
}

message UpdateNamespaceRequest {
    Namespace namespace = 1 [(gogoproto.customname) = "Namespace",(gogoproto.jsontag) = "namespace"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateNamespaceResponse {
    Namespace namespace = 1 [(gogoproto.customname) = "Namespace",(gogoproto.jsontag) = "namespace"];
}

message DeleteNamespaceRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteNamespaceResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListNamespaceRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListNamespaceResponse {
    repeated Namespace namespaces = 1 [(gogoproto.customname) = "Namespaces", (gogoproto.jsontag) = "namespaces"];
}

message GetNamespaceRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetNamespaceResponse {
    Namespace namespace = 1 [(gogoproto.customname) = "Namespace", (gogoproto.jsontag) = "namespace"];
}



message NetworkDeviceConfig {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"]; 

    repeated NetworkDeviceConfigPhysicalRouterRef physical_router_refs = 1009 [(gogoproto.customname) = "PhysicalRouterRefs"];

}


message NetworkDeviceConfigPhysicalRouterRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}


message CreateNetworkDeviceConfigRequest {
    NetworkDeviceConfig network_device_config = 1 [(gogoproto.customname) = "NetworkDeviceConfig",(gogoproto.jsontag) = "network-device-config"];
}

message CreateNetworkDeviceConfigResponse {
    NetworkDeviceConfig network_device_config = 1 [(gogoproto.customname) = "NetworkDeviceConfig" ,(gogoproto.jsontag) = "network-device-config"];
}

message UpdateNetworkDeviceConfigRequest {
    NetworkDeviceConfig network_device_config = 1 [(gogoproto.customname) = "NetworkDeviceConfig",(gogoproto.jsontag) = "network-device-config"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateNetworkDeviceConfigResponse {
    NetworkDeviceConfig network_device_config = 1 [(gogoproto.customname) = "NetworkDeviceConfig",(gogoproto.jsontag) = "network-device-config"];
}

message DeleteNetworkDeviceConfigRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteNetworkDeviceConfigResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListNetworkDeviceConfigRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListNetworkDeviceConfigResponse {
    repeated NetworkDeviceConfig network_device_configs = 1 [(gogoproto.customname) = "NetworkDeviceConfigs", (gogoproto.jsontag) = "network-device-configs"];
}

message GetNetworkDeviceConfigRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetNetworkDeviceConfigResponse {
    NetworkDeviceConfig network_device_config = 1 [(gogoproto.customname) = "NetworkDeviceConfig", (gogoproto.jsontag) = "network-device-config"];
}



message NetworkIpam {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    IpamType network_ipam_mgmt = 9 [(gogoproto.customname) = "NetworkIpamMGMT"];
    IpamSubnets ipam_subnets = 10 [(gogoproto.customname) = "IpamSubnets"];
    string ipam_subnet_method = 11 [(gogoproto.customname) = "IpamSubnetMethod"]; 

    repeated NetworkIpamVirtualDNSRef virtual_DNS_refs = 1012 [(gogoproto.customname) = "VirtualDNSRefs"];

}


message NetworkIpamVirtualDNSRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}


message CreateNetworkIpamRequest {
    NetworkIpam network_ipam = 1 [(gogoproto.customname) = "NetworkIpam",(gogoproto.jsontag) = "network-ipam"];
}

message CreateNetworkIpamResponse {
    NetworkIpam network_ipam = 1 [(gogoproto.customname) = "NetworkIpam" ,(gogoproto.jsontag) = "network-ipam"];
}

message UpdateNetworkIpamRequest {
    NetworkIpam network_ipam = 1 [(gogoproto.customname) = "NetworkIpam",(gogoproto.jsontag) = "network-ipam"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateNetworkIpamResponse {
    NetworkIpam network_ipam = 1 [(gogoproto.customname) = "NetworkIpam",(gogoproto.jsontag) = "network-ipam"];
}

message DeleteNetworkIpamRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteNetworkIpamResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListNetworkIpamRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListNetworkIpamResponse {
    repeated NetworkIpam network_ipams = 1 [(gogoproto.customname) = "NetworkIpams", (gogoproto.jsontag) = "network-ipams"];
}

message GetNetworkIpamRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetNetworkIpamResponse {
    NetworkIpam network_ipam = 1 [(gogoproto.customname) = "NetworkIpam", (gogoproto.jsontag) = "network-ipam"];
}



message NetworkPolicy {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    PolicyEntriesType network_policy_entries = 9 [(gogoproto.customname) = "NetworkPolicyEntries"]; 


}



message CreateNetworkPolicyRequest {
    NetworkPolicy network_policy = 1 [(gogoproto.customname) = "NetworkPolicy",(gogoproto.jsontag) = "network-policy"];
}

message CreateNetworkPolicyResponse {
    NetworkPolicy network_policy = 1 [(gogoproto.customname) = "NetworkPolicy" ,(gogoproto.jsontag) = "network-policy"];
}

message UpdateNetworkPolicyRequest {
    NetworkPolicy network_policy = 1 [(gogoproto.customname) = "NetworkPolicy",(gogoproto.jsontag) = "network-policy"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateNetworkPolicyResponse {
    NetworkPolicy network_policy = 1 [(gogoproto.customname) = "NetworkPolicy",(gogoproto.jsontag) = "network-policy"];
}

message DeleteNetworkPolicyRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteNetworkPolicyResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListNetworkPolicyRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListNetworkPolicyResponse {
    repeated NetworkPolicy network_policys = 1 [(gogoproto.customname) = "NetworkPolicys", (gogoproto.jsontag) = "network-policys"];
}

message GetNetworkPolicyRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetNetworkPolicyResponse {
    NetworkPolicy network_policy = 1 [(gogoproto.customname) = "NetworkPolicy", (gogoproto.jsontag) = "network-policy"];
}



message PeeringPolicy {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    string peering_service = 9 [(gogoproto.customname) = "PeeringService"]; 


}



message CreatePeeringPolicyRequest {
    PeeringPolicy peering_policy = 1 [(gogoproto.customname) = "PeeringPolicy",(gogoproto.jsontag) = "peering-policy"];
}

message CreatePeeringPolicyResponse {
    PeeringPolicy peering_policy = 1 [(gogoproto.customname) = "PeeringPolicy" ,(gogoproto.jsontag) = "peering-policy"];
}

message UpdatePeeringPolicyRequest {
    PeeringPolicy peering_policy = 1 [(gogoproto.customname) = "PeeringPolicy",(gogoproto.jsontag) = "peering-policy"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdatePeeringPolicyResponse {
    PeeringPolicy peering_policy = 1 [(gogoproto.customname) = "PeeringPolicy",(gogoproto.jsontag) = "peering-policy"];
}

message DeletePeeringPolicyRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeletePeeringPolicyResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListPeeringPolicyRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListPeeringPolicyResponse {
    repeated PeeringPolicy peering_policys = 1 [(gogoproto.customname) = "PeeringPolicys", (gogoproto.jsontag) = "peering-policys"];
}

message GetPeeringPolicyRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetPeeringPolicyResponse {
    PeeringPolicy peering_policy = 1 [(gogoproto.customname) = "PeeringPolicy", (gogoproto.jsontag) = "peering-policy"];
}



message PhysicalInterface {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    string ethernet_segment_identifier = 9 [(gogoproto.customname) = "EthernetSegmentIdentifier"]; 

    repeated PhysicalInterfacePhysicalInterfaceRef physical_interface_refs = 1010 [(gogoproto.customname) = "PhysicalInterfaceRefs"];

    
    repeated LogicalInterface logical_interfaces = 3011 [(gogoproto.customname) = "LogicalInterfaces"];
}


message PhysicalInterfacePhysicalInterfaceRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}


message CreatePhysicalInterfaceRequest {
    PhysicalInterface physical_interface = 1 [(gogoproto.customname) = "PhysicalInterface",(gogoproto.jsontag) = "physical-interface"];
}

message CreatePhysicalInterfaceResponse {
    PhysicalInterface physical_interface = 1 [(gogoproto.customname) = "PhysicalInterface" ,(gogoproto.jsontag) = "physical-interface"];
}

message UpdatePhysicalInterfaceRequest {
    PhysicalInterface physical_interface = 1 [(gogoproto.customname) = "PhysicalInterface",(gogoproto.jsontag) = "physical-interface"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdatePhysicalInterfaceResponse {
    PhysicalInterface physical_interface = 1 [(gogoproto.customname) = "PhysicalInterface",(gogoproto.jsontag) = "physical-interface"];
}

message DeletePhysicalInterfaceRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeletePhysicalInterfaceResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListPhysicalInterfaceRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListPhysicalInterfaceResponse {
    repeated PhysicalInterface physical_interfaces = 1 [(gogoproto.customname) = "PhysicalInterfaces", (gogoproto.jsontag) = "physical-interfaces"];
}

message GetPhysicalInterfaceRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetPhysicalInterfaceResponse {
    PhysicalInterface physical_interface = 1 [(gogoproto.customname) = "PhysicalInterface", (gogoproto.jsontag) = "physical-interface"];
}



message PhysicalRouter {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    string physical_router_management_ip = 9 [(gogoproto.customname) = "PhysicalRouterManagementIP"];
    SNMPCredentials physical_router_snmp_credentials = 10 [(gogoproto.customname) = "PhysicalRouterSNMPCredentials"];
    string physical_router_role = 11 [(gogoproto.customname) = "PhysicalRouterRole"];
    UserCredentials physical_router_user_credentials = 12 [(gogoproto.customname) = "PhysicalRouterUserCredentials"];
    string physical_router_vendor_name = 13 [(gogoproto.customname) = "PhysicalRouterVendorName"];
    bool physical_router_vnc_managed = 14 [(gogoproto.customname) = "PhysicalRouterVNCManaged"];
    string physical_router_product_name = 15 [(gogoproto.customname) = "PhysicalRouterProductName"];
    bool physical_router_lldp = 16 [(gogoproto.customname) = "PhysicalRouterLLDP"];
    string physical_router_loopback_ip = 17 [(gogoproto.customname) = "PhysicalRouterLoopbackIP"];
    string physical_router_image_uri = 18 [(gogoproto.customname) = "PhysicalRouterImageURI"];
    TelemetryStateInfo telemetry_info = 19 [(gogoproto.customname) = "TelemetryInfo"];
    bool physical_router_snmp = 20 [(gogoproto.customname) = "PhysicalRouterSNMP"];
    string physical_router_dataplane_ip = 21 [(gogoproto.customname) = "PhysicalRouterDataplaneIP"];
    JunosServicePorts physical_router_junos_service_ports = 22 [(gogoproto.customname) = "PhysicalRouterJunosServicePorts"]; 

    repeated PhysicalRouterVirtualNetworkRef virtual_network_refs = 1023 [(gogoproto.customname) = "VirtualNetworkRefs"];
    repeated PhysicalRouterBGPRouterRef bgp_router_refs = 1024 [(gogoproto.customname) = "BGPRouterRefs"];
    repeated PhysicalRouterVirtualRouterRef virtual_router_refs = 1025 [(gogoproto.customname) = "VirtualRouterRefs"];

    
    repeated LogicalInterface logical_interfaces = 3026 [(gogoproto.customname) = "LogicalInterfaces"];
    
    repeated PhysicalInterface physical_interfaces = 3027 [(gogoproto.customname) = "PhysicalInterfaces"];
}


message PhysicalRouterVirtualNetworkRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message PhysicalRouterBGPRouterRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message PhysicalRouterVirtualRouterRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}


message CreatePhysicalRouterRequest {
    PhysicalRouter physical_router = 1 [(gogoproto.customname) = "PhysicalRouter",(gogoproto.jsontag) = "physical-router"];
}

message CreatePhysicalRouterResponse {
    PhysicalRouter physical_router = 1 [(gogoproto.customname) = "PhysicalRouter" ,(gogoproto.jsontag) = "physical-router"];
}

message UpdatePhysicalRouterRequest {
    PhysicalRouter physical_router = 1 [(gogoproto.customname) = "PhysicalRouter",(gogoproto.jsontag) = "physical-router"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdatePhysicalRouterResponse {
    PhysicalRouter physical_router = 1 [(gogoproto.customname) = "PhysicalRouter",(gogoproto.jsontag) = "physical-router"];
}

message DeletePhysicalRouterRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeletePhysicalRouterResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListPhysicalRouterRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListPhysicalRouterResponse {
    repeated PhysicalRouter physical_routers = 1 [(gogoproto.customname) = "PhysicalRouters", (gogoproto.jsontag) = "physical-routers"];
}

message GetPhysicalRouterRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetPhysicalRouterResponse {
    PhysicalRouter physical_router = 1 [(gogoproto.customname) = "PhysicalRouter", (gogoproto.jsontag) = "physical-router"];
}



message PolicyManagement {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"]; 


    
    repeated AddressGroup address_groups = 3009 [(gogoproto.customname) = "AddressGroups"];
    
    repeated ApplicationPolicySet application_policy_sets = 3010 [(gogoproto.customname) = "ApplicationPolicySets"];
    
    repeated FirewallPolicy firewall_policys = 3011 [(gogoproto.customname) = "FirewallPolicys"];
    
    repeated FirewallRule firewall_rules = 3012 [(gogoproto.customname) = "FirewallRules"];
    
    repeated ServiceGroup service_groups = 3013 [(gogoproto.customname) = "ServiceGroups"];
}



message CreatePolicyManagementRequest {
    PolicyManagement policy_management = 1 [(gogoproto.customname) = "PolicyManagement",(gogoproto.jsontag) = "policy-management"];
}

message CreatePolicyManagementResponse {
    PolicyManagement policy_management = 1 [(gogoproto.customname) = "PolicyManagement" ,(gogoproto.jsontag) = "policy-management"];
}

message UpdatePolicyManagementRequest {
    PolicyManagement policy_management = 1 [(gogoproto.customname) = "PolicyManagement",(gogoproto.jsontag) = "policy-management"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdatePolicyManagementResponse {
    PolicyManagement policy_management = 1 [(gogoproto.customname) = "PolicyManagement",(gogoproto.jsontag) = "policy-management"];
}

message DeletePolicyManagementRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeletePolicyManagementResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListPolicyManagementRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListPolicyManagementResponse {
    repeated PolicyManagement policy_managements = 1 [(gogoproto.customname) = "PolicyManagements", (gogoproto.jsontag) = "policy-managements"];
}

message GetPolicyManagementRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetPolicyManagementResponse {
    PolicyManagement policy_management = 1 [(gogoproto.customname) = "PolicyManagement", (gogoproto.jsontag) = "policy-management"];
}



message PortTuple {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"]; 


}



message CreatePortTupleRequest {
    PortTuple port_tuple = 1 [(gogoproto.customname) = "PortTuple",(gogoproto.jsontag) = "port-tuple"];
}

message CreatePortTupleResponse {
    PortTuple port_tuple = 1 [(gogoproto.customname) = "PortTuple" ,(gogoproto.jsontag) = "port-tuple"];
}

message UpdatePortTupleRequest {
    PortTuple port_tuple = 1 [(gogoproto.customname) = "PortTuple",(gogoproto.jsontag) = "port-tuple"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdatePortTupleResponse {
    PortTuple port_tuple = 1 [(gogoproto.customname) = "PortTuple",(gogoproto.jsontag) = "port-tuple"];
}

message DeletePortTupleRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeletePortTupleResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListPortTupleRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListPortTupleResponse {
    repeated PortTuple port_tuples = 1 [(gogoproto.customname) = "PortTuples", (gogoproto.jsontag) = "port-tuples"];
}

message GetPortTupleRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetPortTupleResponse {
    PortTuple port_tuple = 1 [(gogoproto.customname) = "PortTuple", (gogoproto.jsontag) = "port-tuple"];
}



message Project {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    bool vxlan_routing = 9 [(gogoproto.customname) = "VxlanRouting"];
    bool alarm_enable = 10 [(gogoproto.customname) = "AlarmEnable"];
    QuotaType quota = 11 [(gogoproto.customname) = "Quota"]; 

    repeated ProjectAliasIPPoolRef alias_ip_pool_refs = 1012 [(gogoproto.customname) = "AliasIPPoolRefs"];
    repeated ProjectNamespaceRef namespace_refs = 1013 [(gogoproto.customname) = "NamespaceRefs"];
    repeated ProjectApplicationPolicySetRef application_policy_set_refs = 1014 [(gogoproto.customname) = "ApplicationPolicySetRefs"];
    repeated ProjectFloatingIPPoolRef floating_ip_pool_refs = 1015 [(gogoproto.customname) = "FloatingIPPoolRefs"];

    
    repeated AddressGroup address_groups = 3016 [(gogoproto.customname) = "AddressGroups"];
    
    repeated Alarm alarms = 3017 [(gogoproto.customname) = "Alarms"];
    
    repeated APIAccessList api_access_lists = 3018 [(gogoproto.customname) = "APIAccessLists"];
    
    repeated ApplicationPolicySet application_policy_sets = 3019 [(gogoproto.customname) = "ApplicationPolicySets"];
    
    repeated BGPAsAService bgp_as_a_services = 3020 [(gogoproto.customname) = "BGPAsAServices"];
    
    repeated BGPVPN bgpvpns = 3021 [(gogoproto.customname) = "BGPVPNs"];
    
    repeated FirewallPolicy firewall_policys = 3022 [(gogoproto.customname) = "FirewallPolicys"];
    
    repeated FirewallRule firewall_rules = 3023 [(gogoproto.customname) = "FirewallRules"];
    
    repeated InterfaceRouteTable interface_route_tables = 3024 [(gogoproto.customname) = "InterfaceRouteTables"];
    
    repeated LoadbalancerHealthmonitor loadbalancer_healthmonitors = 3025 [(gogoproto.customname) = "LoadbalancerHealthmonitors"];
    
    repeated LoadbalancerListener loadbalancer_listeners = 3026 [(gogoproto.customname) = "LoadbalancerListeners"];
    
    repeated LoadbalancerPool loadbalancer_pools = 3027 [(gogoproto.customname) = "LoadbalancerPools"];
    
    repeated Loadbalancer loadbalancers = 3028 [(gogoproto.customname) = "Loadbalancers"];
    
    repeated LogicalRouter logical_routers = 3029 [(gogoproto.customname) = "LogicalRouters"];
    
    repeated NetworkIpam network_ipams = 3030 [(gogoproto.customname) = "NetworkIpams"];
    
    repeated NetworkPolicy network_policys = 3031 [(gogoproto.customname) = "NetworkPolicys"];
    
    repeated QosConfig qos_configs = 3032 [(gogoproto.customname) = "QosConfigs"];
    
    repeated RouteAggregate route_aggregates = 3033 [(gogoproto.customname) = "RouteAggregates"];
    
    repeated RouteTable route_tables = 3034 [(gogoproto.customname) = "RouteTables"];
    
    repeated RoutingPolicy routing_policys = 3035 [(gogoproto.customname) = "RoutingPolicys"];
    
    repeated SecurityGroup security_groups = 3036 [(gogoproto.customname) = "SecurityGroups"];
    
    repeated SecurityLoggingObject security_logging_objects = 3037 [(gogoproto.customname) = "SecurityLoggingObjects"];
    
    repeated ServiceGroup service_groups = 3038 [(gogoproto.customname) = "ServiceGroups"];
    
    repeated ServiceHealthCheck service_health_checks = 3039 [(gogoproto.customname) = "ServiceHealthChecks"];
    
    repeated ServiceInstance service_instances = 3040 [(gogoproto.customname) = "ServiceInstances"];
    
    repeated Tag tags = 3041 [(gogoproto.customname) = "Tags"];
    
    repeated User users = 3042 [(gogoproto.customname) = "Users"];
    
    repeated VirtualIP virtual_ips = 3043 [(gogoproto.customname) = "VirtualIPs"];
    
    repeated VirtualMachineInterface virtual_machine_interfaces = 3044 [(gogoproto.customname) = "VirtualMachineInterfaces"];
    
    repeated VirtualNetwork virtual_networks = 3045 [(gogoproto.customname) = "VirtualNetworks"];
}


message ProjectNamespaceRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
    SubnetType attr = 3 [(gogoproto.customname) = "Attr"];
    
}

message ProjectApplicationPolicySetRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message ProjectFloatingIPPoolRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message ProjectAliasIPPoolRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}


message CreateProjectRequest {
    Project project = 1 [(gogoproto.customname) = "Project",(gogoproto.jsontag) = "project"];
}

message CreateProjectResponse {
    Project project = 1 [(gogoproto.customname) = "Project" ,(gogoproto.jsontag) = "project"];
}

message UpdateProjectRequest {
    Project project = 1 [(gogoproto.customname) = "Project",(gogoproto.jsontag) = "project"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateProjectResponse {
    Project project = 1 [(gogoproto.customname) = "Project",(gogoproto.jsontag) = "project"];
}

message DeleteProjectRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteProjectResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListProjectRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListProjectResponse {
    repeated Project projects = 1 [(gogoproto.customname) = "Projects", (gogoproto.jsontag) = "projects"];
}

message GetProjectRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetProjectResponse {
    Project project = 1 [(gogoproto.customname) = "Project", (gogoproto.jsontag) = "project"];
}



message ProviderAttachment {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"]; 

    repeated ProviderAttachmentVirtualRouterRef virtual_router_refs = 1009 [(gogoproto.customname) = "VirtualRouterRefs"];

}


message ProviderAttachmentVirtualRouterRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}


message CreateProviderAttachmentRequest {
    ProviderAttachment provider_attachment = 1 [(gogoproto.customname) = "ProviderAttachment",(gogoproto.jsontag) = "provider-attachment"];
}

message CreateProviderAttachmentResponse {
    ProviderAttachment provider_attachment = 1 [(gogoproto.customname) = "ProviderAttachment" ,(gogoproto.jsontag) = "provider-attachment"];
}

message UpdateProviderAttachmentRequest {
    ProviderAttachment provider_attachment = 1 [(gogoproto.customname) = "ProviderAttachment",(gogoproto.jsontag) = "provider-attachment"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateProviderAttachmentResponse {
    ProviderAttachment provider_attachment = 1 [(gogoproto.customname) = "ProviderAttachment",(gogoproto.jsontag) = "provider-attachment"];
}

message DeleteProviderAttachmentRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteProviderAttachmentResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListProviderAttachmentRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListProviderAttachmentResponse {
    repeated ProviderAttachment provider_attachments = 1 [(gogoproto.customname) = "ProviderAttachments", (gogoproto.jsontag) = "provider-attachments"];
}

message GetProviderAttachmentRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetProviderAttachmentResponse {
    ProviderAttachment provider_attachment = 1 [(gogoproto.customname) = "ProviderAttachment", (gogoproto.jsontag) = "provider-attachment"];
}



message QosConfig {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    string qos_config_type = 9 [(gogoproto.customname) = "QosConfigType"];
    QosIdForwardingClassPairs mpls_exp_entries = 10 [(gogoproto.customname) = "MPLSExpEntries"];
    QosIdForwardingClassPairs vlan_priority_entries = 11 [(gogoproto.customname) = "VlanPriorityEntries"];
    int64 default_forwarding_class_id = 12 [(gogoproto.customname) = "DefaultForwardingClassID"];
    QosIdForwardingClassPairs dscp_entries = 13 [(gogoproto.customname) = "DSCPEntries"]; 

    repeated QosConfigGlobalSystemConfigRef global_system_config_refs = 1014 [(gogoproto.customname) = "GlobalSystemConfigRefs"];

}


message QosConfigGlobalSystemConfigRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}


message CreateQosConfigRequest {
    QosConfig qos_config = 1 [(gogoproto.customname) = "QosConfig",(gogoproto.jsontag) = "qos-config"];
}

message CreateQosConfigResponse {
    QosConfig qos_config = 1 [(gogoproto.customname) = "QosConfig" ,(gogoproto.jsontag) = "qos-config"];
}

message UpdateQosConfigRequest {
    QosConfig qos_config = 1 [(gogoproto.customname) = "QosConfig",(gogoproto.jsontag) = "qos-config"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateQosConfigResponse {
    QosConfig qos_config = 1 [(gogoproto.customname) = "QosConfig",(gogoproto.jsontag) = "qos-config"];
}

message DeleteQosConfigRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteQosConfigResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListQosConfigRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListQosConfigResponse {
    repeated QosConfig qos_configs = 1 [(gogoproto.customname) = "QosConfigs", (gogoproto.jsontag) = "qos-configs"];
}

message GetQosConfigRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetQosConfigResponse {
    QosConfig qos_config = 1 [(gogoproto.customname) = "QosConfig", (gogoproto.jsontag) = "qos-config"];
}



message QosQueue {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    int64 qos_queue_identifier = 9 [(gogoproto.customname) = "QosQueueIdentifier"];
    int64 max_bandwidth = 10 [(gogoproto.customname) = "MaxBandwidth"];
    int64 min_bandwidth = 11 [(gogoproto.customname) = "MinBandwidth"]; 


}



message CreateQosQueueRequest {
    QosQueue qos_queue = 1 [(gogoproto.customname) = "QosQueue",(gogoproto.jsontag) = "qos-queue"];
}

message CreateQosQueueResponse {
    QosQueue qos_queue = 1 [(gogoproto.customname) = "QosQueue" ,(gogoproto.jsontag) = "qos-queue"];
}

message UpdateQosQueueRequest {
    QosQueue qos_queue = 1 [(gogoproto.customname) = "QosQueue",(gogoproto.jsontag) = "qos-queue"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateQosQueueResponse {
    QosQueue qos_queue = 1 [(gogoproto.customname) = "QosQueue",(gogoproto.jsontag) = "qos-queue"];
}

message DeleteQosQueueRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteQosQueueResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListQosQueueRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListQosQueueResponse {
    repeated QosQueue qos_queues = 1 [(gogoproto.customname) = "QosQueues", (gogoproto.jsontag) = "qos-queues"];
}

message GetQosQueueRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetQosQueueResponse {
    QosQueue qos_queue = 1 [(gogoproto.customname) = "QosQueue", (gogoproto.jsontag) = "qos-queue"];
}



message RouteAggregate {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"]; 

    repeated RouteAggregateServiceInstanceRef service_instance_refs = 1009 [(gogoproto.customname) = "ServiceInstanceRefs"];

}


message RouteAggregateServiceInstanceRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
    ServiceInterfaceTag attr = 3 [(gogoproto.customname) = "Attr"];
    
}


message CreateRouteAggregateRequest {
    RouteAggregate route_aggregate = 1 [(gogoproto.customname) = "RouteAggregate",(gogoproto.jsontag) = "route-aggregate"];
}

message CreateRouteAggregateResponse {
    RouteAggregate route_aggregate = 1 [(gogoproto.customname) = "RouteAggregate" ,(gogoproto.jsontag) = "route-aggregate"];
}

message UpdateRouteAggregateRequest {
    RouteAggregate route_aggregate = 1 [(gogoproto.customname) = "RouteAggregate",(gogoproto.jsontag) = "route-aggregate"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateRouteAggregateResponse {
    RouteAggregate route_aggregate = 1 [(gogoproto.customname) = "RouteAggregate",(gogoproto.jsontag) = "route-aggregate"];
}

message DeleteRouteAggregateRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteRouteAggregateResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListRouteAggregateRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListRouteAggregateResponse {
    repeated RouteAggregate route_aggregates = 1 [(gogoproto.customname) = "RouteAggregates", (gogoproto.jsontag) = "route-aggregates"];
}

message GetRouteAggregateRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetRouteAggregateResponse {
    RouteAggregate route_aggregate = 1 [(gogoproto.customname) = "RouteAggregate", (gogoproto.jsontag) = "route-aggregate"];
}



message RouteTable {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    RouteTableType routes = 9 [(gogoproto.customname) = "Routes"]; 


}



message CreateRouteTableRequest {
    RouteTable route_table = 1 [(gogoproto.customname) = "RouteTable",(gogoproto.jsontag) = "route-table"];
}

message CreateRouteTableResponse {
    RouteTable route_table = 1 [(gogoproto.customname) = "RouteTable" ,(gogoproto.jsontag) = "route-table"];
}

message UpdateRouteTableRequest {
    RouteTable route_table = 1 [(gogoproto.customname) = "RouteTable",(gogoproto.jsontag) = "route-table"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateRouteTableResponse {
    RouteTable route_table = 1 [(gogoproto.customname) = "RouteTable",(gogoproto.jsontag) = "route-table"];
}

message DeleteRouteTableRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteRouteTableResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListRouteTableRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListRouteTableResponse {
    repeated RouteTable route_tables = 1 [(gogoproto.customname) = "RouteTables", (gogoproto.jsontag) = "route-tables"];
}

message GetRouteTableRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetRouteTableResponse {
    RouteTable route_table = 1 [(gogoproto.customname) = "RouteTable", (gogoproto.jsontag) = "route-table"];
}



message RouteTarget {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"]; 


}



message CreateRouteTargetRequest {
    RouteTarget route_target = 1 [(gogoproto.customname) = "RouteTarget",(gogoproto.jsontag) = "route-target"];
}

message CreateRouteTargetResponse {
    RouteTarget route_target = 1 [(gogoproto.customname) = "RouteTarget" ,(gogoproto.jsontag) = "route-target"];
}

message UpdateRouteTargetRequest {
    RouteTarget route_target = 1 [(gogoproto.customname) = "RouteTarget",(gogoproto.jsontag) = "route-target"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateRouteTargetResponse {
    RouteTarget route_target = 1 [(gogoproto.customname) = "RouteTarget",(gogoproto.jsontag) = "route-target"];
}

message DeleteRouteTargetRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteRouteTargetResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListRouteTargetRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListRouteTargetResponse {
    repeated RouteTarget route_targets = 1 [(gogoproto.customname) = "RouteTargets", (gogoproto.jsontag) = "route-targets"];
}

message GetRouteTargetRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetRouteTargetResponse {
    RouteTarget route_target = 1 [(gogoproto.customname) = "RouteTarget", (gogoproto.jsontag) = "route-target"];
}



message RoutingInstance {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"]; 


}



message CreateRoutingInstanceRequest {
    RoutingInstance routing_instance = 1 [(gogoproto.customname) = "RoutingInstance",(gogoproto.jsontag) = "routing-instance"];
}

message CreateRoutingInstanceResponse {
    RoutingInstance routing_instance = 1 [(gogoproto.customname) = "RoutingInstance" ,(gogoproto.jsontag) = "routing-instance"];
}

message UpdateRoutingInstanceRequest {
    RoutingInstance routing_instance = 1 [(gogoproto.customname) = "RoutingInstance",(gogoproto.jsontag) = "routing-instance"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateRoutingInstanceResponse {
    RoutingInstance routing_instance = 1 [(gogoproto.customname) = "RoutingInstance",(gogoproto.jsontag) = "routing-instance"];
}

message DeleteRoutingInstanceRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteRoutingInstanceResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListRoutingInstanceRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListRoutingInstanceResponse {
    repeated RoutingInstance routing_instances = 1 [(gogoproto.customname) = "RoutingInstances", (gogoproto.jsontag) = "routing-instances"];
}

message GetRoutingInstanceRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetRoutingInstanceResponse {
    RoutingInstance routing_instance = 1 [(gogoproto.customname) = "RoutingInstance", (gogoproto.jsontag) = "routing-instance"];
}



message RoutingPolicy {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"]; 

    repeated RoutingPolicyServiceInstanceRef service_instance_refs = 1009 [(gogoproto.customname) = "ServiceInstanceRefs"];

}


message RoutingPolicyServiceInstanceRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
    RoutingPolicyServiceInstanceType attr = 3 [(gogoproto.customname) = "Attr"];
    
}


message CreateRoutingPolicyRequest {
    RoutingPolicy routing_policy = 1 [(gogoproto.customname) = "RoutingPolicy",(gogoproto.jsontag) = "routing-policy"];
}

message CreateRoutingPolicyResponse {
    RoutingPolicy routing_policy = 1 [(gogoproto.customname) = "RoutingPolicy" ,(gogoproto.jsontag) = "routing-policy"];
}

message UpdateRoutingPolicyRequest {
    RoutingPolicy routing_policy = 1 [(gogoproto.customname) = "RoutingPolicy",(gogoproto.jsontag) = "routing-policy"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateRoutingPolicyResponse {
    RoutingPolicy routing_policy = 1 [(gogoproto.customname) = "RoutingPolicy",(gogoproto.jsontag) = "routing-policy"];
}

message DeleteRoutingPolicyRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteRoutingPolicyResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListRoutingPolicyRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListRoutingPolicyResponse {
    repeated RoutingPolicy routing_policys = 1 [(gogoproto.customname) = "RoutingPolicys", (gogoproto.jsontag) = "routing-policys"];
}

message GetRoutingPolicyRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetRoutingPolicyResponse {
    RoutingPolicy routing_policy = 1 [(gogoproto.customname) = "RoutingPolicy", (gogoproto.jsontag) = "routing-policy"];
}



message SecurityGroup {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    PolicyEntriesType security_group_entries = 9 [(gogoproto.customname) = "SecurityGroupEntries"];
    int64 configured_security_group_id = 10 [(gogoproto.customname) = "ConfiguredSecurityGroupID"];
    int64 security_group_id = 11 [(gogoproto.customname) = "SecurityGroupID"]; 


    
    repeated AccessControlList access_control_lists = 3012 [(gogoproto.customname) = "AccessControlLists"];
}



message CreateSecurityGroupRequest {
    SecurityGroup security_group = 1 [(gogoproto.customname) = "SecurityGroup",(gogoproto.jsontag) = "security-group"];
}

message CreateSecurityGroupResponse {
    SecurityGroup security_group = 1 [(gogoproto.customname) = "SecurityGroup" ,(gogoproto.jsontag) = "security-group"];
}

message UpdateSecurityGroupRequest {
    SecurityGroup security_group = 1 [(gogoproto.customname) = "SecurityGroup",(gogoproto.jsontag) = "security-group"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateSecurityGroupResponse {
    SecurityGroup security_group = 1 [(gogoproto.customname) = "SecurityGroup",(gogoproto.jsontag) = "security-group"];
}

message DeleteSecurityGroupRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteSecurityGroupResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListSecurityGroupRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListSecurityGroupResponse {
    repeated SecurityGroup security_groups = 1 [(gogoproto.customname) = "SecurityGroups", (gogoproto.jsontag) = "security-groups"];
}

message GetSecurityGroupRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetSecurityGroupResponse {
    SecurityGroup security_group = 1 [(gogoproto.customname) = "SecurityGroup", (gogoproto.jsontag) = "security-group"];
}



message SecurityLoggingObject {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    SecurityLoggingObjectRuleListType security_logging_object_rules = 9 [(gogoproto.customname) = "SecurityLoggingObjectRules"];
    int64 security_logging_object_rate = 10 [(gogoproto.customname) = "SecurityLoggingObjectRate"]; 

    repeated SecurityLoggingObjectSecurityGroupRef security_group_refs = 1011 [(gogoproto.customname) = "SecurityGroupRefs"];
    repeated SecurityLoggingObjectNetworkPolicyRef network_policy_refs = 1012 [(gogoproto.customname) = "NetworkPolicyRefs"];

}


message SecurityLoggingObjectSecurityGroupRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
    SecurityLoggingObjectRuleListType attr = 3 [(gogoproto.customname) = "Attr"];
    
}

message SecurityLoggingObjectNetworkPolicyRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
    SecurityLoggingObjectRuleListType attr = 3 [(gogoproto.customname) = "Attr"];
    
}


message CreateSecurityLoggingObjectRequest {
    SecurityLoggingObject security_logging_object = 1 [(gogoproto.customname) = "SecurityLoggingObject",(gogoproto.jsontag) = "security-logging-object"];
}

message CreateSecurityLoggingObjectResponse {
    SecurityLoggingObject security_logging_object = 1 [(gogoproto.customname) = "SecurityLoggingObject" ,(gogoproto.jsontag) = "security-logging-object"];
}

message UpdateSecurityLoggingObjectRequest {
    SecurityLoggingObject security_logging_object = 1 [(gogoproto.customname) = "SecurityLoggingObject",(gogoproto.jsontag) = "security-logging-object"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateSecurityLoggingObjectResponse {
    SecurityLoggingObject security_logging_object = 1 [(gogoproto.customname) = "SecurityLoggingObject",(gogoproto.jsontag) = "security-logging-object"];
}

message DeleteSecurityLoggingObjectRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteSecurityLoggingObjectResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListSecurityLoggingObjectRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListSecurityLoggingObjectResponse {
    repeated SecurityLoggingObject security_logging_objects = 1 [(gogoproto.customname) = "SecurityLoggingObjects", (gogoproto.jsontag) = "security-logging-objects"];
}

message GetSecurityLoggingObjectRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetSecurityLoggingObjectResponse {
    SecurityLoggingObject security_logging_object = 1 [(gogoproto.customname) = "SecurityLoggingObject", (gogoproto.jsontag) = "security-logging-object"];
}



message ServiceAppliance {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    UserCredentials service_appliance_user_credentials = 9 [(gogoproto.customname) = "ServiceApplianceUserCredentials"];
    string service_appliance_ip_address = 10 [(gogoproto.customname) = "ServiceApplianceIPAddress"];
    KeyValuePairs service_appliance_properties = 11 [(gogoproto.customname) = "ServiceApplianceProperties"]; 

    repeated ServiceAppliancePhysicalInterfaceRef physical_interface_refs = 1012 [(gogoproto.customname) = "PhysicalInterfaceRefs"];

}


message ServiceAppliancePhysicalInterfaceRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
    ServiceApplianceInterfaceType attr = 3 [(gogoproto.customname) = "Attr"];
    
}


message CreateServiceApplianceRequest {
    ServiceAppliance service_appliance = 1 [(gogoproto.customname) = "ServiceAppliance",(gogoproto.jsontag) = "service-appliance"];
}

message CreateServiceApplianceResponse {
    ServiceAppliance service_appliance = 1 [(gogoproto.customname) = "ServiceAppliance" ,(gogoproto.jsontag) = "service-appliance"];
}

message UpdateServiceApplianceRequest {
    ServiceAppliance service_appliance = 1 [(gogoproto.customname) = "ServiceAppliance",(gogoproto.jsontag) = "service-appliance"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateServiceApplianceResponse {
    ServiceAppliance service_appliance = 1 [(gogoproto.customname) = "ServiceAppliance",(gogoproto.jsontag) = "service-appliance"];
}

message DeleteServiceApplianceRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteServiceApplianceResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListServiceApplianceRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListServiceApplianceResponse {
    repeated ServiceAppliance service_appliances = 1 [(gogoproto.customname) = "ServiceAppliances", (gogoproto.jsontag) = "service-appliances"];
}

message GetServiceApplianceRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetServiceApplianceResponse {
    ServiceAppliance service_appliance = 1 [(gogoproto.customname) = "ServiceAppliance", (gogoproto.jsontag) = "service-appliance"];
}



message ServiceApplianceSet {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    KeyValuePairs service_appliance_set_properties = 9 [(gogoproto.customname) = "ServiceApplianceSetProperties"];
    string service_appliance_ha_mode = 10 [(gogoproto.customname) = "ServiceApplianceHaMode"];
    string service_appliance_driver = 11 [(gogoproto.customname) = "ServiceApplianceDriver"]; 


    
    repeated ServiceAppliance service_appliances = 3012 [(gogoproto.customname) = "ServiceAppliances"];
}



message CreateServiceApplianceSetRequest {
    ServiceApplianceSet service_appliance_set = 1 [(gogoproto.customname) = "ServiceApplianceSet",(gogoproto.jsontag) = "service-appliance-set"];
}

message CreateServiceApplianceSetResponse {
    ServiceApplianceSet service_appliance_set = 1 [(gogoproto.customname) = "ServiceApplianceSet" ,(gogoproto.jsontag) = "service-appliance-set"];
}

message UpdateServiceApplianceSetRequest {
    ServiceApplianceSet service_appliance_set = 1 [(gogoproto.customname) = "ServiceApplianceSet",(gogoproto.jsontag) = "service-appliance-set"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateServiceApplianceSetResponse {
    ServiceApplianceSet service_appliance_set = 1 [(gogoproto.customname) = "ServiceApplianceSet",(gogoproto.jsontag) = "service-appliance-set"];
}

message DeleteServiceApplianceSetRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteServiceApplianceSetResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListServiceApplianceSetRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListServiceApplianceSetResponse {
    repeated ServiceApplianceSet service_appliance_sets = 1 [(gogoproto.customname) = "ServiceApplianceSets", (gogoproto.jsontag) = "service-appliance-sets"];
}

message GetServiceApplianceSetRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetServiceApplianceSetResponse {
    ServiceApplianceSet service_appliance_set = 1 [(gogoproto.customname) = "ServiceApplianceSet", (gogoproto.jsontag) = "service-appliance-set"];
}



message ServiceConnectionModule {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    string service_type = 9 [(gogoproto.customname) = "ServiceType"];
    string e2_service = 10 [(gogoproto.customname) = "E2Service"]; 

    repeated ServiceConnectionModuleServiceObjectRef service_object_refs = 1011 [(gogoproto.customname) = "ServiceObjectRefs"];

}


message ServiceConnectionModuleServiceObjectRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}


message CreateServiceConnectionModuleRequest {
    ServiceConnectionModule service_connection_module = 1 [(gogoproto.customname) = "ServiceConnectionModule",(gogoproto.jsontag) = "service-connection-module"];
}

message CreateServiceConnectionModuleResponse {
    ServiceConnectionModule service_connection_module = 1 [(gogoproto.customname) = "ServiceConnectionModule" ,(gogoproto.jsontag) = "service-connection-module"];
}

message UpdateServiceConnectionModuleRequest {
    ServiceConnectionModule service_connection_module = 1 [(gogoproto.customname) = "ServiceConnectionModule",(gogoproto.jsontag) = "service-connection-module"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateServiceConnectionModuleResponse {
    ServiceConnectionModule service_connection_module = 1 [(gogoproto.customname) = "ServiceConnectionModule",(gogoproto.jsontag) = "service-connection-module"];
}

message DeleteServiceConnectionModuleRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteServiceConnectionModuleResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListServiceConnectionModuleRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListServiceConnectionModuleResponse {
    repeated ServiceConnectionModule service_connection_modules = 1 [(gogoproto.customname) = "ServiceConnectionModules", (gogoproto.jsontag) = "service-connection-modules"];
}

message GetServiceConnectionModuleRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetServiceConnectionModuleResponse {
    ServiceConnectionModule service_connection_module = 1 [(gogoproto.customname) = "ServiceConnectionModule", (gogoproto.jsontag) = "service-connection-module"];
}



message ServiceEndpoint {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"]; 

    repeated ServiceEndpointPhysicalRouterRef physical_router_refs = 1010 [(gogoproto.customname) = "PhysicalRouterRefs"];
    repeated ServiceEndpointServiceObjectRef service_object_refs = 1011 [(gogoproto.customname) = "ServiceObjectRefs"];
    repeated ServiceEndpointServiceConnectionModuleRef service_connection_module_refs = 1009 [(gogoproto.customname) = "ServiceConnectionModuleRefs"];

}


message ServiceEndpointPhysicalRouterRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message ServiceEndpointServiceObjectRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message ServiceEndpointServiceConnectionModuleRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}


message CreateServiceEndpointRequest {
    ServiceEndpoint service_endpoint = 1 [(gogoproto.customname) = "ServiceEndpoint",(gogoproto.jsontag) = "service-endpoint"];
}

message CreateServiceEndpointResponse {
    ServiceEndpoint service_endpoint = 1 [(gogoproto.customname) = "ServiceEndpoint" ,(gogoproto.jsontag) = "service-endpoint"];
}

message UpdateServiceEndpointRequest {
    ServiceEndpoint service_endpoint = 1 [(gogoproto.customname) = "ServiceEndpoint",(gogoproto.jsontag) = "service-endpoint"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateServiceEndpointResponse {
    ServiceEndpoint service_endpoint = 1 [(gogoproto.customname) = "ServiceEndpoint",(gogoproto.jsontag) = "service-endpoint"];
}

message DeleteServiceEndpointRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteServiceEndpointResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListServiceEndpointRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListServiceEndpointResponse {
    repeated ServiceEndpoint service_endpoints = 1 [(gogoproto.customname) = "ServiceEndpoints", (gogoproto.jsontag) = "service-endpoints"];
}

message GetServiceEndpointRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetServiceEndpointResponse {
    ServiceEndpoint service_endpoint = 1 [(gogoproto.customname) = "ServiceEndpoint", (gogoproto.jsontag) = "service-endpoint"];
}



message ServiceGroup {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    FirewallServiceGroupType service_group_firewall_service_list = 9 [(gogoproto.customname) = "ServiceGroupFirewallServiceList"]; 


}



message CreateServiceGroupRequest {
    ServiceGroup service_group = 1 [(gogoproto.customname) = "ServiceGroup",(gogoproto.jsontag) = "service-group"];
}

message CreateServiceGroupResponse {
    ServiceGroup service_group = 1 [(gogoproto.customname) = "ServiceGroup" ,(gogoproto.jsontag) = "service-group"];
}

message UpdateServiceGroupRequest {
    ServiceGroup service_group = 1 [(gogoproto.customname) = "ServiceGroup",(gogoproto.jsontag) = "service-group"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateServiceGroupResponse {
    ServiceGroup service_group = 1 [(gogoproto.customname) = "ServiceGroup",(gogoproto.jsontag) = "service-group"];
}

message DeleteServiceGroupRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteServiceGroupResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListServiceGroupRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListServiceGroupResponse {
    repeated ServiceGroup service_groups = 1 [(gogoproto.customname) = "ServiceGroups", (gogoproto.jsontag) = "service-groups"];
}

message GetServiceGroupRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetServiceGroupResponse {
    ServiceGroup service_group = 1 [(gogoproto.customname) = "ServiceGroup", (gogoproto.jsontag) = "service-group"];
}



message ServiceHealthCheck {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    ServiceHealthCheckType service_health_check_properties = 9 [(gogoproto.customname) = "ServiceHealthCheckProperties"]; 

    repeated ServiceHealthCheckServiceInstanceRef service_instance_refs = 1010 [(gogoproto.customname) = "ServiceInstanceRefs"];

}


message ServiceHealthCheckServiceInstanceRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
    ServiceInterfaceTag attr = 3 [(gogoproto.customname) = "Attr"];
    
}


message CreateServiceHealthCheckRequest {
    ServiceHealthCheck service_health_check = 1 [(gogoproto.customname) = "ServiceHealthCheck",(gogoproto.jsontag) = "service-health-check"];
}

message CreateServiceHealthCheckResponse {
    ServiceHealthCheck service_health_check = 1 [(gogoproto.customname) = "ServiceHealthCheck" ,(gogoproto.jsontag) = "service-health-check"];
}

message UpdateServiceHealthCheckRequest {
    ServiceHealthCheck service_health_check = 1 [(gogoproto.customname) = "ServiceHealthCheck",(gogoproto.jsontag) = "service-health-check"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateServiceHealthCheckResponse {
    ServiceHealthCheck service_health_check = 1 [(gogoproto.customname) = "ServiceHealthCheck",(gogoproto.jsontag) = "service-health-check"];
}

message DeleteServiceHealthCheckRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteServiceHealthCheckResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListServiceHealthCheckRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListServiceHealthCheckResponse {
    repeated ServiceHealthCheck service_health_checks = 1 [(gogoproto.customname) = "ServiceHealthChecks", (gogoproto.jsontag) = "service-health-checks"];
}

message GetServiceHealthCheckRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetServiceHealthCheckResponse {
    ServiceHealthCheck service_health_check = 1 [(gogoproto.customname) = "ServiceHealthCheck", (gogoproto.jsontag) = "service-health-check"];
}



message ServiceInstance {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    KeyValuePairs service_instance_bindings = 9 [(gogoproto.customname) = "ServiceInstanceBindings"];
    ServiceInstanceType service_instance_properties = 10 [(gogoproto.customname) = "ServiceInstanceProperties"]; 

    repeated ServiceInstanceServiceTemplateRef service_template_refs = 1011 [(gogoproto.customname) = "ServiceTemplateRefs"];
    repeated ServiceInstanceInstanceIPRef instance_ip_refs = 1012 [(gogoproto.customname) = "InstanceIPRefs"];

    
    repeated PortTuple port_tuples = 3013 [(gogoproto.customname) = "PortTuples"];
}


message ServiceInstanceServiceTemplateRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message ServiceInstanceInstanceIPRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
    ServiceInterfaceTag attr = 3 [(gogoproto.customname) = "Attr"];
    
}


message CreateServiceInstanceRequest {
    ServiceInstance service_instance = 1 [(gogoproto.customname) = "ServiceInstance",(gogoproto.jsontag) = "service-instance"];
}

message CreateServiceInstanceResponse {
    ServiceInstance service_instance = 1 [(gogoproto.customname) = "ServiceInstance" ,(gogoproto.jsontag) = "service-instance"];
}

message UpdateServiceInstanceRequest {
    ServiceInstance service_instance = 1 [(gogoproto.customname) = "ServiceInstance",(gogoproto.jsontag) = "service-instance"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateServiceInstanceResponse {
    ServiceInstance service_instance = 1 [(gogoproto.customname) = "ServiceInstance",(gogoproto.jsontag) = "service-instance"];
}

message DeleteServiceInstanceRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteServiceInstanceResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListServiceInstanceRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListServiceInstanceResponse {
    repeated ServiceInstance service_instances = 1 [(gogoproto.customname) = "ServiceInstances", (gogoproto.jsontag) = "service-instances"];
}

message GetServiceInstanceRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetServiceInstanceResponse {
    ServiceInstance service_instance = 1 [(gogoproto.customname) = "ServiceInstance", (gogoproto.jsontag) = "service-instance"];
}



message ServiceObject {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"]; 


}



message CreateServiceObjectRequest {
    ServiceObject service_object = 1 [(gogoproto.customname) = "ServiceObject",(gogoproto.jsontag) = "service-object"];
}

message CreateServiceObjectResponse {
    ServiceObject service_object = 1 [(gogoproto.customname) = "ServiceObject" ,(gogoproto.jsontag) = "service-object"];
}

message UpdateServiceObjectRequest {
    ServiceObject service_object = 1 [(gogoproto.customname) = "ServiceObject",(gogoproto.jsontag) = "service-object"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateServiceObjectResponse {
    ServiceObject service_object = 1 [(gogoproto.customname) = "ServiceObject",(gogoproto.jsontag) = "service-object"];
}

message DeleteServiceObjectRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteServiceObjectResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListServiceObjectRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListServiceObjectResponse {
    repeated ServiceObject service_objects = 1 [(gogoproto.customname) = "ServiceObjects", (gogoproto.jsontag) = "service-objects"];
}

message GetServiceObjectRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetServiceObjectResponse {
    ServiceObject service_object = 1 [(gogoproto.customname) = "ServiceObject", (gogoproto.jsontag) = "service-object"];
}



message ServiceTemplate {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    ServiceTemplateType service_template_properties = 9 [(gogoproto.customname) = "ServiceTemplateProperties"]; 

    repeated ServiceTemplateServiceApplianceSetRef service_appliance_set_refs = 1010 [(gogoproto.customname) = "ServiceApplianceSetRefs"];

}


message ServiceTemplateServiceApplianceSetRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}


message CreateServiceTemplateRequest {
    ServiceTemplate service_template = 1 [(gogoproto.customname) = "ServiceTemplate",(gogoproto.jsontag) = "service-template"];
}

message CreateServiceTemplateResponse {
    ServiceTemplate service_template = 1 [(gogoproto.customname) = "ServiceTemplate" ,(gogoproto.jsontag) = "service-template"];
}

message UpdateServiceTemplateRequest {
    ServiceTemplate service_template = 1 [(gogoproto.customname) = "ServiceTemplate",(gogoproto.jsontag) = "service-template"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateServiceTemplateResponse {
    ServiceTemplate service_template = 1 [(gogoproto.customname) = "ServiceTemplate",(gogoproto.jsontag) = "service-template"];
}

message DeleteServiceTemplateRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteServiceTemplateResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListServiceTemplateRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListServiceTemplateResponse {
    repeated ServiceTemplate service_templates = 1 [(gogoproto.customname) = "ServiceTemplates", (gogoproto.jsontag) = "service-templates"];
}

message GetServiceTemplateRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetServiceTemplateResponse {
    ServiceTemplate service_template = 1 [(gogoproto.customname) = "ServiceTemplate", (gogoproto.jsontag) = "service-template"];
}



message Subnet {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    SubnetType subnet_ip_prefix = 9 [(gogoproto.customname) = "SubnetIPPrefix"]; 

    repeated SubnetVirtualMachineInterfaceRef virtual_machine_interface_refs = 1010 [(gogoproto.customname) = "VirtualMachineInterfaceRefs"];

}


message SubnetVirtualMachineInterfaceRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}


message CreateSubnetRequest {
    Subnet subnet = 1 [(gogoproto.customname) = "Subnet",(gogoproto.jsontag) = "subnet"];
}

message CreateSubnetResponse {
    Subnet subnet = 1 [(gogoproto.customname) = "Subnet" ,(gogoproto.jsontag) = "subnet"];
}

message UpdateSubnetRequest {
    Subnet subnet = 1 [(gogoproto.customname) = "Subnet",(gogoproto.jsontag) = "subnet"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateSubnetResponse {
    Subnet subnet = 1 [(gogoproto.customname) = "Subnet",(gogoproto.jsontag) = "subnet"];
}

message DeleteSubnetRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteSubnetResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListSubnetRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListSubnetResponse {
    repeated Subnet subnets = 1 [(gogoproto.customname) = "Subnets", (gogoproto.jsontag) = "subnets"];
}

message GetSubnetRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetSubnetResponse {
    Subnet subnet = 1 [(gogoproto.customname) = "Subnet", (gogoproto.jsontag) = "subnet"];
}



message Tag {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    string tag_type_name = 9 [(gogoproto.customname) = "TagTypeName"];
    string tag_id = 10 [(gogoproto.customname) = "TagID"];
    string tag_value = 11 [(gogoproto.customname) = "TagValue"]; 

    repeated TagTagTypeRef tag_type_refs = 1012 [(gogoproto.customname) = "TagTypeRefs"];

}


message TagTagTypeRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}


message CreateTagRequest {
    Tag tag = 1 [(gogoproto.customname) = "Tag",(gogoproto.jsontag) = "tag"];
}

message CreateTagResponse {
    Tag tag = 1 [(gogoproto.customname) = "Tag" ,(gogoproto.jsontag) = "tag"];
}

message UpdateTagRequest {
    Tag tag = 1 [(gogoproto.customname) = "Tag",(gogoproto.jsontag) = "tag"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateTagResponse {
    Tag tag = 1 [(gogoproto.customname) = "Tag",(gogoproto.jsontag) = "tag"];
}

message DeleteTagRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteTagResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListTagRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListTagResponse {
    repeated Tag tags = 1 [(gogoproto.customname) = "Tags", (gogoproto.jsontag) = "tags"];
}

message GetTagRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetTagResponse {
    Tag tag = 1 [(gogoproto.customname) = "Tag", (gogoproto.jsontag) = "tag"];
}



message TagType {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    string tag_type_id = 9 [(gogoproto.customname) = "TagTypeID"]; 


}



message CreateTagTypeRequest {
    TagType tag_type = 1 [(gogoproto.customname) = "TagType",(gogoproto.jsontag) = "tag-type"];
}

message CreateTagTypeResponse {
    TagType tag_type = 1 [(gogoproto.customname) = "TagType" ,(gogoproto.jsontag) = "tag-type"];
}

message UpdateTagTypeRequest {
    TagType tag_type = 1 [(gogoproto.customname) = "TagType",(gogoproto.jsontag) = "tag-type"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateTagTypeResponse {
    TagType tag_type = 1 [(gogoproto.customname) = "TagType",(gogoproto.jsontag) = "tag-type"];
}

message DeleteTagTypeRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteTagTypeResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListTagTypeRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListTagTypeResponse {
    repeated TagType tag_types = 1 [(gogoproto.customname) = "TagTypes", (gogoproto.jsontag) = "tag-types"];
}

message GetTagTypeRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetTagTypeResponse {
    TagType tag_type = 1 [(gogoproto.customname) = "TagType", (gogoproto.jsontag) = "tag-type"];
}



message User {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    string password = 9 [(gogoproto.customname) = "Password"]; 


}



message CreateUserRequest {
    User user = 1 [(gogoproto.customname) = "User",(gogoproto.jsontag) = "user"];
}

message CreateUserResponse {
    User user = 1 [(gogoproto.customname) = "User" ,(gogoproto.jsontag) = "user"];
}

message UpdateUserRequest {
    User user = 1 [(gogoproto.customname) = "User",(gogoproto.jsontag) = "user"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateUserResponse {
    User user = 1 [(gogoproto.customname) = "User",(gogoproto.jsontag) = "user"];
}

message DeleteUserRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteUserResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListUserRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListUserResponse {
    repeated User users = 1 [(gogoproto.customname) = "Users", (gogoproto.jsontag) = "users"];
}

message GetUserRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetUserResponse {
    User user = 1 [(gogoproto.customname) = "User", (gogoproto.jsontag) = "user"];
}



message VirtualDNSRecord {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    VirtualDnsRecordType virtual_DNS_record_data = 9 [(gogoproto.customname) = "VirtualDNSRecordData"]; 


}



message CreateVirtualDNSRecordRequest {
    VirtualDNSRecord virtual_DNS_record = 1 [(gogoproto.customname) = "VirtualDNSRecord",(gogoproto.jsontag) = "virtual-DNS-record"];
}

message CreateVirtualDNSRecordResponse {
    VirtualDNSRecord virtual_DNS_record = 1 [(gogoproto.customname) = "VirtualDNSRecord" ,(gogoproto.jsontag) = "virtual-DNS-record"];
}

message UpdateVirtualDNSRecordRequest {
    VirtualDNSRecord virtual_DNS_record = 1 [(gogoproto.customname) = "VirtualDNSRecord",(gogoproto.jsontag) = "virtual-DNS-record"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateVirtualDNSRecordResponse {
    VirtualDNSRecord virtual_DNS_record = 1 [(gogoproto.customname) = "VirtualDNSRecord",(gogoproto.jsontag) = "virtual-DNS-record"];
}

message DeleteVirtualDNSRecordRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteVirtualDNSRecordResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListVirtualDNSRecordRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListVirtualDNSRecordResponse {
    repeated VirtualDNSRecord virtual_DNS_records = 1 [(gogoproto.customname) = "VirtualDNSRecords", (gogoproto.jsontag) = "virtual-DNS-records"];
}

message GetVirtualDNSRecordRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetVirtualDNSRecordResponse {
    VirtualDNSRecord virtual_DNS_record = 1 [(gogoproto.customname) = "VirtualDNSRecord", (gogoproto.jsontag) = "virtual-DNS-record"];
}



message VirtualDNS {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    VirtualDnsType virtual_DNS_data = 9 [(gogoproto.customname) = "VirtualDNSData"]; 


    
    repeated VirtualDNSRecord virtual_DNS_records = 3010 [(gogoproto.customname) = "VirtualDNSRecords"];
}



message CreateVirtualDNSRequest {
    VirtualDNS virtual_DNS = 1 [(gogoproto.customname) = "VirtualDNS",(gogoproto.jsontag) = "virtual-DNS"];
}

message CreateVirtualDNSResponse {
    VirtualDNS virtual_DNS = 1 [(gogoproto.customname) = "VirtualDNS" ,(gogoproto.jsontag) = "virtual-DNS"];
}

message UpdateVirtualDNSRequest {
    VirtualDNS virtual_DNS = 1 [(gogoproto.customname) = "VirtualDNS",(gogoproto.jsontag) = "virtual-DNS"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateVirtualDNSResponse {
    VirtualDNS virtual_DNS = 1 [(gogoproto.customname) = "VirtualDNS",(gogoproto.jsontag) = "virtual-DNS"];
}

message DeleteVirtualDNSRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteVirtualDNSResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListVirtualDNSRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListVirtualDNSResponse {
    repeated VirtualDNS virtual_DNSs = 1 [(gogoproto.customname) = "VirtualDNSs", (gogoproto.jsontag) = "virtual-DNSs"];
}

message GetVirtualDNSRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetVirtualDNSResponse {
    VirtualDNS virtual_DNS = 1 [(gogoproto.customname) = "VirtualDNS", (gogoproto.jsontag) = "virtual-DNS"];
}



message VirtualIP {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    VirtualIpType virtual_ip_properties = 9 [(gogoproto.customname) = "VirtualIPProperties"]; 

    repeated VirtualIPLoadbalancerPoolRef loadbalancer_pool_refs = 1010 [(gogoproto.customname) = "LoadbalancerPoolRefs"];
    repeated VirtualIPVirtualMachineInterfaceRef virtual_machine_interface_refs = 1011 [(gogoproto.customname) = "VirtualMachineInterfaceRefs"];

}


message VirtualIPLoadbalancerPoolRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message VirtualIPVirtualMachineInterfaceRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}


message CreateVirtualIPRequest {
    VirtualIP virtual_ip = 1 [(gogoproto.customname) = "VirtualIP",(gogoproto.jsontag) = "virtual-ip"];
}

message CreateVirtualIPResponse {
    VirtualIP virtual_ip = 1 [(gogoproto.customname) = "VirtualIP" ,(gogoproto.jsontag) = "virtual-ip"];
}

message UpdateVirtualIPRequest {
    VirtualIP virtual_ip = 1 [(gogoproto.customname) = "VirtualIP",(gogoproto.jsontag) = "virtual-ip"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateVirtualIPResponse {
    VirtualIP virtual_ip = 1 [(gogoproto.customname) = "VirtualIP",(gogoproto.jsontag) = "virtual-ip"];
}

message DeleteVirtualIPRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteVirtualIPResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListVirtualIPRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListVirtualIPResponse {
    repeated VirtualIP virtual_ips = 1 [(gogoproto.customname) = "VirtualIPs", (gogoproto.jsontag) = "virtual-ips"];
}

message GetVirtualIPRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetVirtualIPResponse {
    VirtualIP virtual_ip = 1 [(gogoproto.customname) = "VirtualIP", (gogoproto.jsontag) = "virtual-ip"];
}



message VirtualMachineInterface {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    EcmpHashingIncludeFields ecmp_hashing_include_fields = 9 [(gogoproto.customname) = "EcmpHashingIncludeFields"];
    RouteTableType virtual_machine_interface_host_routes = 10 [(gogoproto.customname) = "VirtualMachineInterfaceHostRoutes"];
    MacAddressesType virtual_machine_interface_mac_addresses = 11 [(gogoproto.customname) = "VirtualMachineInterfaceMacAddresses"];
    DhcpOptionsListType virtual_machine_interface_dhcp_option_list = 12 [(gogoproto.customname) = "VirtualMachineInterfaceDHCPOptionList"];
    KeyValuePairs virtual_machine_interface_bindings = 13 [(gogoproto.customname) = "VirtualMachineInterfaceBindings"];
    bool virtual_machine_interface_disable_policy = 14 [(gogoproto.customname) = "VirtualMachineInterfaceDisablePolicy"];
    AllowedAddressPairs virtual_machine_interface_allowed_address_pairs = 15 [(gogoproto.customname) = "VirtualMachineInterfaceAllowedAddressPairs"];
    FatFlowProtocols virtual_machine_interface_fat_flow_protocols = 16 [(gogoproto.customname) = "VirtualMachineInterfaceFatFlowProtocols"];
    bool vlan_tag_based_bridge_domain = 17 [(gogoproto.customname) = "VlanTagBasedBridgeDomain"];
    string virtual_machine_interface_device_owner = 18 [(gogoproto.customname) = "VirtualMachineInterfaceDeviceOwner"];
    VrfAssignTableType vrf_assign_table = 19 [(gogoproto.customname) = "VRFAssignTable"];
    bool port_security_enabled = 20 [(gogoproto.customname) = "PortSecurityEnabled"];
    VirtualMachineInterfacePropertiesType virtual_machine_interface_properties = 21 [(gogoproto.customname) = "VirtualMachineInterfaceProperties"]; 

    repeated VirtualMachineInterfaceSecurityLoggingObjectRef security_logging_object_refs = 1025 [(gogoproto.customname) = "SecurityLoggingObjectRefs"];
    repeated VirtualMachineInterfaceInterfaceRouteTableRef interface_route_table_refs = 1026 [(gogoproto.customname) = "InterfaceRouteTableRefs"];
    repeated VirtualMachineInterfaceSecurityGroupRef security_group_refs = 1032 [(gogoproto.customname) = "SecurityGroupRefs"];
    repeated VirtualMachineInterfaceBridgeDomainRef bridge_domain_refs = 1034 [(gogoproto.customname) = "BridgeDomainRefs"];
    repeated VirtualMachineInterfaceVirtualMachineInterfaceRef virtual_machine_interface_refs = 1022 [(gogoproto.customname) = "VirtualMachineInterfaceRefs"];
    repeated VirtualMachineInterfaceBGPRouterRef bgp_router_refs = 1024 [(gogoproto.customname) = "BGPRouterRefs"];
    repeated VirtualMachineInterfacePortTupleRef port_tuple_refs = 1029 [(gogoproto.customname) = "PortTupleRefs"];
    repeated VirtualMachineInterfaceVirtualNetworkRef virtual_network_refs = 1033 [(gogoproto.customname) = "VirtualNetworkRefs"];
    repeated VirtualMachineInterfaceServiceEndpointRef service_endpoint_refs = 1035 [(gogoproto.customname) = "ServiceEndpointRefs"];
    repeated VirtualMachineInterfaceVirtualMachineRef virtual_machine_refs = 1023 [(gogoproto.customname) = "VirtualMachineRefs"];
    repeated VirtualMachineInterfaceRoutingInstanceRef routing_instance_refs = 1027 [(gogoproto.customname) = "RoutingInstanceRefs"];
    repeated VirtualMachineInterfaceQosConfigRef qos_config_refs = 1028 [(gogoproto.customname) = "QosConfigRefs"];
    repeated VirtualMachineInterfacePhysicalInterfaceRef physical_interface_refs = 1030 [(gogoproto.customname) = "PhysicalInterfaceRefs"];
    repeated VirtualMachineInterfaceServiceHealthCheckRef service_health_check_refs = 1031 [(gogoproto.customname) = "ServiceHealthCheckRefs"];

}


message VirtualMachineInterfaceVirtualMachineRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message VirtualMachineInterfaceRoutingInstanceRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
    PolicyBasedForwardingRuleType attr = 3 [(gogoproto.customname) = "Attr"];
    
}

message VirtualMachineInterfaceQosConfigRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message VirtualMachineInterfacePhysicalInterfaceRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message VirtualMachineInterfaceServiceHealthCheckRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message VirtualMachineInterfaceSecurityLoggingObjectRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message VirtualMachineInterfaceInterfaceRouteTableRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message VirtualMachineInterfaceSecurityGroupRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message VirtualMachineInterfaceBridgeDomainRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
    BridgeDomainMembershipType attr = 3 [(gogoproto.customname) = "Attr"];
    
}

message VirtualMachineInterfaceVirtualMachineInterfaceRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message VirtualMachineInterfaceBGPRouterRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message VirtualMachineInterfacePortTupleRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message VirtualMachineInterfaceVirtualNetworkRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message VirtualMachineInterfaceServiceEndpointRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}


message CreateVirtualMachineInterfaceRequest {
    VirtualMachineInterface virtual_machine_interface = 1 [(gogoproto.customname) = "VirtualMachineInterface",(gogoproto.jsontag) = "virtual-machine-interface"];
}

message CreateVirtualMachineInterfaceResponse {
    VirtualMachineInterface virtual_machine_interface = 1 [(gogoproto.customname) = "VirtualMachineInterface" ,(gogoproto.jsontag) = "virtual-machine-interface"];
}

message UpdateVirtualMachineInterfaceRequest {
    VirtualMachineInterface virtual_machine_interface = 1 [(gogoproto.customname) = "VirtualMachineInterface",(gogoproto.jsontag) = "virtual-machine-interface"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateVirtualMachineInterfaceResponse {
    VirtualMachineInterface virtual_machine_interface = 1 [(gogoproto.customname) = "VirtualMachineInterface",(gogoproto.jsontag) = "virtual-machine-interface"];
}

message DeleteVirtualMachineInterfaceRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteVirtualMachineInterfaceResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListVirtualMachineInterfaceRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListVirtualMachineInterfaceResponse {
    repeated VirtualMachineInterface virtual_machine_interfaces = 1 [(gogoproto.customname) = "VirtualMachineInterfaces", (gogoproto.jsontag) = "virtual-machine-interfaces"];
}

message GetVirtualMachineInterfaceRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetVirtualMachineInterfaceResponse {
    VirtualMachineInterface virtual_machine_interface = 1 [(gogoproto.customname) = "VirtualMachineInterface", (gogoproto.jsontag) = "virtual-machine-interface"];
}



message VirtualMachine {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"]; 

    repeated VirtualMachineServiceInstanceRef service_instance_refs = 1009 [(gogoproto.customname) = "ServiceInstanceRefs"];

    
    repeated VirtualMachineInterface virtual_machine_interfaces = 3010 [(gogoproto.customname) = "VirtualMachineInterfaces"];
}


message VirtualMachineServiceInstanceRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}


message CreateVirtualMachineRequest {
    VirtualMachine virtual_machine = 1 [(gogoproto.customname) = "VirtualMachine",(gogoproto.jsontag) = "virtual-machine"];
}

message CreateVirtualMachineResponse {
    VirtualMachine virtual_machine = 1 [(gogoproto.customname) = "VirtualMachine" ,(gogoproto.jsontag) = "virtual-machine"];
}

message UpdateVirtualMachineRequest {
    VirtualMachine virtual_machine = 1 [(gogoproto.customname) = "VirtualMachine",(gogoproto.jsontag) = "virtual-machine"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateVirtualMachineResponse {
    VirtualMachine virtual_machine = 1 [(gogoproto.customname) = "VirtualMachine",(gogoproto.jsontag) = "virtual-machine"];
}

message DeleteVirtualMachineRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteVirtualMachineResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListVirtualMachineRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListVirtualMachineResponse {
    repeated VirtualMachine virtual_machines = 1 [(gogoproto.customname) = "VirtualMachines", (gogoproto.jsontag) = "virtual-machines"];
}

message GetVirtualMachineRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetVirtualMachineResponse {
    VirtualMachine virtual_machine = 1 [(gogoproto.customname) = "VirtualMachine", (gogoproto.jsontag) = "virtual-machine"];
}



message VirtualNetwork {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    VirtualNetworkType virtual_network_properties = 9 [(gogoproto.customname) = "VirtualNetworkProperties"];
    EcmpHashingIncludeFields ecmp_hashing_include_fields = 10 [(gogoproto.customname) = "EcmpHashingIncludeFields"];
    int64 virtual_network_network_id = 11 [(gogoproto.customname) = "VirtualNetworkNetworkID"];
    string address_allocation_mode = 12 [(gogoproto.customname) = "AddressAllocationMode"];
    bool pbb_evpn_enable = 13 [(gogoproto.customname) = "PBBEvpnEnable"];
    bool router_external = 14 [(gogoproto.customname) = "RouterExternal"];
    RouteTargetList import_route_target_list = 15 [(gogoproto.customname) = "ImportRouteTargetList"];
    int64 mac_aging_time = 16 [(gogoproto.customname) = "MacAgingTime"];
    ProviderDetails provider_properties = 17 [(gogoproto.customname) = "ProviderProperties"];
    RouteTargetList route_target_list = 18 [(gogoproto.customname) = "RouteTargetList"];
    bool mac_learning_enabled = 19 [(gogoproto.customname) = "MacLearningEnabled"];
    RouteTargetList export_route_target_list = 20 [(gogoproto.customname) = "ExportRouteTargetList"];
    bool flood_unknown_unicast = 21 [(gogoproto.customname) = "FloodUnknownUnicast"];
    bool pbb_etree_enable = 22 [(gogoproto.customname) = "PBBEtreeEnable"];
    bool layer2_control_word = 23 [(gogoproto.customname) = "Layer2ControlWord"];
    bool external_ipam = 24 [(gogoproto.customname) = "ExternalIpam"];
    bool port_security_enabled = 25 [(gogoproto.customname) = "PortSecurityEnabled"];
    MACMoveLimitControlType mac_move_control = 26 [(gogoproto.customname) = "MacMoveControl"];
    bool multi_policy_service_chains_enabled = 27 [(gogoproto.customname) = "MultiPolicyServiceChainsEnabled"];
    MACLimitControlType mac_limit_control = 28 [(gogoproto.customname) = "MacLimitControl"];
    bool is_shared = 29 [(gogoproto.customname) = "IsShared"]; 

    repeated VirtualNetworkSecurityLoggingObjectRef security_logging_object_refs = 1031 [(gogoproto.customname) = "SecurityLoggingObjectRefs"];
    repeated VirtualNetworkNetworkPolicyRef network_policy_refs = 1032 [(gogoproto.customname) = "NetworkPolicyRefs"];
    repeated VirtualNetworkQosConfigRef qos_config_refs = 1033 [(gogoproto.customname) = "QosConfigRefs"];
    repeated VirtualNetworkRouteTableRef route_table_refs = 1034 [(gogoproto.customname) = "RouteTableRefs"];
    repeated VirtualNetworkVirtualNetworkRef virtual_network_refs = 1035 [(gogoproto.customname) = "VirtualNetworkRefs"];
    repeated VirtualNetworkBGPVPNRef bgpvpn_refs = 1036 [(gogoproto.customname) = "BGPVPNRefs"];
    repeated VirtualNetworkNetworkIpamRef network_ipam_refs = 1030 [(gogoproto.customname) = "NetworkIpamRefs"];

    
    repeated AccessControlList access_control_lists = 3037 [(gogoproto.customname) = "AccessControlLists"];
    
    repeated AliasIPPool alias_ip_pools = 3038 [(gogoproto.customname) = "AliasIPPools"];
    
    repeated BridgeDomain bridge_domains = 3039 [(gogoproto.customname) = "BridgeDomains"];
    
    repeated FloatingIPPool floating_ip_pools = 3040 [(gogoproto.customname) = "FloatingIPPools"];
    
    repeated RoutingInstance routing_instances = 3041 [(gogoproto.customname) = "RoutingInstances"];
}


message VirtualNetworkNetworkIpamRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
    VnSubnetsType attr = 3 [(gogoproto.customname) = "Attr"];
    
}

message VirtualNetworkSecurityLoggingObjectRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message VirtualNetworkNetworkPolicyRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
    VirtualNetworkPolicyType attr = 3 [(gogoproto.customname) = "Attr"];
    
}

message VirtualNetworkQosConfigRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message VirtualNetworkRouteTableRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message VirtualNetworkVirtualNetworkRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}

message VirtualNetworkBGPVPNRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}


message CreateVirtualNetworkRequest {
    VirtualNetwork virtual_network = 1 [(gogoproto.customname) = "VirtualNetwork",(gogoproto.jsontag) = "virtual-network"];
}

message CreateVirtualNetworkResponse {
    VirtualNetwork virtual_network = 1 [(gogoproto.customname) = "VirtualNetwork" ,(gogoproto.jsontag) = "virtual-network"];
}

message UpdateVirtualNetworkRequest {
    VirtualNetwork virtual_network = 1 [(gogoproto.customname) = "VirtualNetwork",(gogoproto.jsontag) = "virtual-network"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateVirtualNetworkResponse {
    VirtualNetwork virtual_network = 1 [(gogoproto.customname) = "VirtualNetwork",(gogoproto.jsontag) = "virtual-network"];
}

message DeleteVirtualNetworkRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteVirtualNetworkResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListVirtualNetworkRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListVirtualNetworkResponse {
    repeated VirtualNetwork virtual_networks = 1 [(gogoproto.customname) = "VirtualNetworks", (gogoproto.jsontag) = "virtual-networks"];
}

message GetVirtualNetworkRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetVirtualNetworkResponse {
    VirtualNetwork virtual_network = 1 [(gogoproto.customname) = "VirtualNetwork", (gogoproto.jsontag) = "virtual-network"];
}



message VirtualRouter {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    bool virtual_router_dpdk_enabled = 9 [(gogoproto.customname) = "VirtualRouterDPDKEnabled"];
    string virtual_router_type = 10 [(gogoproto.customname) = "VirtualRouterType"];
    string virtual_router_ip_address = 11 [(gogoproto.customname) = "VirtualRouterIPAddress"]; 

    repeated VirtualRouterNetworkIpamRef network_ipam_refs = 1012 [(gogoproto.customname) = "NetworkIpamRefs"];
    repeated VirtualRouterVirtualMachineRef virtual_machine_refs = 1013 [(gogoproto.customname) = "VirtualMachineRefs"];

    
    repeated VirtualMachineInterface virtual_machine_interfaces = 3014 [(gogoproto.customname) = "VirtualMachineInterfaces"];
}


message VirtualRouterNetworkIpamRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
    VirtualRouterNetworkIpamType attr = 3 [(gogoproto.customname) = "Attr"];
    
}

message VirtualRouterVirtualMachineRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}


message CreateVirtualRouterRequest {
    VirtualRouter virtual_router = 1 [(gogoproto.customname) = "VirtualRouter",(gogoproto.jsontag) = "virtual-router"];
}

message CreateVirtualRouterResponse {
    VirtualRouter virtual_router = 1 [(gogoproto.customname) = "VirtualRouter" ,(gogoproto.jsontag) = "virtual-router"];
}

message UpdateVirtualRouterRequest {
    VirtualRouter virtual_router = 1 [(gogoproto.customname) = "VirtualRouter",(gogoproto.jsontag) = "virtual-router"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateVirtualRouterResponse {
    VirtualRouter virtual_router = 1 [(gogoproto.customname) = "VirtualRouter",(gogoproto.jsontag) = "virtual-router"];
}

message DeleteVirtualRouterRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteVirtualRouterResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListVirtualRouterRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListVirtualRouterResponse {
    repeated VirtualRouter virtual_routers = 1 [(gogoproto.customname) = "VirtualRouters", (gogoproto.jsontag) = "virtual-routers"];
}

message GetVirtualRouterRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetVirtualRouterResponse {
    VirtualRouter virtual_router = 1 [(gogoproto.customname) = "VirtualRouter", (gogoproto.jsontag) = "virtual-router"];
}



message AppformixNodeRole {

    string provisioning_log = 1 [(gogoproto.customname) = "ProvisioningLog"];
    int64 provisioning_progress = 2 [(gogoproto.customname) = "ProvisioningProgress"];
    string provisioning_progress_stage = 3 [(gogoproto.customname) = "ProvisioningProgressStage"];
    string provisioning_start_time = 4 [(gogoproto.customname) = "ProvisioningStartTime"];
    string provisioning_state = 5 [(gogoproto.customname) = "ProvisioningState"];
    string uuid = 6 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 7 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 8 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 9 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 10 [(gogoproto.customname) = "IDPerms"];
    string display_name = 11 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 12 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 13 [(gogoproto.customname) = "Perms2"]; 


}



message CreateAppformixNodeRoleRequest {
    AppformixNodeRole appformix_node_role = 1 [(gogoproto.customname) = "AppformixNodeRole",(gogoproto.jsontag) = "appformix-node-role"];
}

message CreateAppformixNodeRoleResponse {
    AppformixNodeRole appformix_node_role = 1 [(gogoproto.customname) = "AppformixNodeRole" ,(gogoproto.jsontag) = "appformix-node-role"];
}

message UpdateAppformixNodeRoleRequest {
    AppformixNodeRole appformix_node_role = 1 [(gogoproto.customname) = "AppformixNodeRole",(gogoproto.jsontag) = "appformix-node-role"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateAppformixNodeRoleResponse {
    AppformixNodeRole appformix_node_role = 1 [(gogoproto.customname) = "AppformixNodeRole",(gogoproto.jsontag) = "appformix-node-role"];
}

message DeleteAppformixNodeRoleRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteAppformixNodeRoleResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListAppformixNodeRoleRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListAppformixNodeRoleResponse {
    repeated AppformixNodeRole appformix_node_roles = 1 [(gogoproto.customname) = "AppformixNodeRoles", (gogoproto.jsontag) = "appformix-node-roles"];
}

message GetAppformixNodeRoleRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetAppformixNodeRoleResponse {
    AppformixNodeRole appformix_node_role = 1 [(gogoproto.customname) = "AppformixNodeRole", (gogoproto.jsontag) = "appformix-node-role"];
}



message BaremetalNode {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    string name = 9 [(gogoproto.customname) = "Name"];
    DriverInfo driver_info = 10 [(gogoproto.customname) = "DriverInfo"];
    BaremetalProperties bm_properties = 11 [(gogoproto.customname) = "BMProperties"];
    string instance_uuid = 12 [(gogoproto.customname) = "InstanceUUID"];
    InstanceInfo instance_info = 13 [(gogoproto.customname) = "InstanceInfo"];
    bool maintenance = 14 [(gogoproto.customname) = "Maintenance"];
    string maintenance_reason = 15 [(gogoproto.customname) = "MaintenanceReason"];
    string power_state = 16 [(gogoproto.customname) = "PowerState"];
    string target_power_state = 17 [(gogoproto.customname) = "TargetPowerState"];
    string provision_state = 18 [(gogoproto.customname) = "ProvisionState"];
    string target_provision_state = 19 [(gogoproto.customname) = "TargetProvisionState"];
    bool console_enabled = 20 [(gogoproto.customname) = "ConsoleEnabled"];
    string created_at = 21 [(gogoproto.customname) = "CreatedAt"];
    string updated_at = 22 [(gogoproto.customname) = "UpdatedAt"];
    string last_error = 23 [(gogoproto.customname) = "LastError"]; 


}



message CreateBaremetalNodeRequest {
    BaremetalNode baremetal_node = 1 [(gogoproto.customname) = "BaremetalNode",(gogoproto.jsontag) = "baremetal-node"];
}

message CreateBaremetalNodeResponse {
    BaremetalNode baremetal_node = 1 [(gogoproto.customname) = "BaremetalNode" ,(gogoproto.jsontag) = "baremetal-node"];
}

message UpdateBaremetalNodeRequest {
    BaremetalNode baremetal_node = 1 [(gogoproto.customname) = "BaremetalNode",(gogoproto.jsontag) = "baremetal-node"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateBaremetalNodeResponse {
    BaremetalNode baremetal_node = 1 [(gogoproto.customname) = "BaremetalNode",(gogoproto.jsontag) = "baremetal-node"];
}

message DeleteBaremetalNodeRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteBaremetalNodeResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListBaremetalNodeRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListBaremetalNodeResponse {
    repeated BaremetalNode baremetal_nodes = 1 [(gogoproto.customname) = "BaremetalNodes", (gogoproto.jsontag) = "baremetal-nodes"];
}

message GetBaremetalNodeRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetBaremetalNodeResponse {
    BaremetalNode baremetal_node = 1 [(gogoproto.customname) = "BaremetalNode", (gogoproto.jsontag) = "baremetal-node"];
}



message BaremetalPort {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    string mac_address = 9 [(gogoproto.customname) = "MacAddress"];
    string created_at = 10 [(gogoproto.customname) = "CreatedAt"];
    string updated_at = 11 [(gogoproto.customname) = "UpdatedAt"];
    string node = 12 [(gogoproto.customname) = "Node"];
    bool pxe_enabled = 13 [(gogoproto.customname) = "PxeEnabled"];
    LocalLinkConnection local_link_connection = 14 [(gogoproto.customname) = "LocalLinkConnection"]; 


}



message CreateBaremetalPortRequest {
    BaremetalPort baremetal_port = 1 [(gogoproto.customname) = "BaremetalPort",(gogoproto.jsontag) = "baremetal-port"];
}

message CreateBaremetalPortResponse {
    BaremetalPort baremetal_port = 1 [(gogoproto.customname) = "BaremetalPort" ,(gogoproto.jsontag) = "baremetal-port"];
}

message UpdateBaremetalPortRequest {
    BaremetalPort baremetal_port = 1 [(gogoproto.customname) = "BaremetalPort",(gogoproto.jsontag) = "baremetal-port"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateBaremetalPortResponse {
    BaremetalPort baremetal_port = 1 [(gogoproto.customname) = "BaremetalPort",(gogoproto.jsontag) = "baremetal-port"];
}

message DeleteBaremetalPortRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteBaremetalPortResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListBaremetalPortRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListBaremetalPortResponse {
    repeated BaremetalPort baremetal_ports = 1 [(gogoproto.customname) = "BaremetalPorts", (gogoproto.jsontag) = "baremetal-ports"];
}

message GetBaremetalPortRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetBaremetalPortResponse {
    BaremetalPort baremetal_port = 1 [(gogoproto.customname) = "BaremetalPort", (gogoproto.jsontag) = "baremetal-port"];
}



message ContrailAnalyticsDatabaseNodeRole {

    string provisioning_log = 1 [(gogoproto.customname) = "ProvisioningLog"];
    int64 provisioning_progress = 2 [(gogoproto.customname) = "ProvisioningProgress"];
    string provisioning_progress_stage = 3 [(gogoproto.customname) = "ProvisioningProgressStage"];
    string provisioning_start_time = 4 [(gogoproto.customname) = "ProvisioningStartTime"];
    string provisioning_state = 5 [(gogoproto.customname) = "ProvisioningState"];
    string uuid = 6 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 7 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 8 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 9 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 10 [(gogoproto.customname) = "IDPerms"];
    string display_name = 11 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 12 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 13 [(gogoproto.customname) = "Perms2"]; 


}



message CreateContrailAnalyticsDatabaseNodeRoleRequest {
    ContrailAnalyticsDatabaseNodeRole contrail_analytics_database_node_role = 1 [(gogoproto.customname) = "ContrailAnalyticsDatabaseNodeRole",(gogoproto.jsontag) = "contrail-analytics-database-node-role"];
}

message CreateContrailAnalyticsDatabaseNodeRoleResponse {
    ContrailAnalyticsDatabaseNodeRole contrail_analytics_database_node_role = 1 [(gogoproto.customname) = "ContrailAnalyticsDatabaseNodeRole" ,(gogoproto.jsontag) = "contrail-analytics-database-node-role"];
}

message UpdateContrailAnalyticsDatabaseNodeRoleRequest {
    ContrailAnalyticsDatabaseNodeRole contrail_analytics_database_node_role = 1 [(gogoproto.customname) = "ContrailAnalyticsDatabaseNodeRole",(gogoproto.jsontag) = "contrail-analytics-database-node-role"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateContrailAnalyticsDatabaseNodeRoleResponse {
    ContrailAnalyticsDatabaseNodeRole contrail_analytics_database_node_role = 1 [(gogoproto.customname) = "ContrailAnalyticsDatabaseNodeRole",(gogoproto.jsontag) = "contrail-analytics-database-node-role"];
}

message DeleteContrailAnalyticsDatabaseNodeRoleRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteContrailAnalyticsDatabaseNodeRoleResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListContrailAnalyticsDatabaseNodeRoleRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListContrailAnalyticsDatabaseNodeRoleResponse {
    repeated ContrailAnalyticsDatabaseNodeRole contrail_analytics_database_node_roles = 1 [(gogoproto.customname) = "ContrailAnalyticsDatabaseNodeRoles", (gogoproto.jsontag) = "contrail-analytics-database-node-roles"];
}

message GetContrailAnalyticsDatabaseNodeRoleRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetContrailAnalyticsDatabaseNodeRoleResponse {
    ContrailAnalyticsDatabaseNodeRole contrail_analytics_database_node_role = 1 [(gogoproto.customname) = "ContrailAnalyticsDatabaseNodeRole", (gogoproto.jsontag) = "contrail-analytics-database-node-role"];
}



message ContrailAnalyticsNode {

    string provisioning_log = 1 [(gogoproto.customname) = "ProvisioningLog"];
    int64 provisioning_progress = 2 [(gogoproto.customname) = "ProvisioningProgress"];
    string provisioning_progress_stage = 3 [(gogoproto.customname) = "ProvisioningProgressStage"];
    string provisioning_start_time = 4 [(gogoproto.customname) = "ProvisioningStartTime"];
    string provisioning_state = 5 [(gogoproto.customname) = "ProvisioningState"];
    string uuid = 6 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 7 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 8 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 9 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 10 [(gogoproto.customname) = "IDPerms"];
    string display_name = 11 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 12 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 13 [(gogoproto.customname) = "Perms2"]; 


}



message CreateContrailAnalyticsNodeRequest {
    ContrailAnalyticsNode contrail_analytics_node = 1 [(gogoproto.customname) = "ContrailAnalyticsNode",(gogoproto.jsontag) = "contrail-analytics-node"];
}

message CreateContrailAnalyticsNodeResponse {
    ContrailAnalyticsNode contrail_analytics_node = 1 [(gogoproto.customname) = "ContrailAnalyticsNode" ,(gogoproto.jsontag) = "contrail-analytics-node"];
}

message UpdateContrailAnalyticsNodeRequest {
    ContrailAnalyticsNode contrail_analytics_node = 1 [(gogoproto.customname) = "ContrailAnalyticsNode",(gogoproto.jsontag) = "contrail-analytics-node"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateContrailAnalyticsNodeResponse {
    ContrailAnalyticsNode contrail_analytics_node = 1 [(gogoproto.customname) = "ContrailAnalyticsNode",(gogoproto.jsontag) = "contrail-analytics-node"];
}

message DeleteContrailAnalyticsNodeRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteContrailAnalyticsNodeResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListContrailAnalyticsNodeRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListContrailAnalyticsNodeResponse {
    repeated ContrailAnalyticsNode contrail_analytics_nodes = 1 [(gogoproto.customname) = "ContrailAnalyticsNodes", (gogoproto.jsontag) = "contrail-analytics-nodes"];
}

message GetContrailAnalyticsNodeRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetContrailAnalyticsNodeResponse {
    ContrailAnalyticsNode contrail_analytics_node = 1 [(gogoproto.customname) = "ContrailAnalyticsNode", (gogoproto.jsontag) = "contrail-analytics-node"];
}



message ContrailCluster {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    string config_audit_ttl = 9 [(gogoproto.customname) = "ConfigAuditTTL"];
    string contrail_webui = 10 [(gogoproto.customname) = "ContrailWebui"];
    string data_ttl = 11 [(gogoproto.customname) = "DataTTL"];
    string default_gateway = 12 [(gogoproto.customname) = "DefaultGateway"];
    string default_vrouter_bond_interface = 13 [(gogoproto.customname) = "DefaultVrouterBondInterface"];
    string default_vrouter_bond_interface_members = 14 [(gogoproto.customname) = "DefaultVrouterBondInterfaceMembers"];
    string flow_ttl = 15 [(gogoproto.customname) = "FlowTTL"];
    string statistics_ttl = 16 [(gogoproto.customname) = "StatisticsTTL"]; 


}



message CreateContrailClusterRequest {
    ContrailCluster contrail_cluster = 1 [(gogoproto.customname) = "ContrailCluster",(gogoproto.jsontag) = "contrail-cluster"];
}

message CreateContrailClusterResponse {
    ContrailCluster contrail_cluster = 1 [(gogoproto.customname) = "ContrailCluster" ,(gogoproto.jsontag) = "contrail-cluster"];
}

message UpdateContrailClusterRequest {
    ContrailCluster contrail_cluster = 1 [(gogoproto.customname) = "ContrailCluster",(gogoproto.jsontag) = "contrail-cluster"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateContrailClusterResponse {
    ContrailCluster contrail_cluster = 1 [(gogoproto.customname) = "ContrailCluster",(gogoproto.jsontag) = "contrail-cluster"];
}

message DeleteContrailClusterRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteContrailClusterResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListContrailClusterRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListContrailClusterResponse {
    repeated ContrailCluster contrail_clusters = 1 [(gogoproto.customname) = "ContrailClusters", (gogoproto.jsontag) = "contrail-clusters"];
}

message GetContrailClusterRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetContrailClusterResponse {
    ContrailCluster contrail_cluster = 1 [(gogoproto.customname) = "ContrailCluster", (gogoproto.jsontag) = "contrail-cluster"];
}



message ContrailControllerNodeRole {

    string provisioning_log = 1 [(gogoproto.customname) = "ProvisioningLog"];
    int64 provisioning_progress = 2 [(gogoproto.customname) = "ProvisioningProgress"];
    string provisioning_progress_stage = 3 [(gogoproto.customname) = "ProvisioningProgressStage"];
    string provisioning_start_time = 4 [(gogoproto.customname) = "ProvisioningStartTime"];
    string provisioning_state = 5 [(gogoproto.customname) = "ProvisioningState"];
    string uuid = 6 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 7 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 8 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 9 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 10 [(gogoproto.customname) = "IDPerms"];
    string display_name = 11 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 12 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 13 [(gogoproto.customname) = "Perms2"]; 


}



message CreateContrailControllerNodeRoleRequest {
    ContrailControllerNodeRole contrail_controller_node_role = 1 [(gogoproto.customname) = "ContrailControllerNodeRole",(gogoproto.jsontag) = "contrail-controller-node-role"];
}

message CreateContrailControllerNodeRoleResponse {
    ContrailControllerNodeRole contrail_controller_node_role = 1 [(gogoproto.customname) = "ContrailControllerNodeRole" ,(gogoproto.jsontag) = "contrail-controller-node-role"];
}

message UpdateContrailControllerNodeRoleRequest {
    ContrailControllerNodeRole contrail_controller_node_role = 1 [(gogoproto.customname) = "ContrailControllerNodeRole",(gogoproto.jsontag) = "contrail-controller-node-role"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateContrailControllerNodeRoleResponse {
    ContrailControllerNodeRole contrail_controller_node_role = 1 [(gogoproto.customname) = "ContrailControllerNodeRole",(gogoproto.jsontag) = "contrail-controller-node-role"];
}

message DeleteContrailControllerNodeRoleRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteContrailControllerNodeRoleResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListContrailControllerNodeRoleRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListContrailControllerNodeRoleResponse {
    repeated ContrailControllerNodeRole contrail_controller_node_roles = 1 [(gogoproto.customname) = "ContrailControllerNodeRoles", (gogoproto.jsontag) = "contrail-controller-node-roles"];
}

message GetContrailControllerNodeRoleRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetContrailControllerNodeRoleResponse {
    ContrailControllerNodeRole contrail_controller_node_role = 1 [(gogoproto.customname) = "ContrailControllerNodeRole", (gogoproto.jsontag) = "contrail-controller-node-role"];
}



message ControllerNodeRole {

    string provisioning_log = 1 [(gogoproto.customname) = "ProvisioningLog"];
    int64 provisioning_progress = 2 [(gogoproto.customname) = "ProvisioningProgress"];
    string provisioning_progress_stage = 3 [(gogoproto.customname) = "ProvisioningProgressStage"];
    string provisioning_start_time = 4 [(gogoproto.customname) = "ProvisioningStartTime"];
    string provisioning_state = 5 [(gogoproto.customname) = "ProvisioningState"];
    string uuid = 6 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 7 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 8 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 9 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 10 [(gogoproto.customname) = "IDPerms"];
    string display_name = 11 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 12 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 13 [(gogoproto.customname) = "Perms2"];
    string capacity_drives = 14 [(gogoproto.customname) = "CapacityDrives"];
    string internalapi_bond_interface_members = 15 [(gogoproto.customname) = "InternalapiBondInterfaceMembers"];
    string performance_drives = 16 [(gogoproto.customname) = "PerformanceDrives"];
    string storage_management_bond_interface_members = 17 [(gogoproto.customname) = "StorageManagementBondInterfaceMembers"]; 


}



message CreateControllerNodeRoleRequest {
    ControllerNodeRole controller_node_role = 1 [(gogoproto.customname) = "ControllerNodeRole",(gogoproto.jsontag) = "controller-node-role"];
}

message CreateControllerNodeRoleResponse {
    ControllerNodeRole controller_node_role = 1 [(gogoproto.customname) = "ControllerNodeRole" ,(gogoproto.jsontag) = "controller-node-role"];
}

message UpdateControllerNodeRoleRequest {
    ControllerNodeRole controller_node_role = 1 [(gogoproto.customname) = "ControllerNodeRole",(gogoproto.jsontag) = "controller-node-role"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateControllerNodeRoleResponse {
    ControllerNodeRole controller_node_role = 1 [(gogoproto.customname) = "ControllerNodeRole",(gogoproto.jsontag) = "controller-node-role"];
}

message DeleteControllerNodeRoleRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteControllerNodeRoleResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListControllerNodeRoleRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListControllerNodeRoleResponse {
    repeated ControllerNodeRole controller_node_roles = 1 [(gogoproto.customname) = "ControllerNodeRoles", (gogoproto.jsontag) = "controller-node-roles"];
}

message GetControllerNodeRoleRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetControllerNodeRoleResponse {
    ControllerNodeRole controller_node_role = 1 [(gogoproto.customname) = "ControllerNodeRole", (gogoproto.jsontag) = "controller-node-role"];
}



message Dashboard {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    string container_config = 9 [(gogoproto.customname) = "ContainerConfig"]; 


}



message CreateDashboardRequest {
    Dashboard dashboard = 1 [(gogoproto.customname) = "Dashboard",(gogoproto.jsontag) = "dashboard"];
}

message CreateDashboardResponse {
    Dashboard dashboard = 1 [(gogoproto.customname) = "Dashboard" ,(gogoproto.jsontag) = "dashboard"];
}

message UpdateDashboardRequest {
    Dashboard dashboard = 1 [(gogoproto.customname) = "Dashboard",(gogoproto.jsontag) = "dashboard"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateDashboardResponse {
    Dashboard dashboard = 1 [(gogoproto.customname) = "Dashboard",(gogoproto.jsontag) = "dashboard"];
}

message DeleteDashboardRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteDashboardResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListDashboardRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListDashboardResponse {
    repeated Dashboard dashboards = 1 [(gogoproto.customname) = "Dashboards", (gogoproto.jsontag) = "dashboards"];
}

message GetDashboardRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetDashboardResponse {
    Dashboard dashboard = 1 [(gogoproto.customname) = "Dashboard", (gogoproto.jsontag) = "dashboard"];
}



message Flavor {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    string name = 9 [(gogoproto.customname) = "Name"];
    int64 disk = 10 [(gogoproto.customname) = "Disk"];
    int64 vcpus = 11 [(gogoproto.customname) = "Vcpus"];
    int64 ram = 12 [(gogoproto.customname) = "RAM"];
    string id = 13 [(gogoproto.customname) = "ID"];
    string property = 14 [(gogoproto.customname) = "Property"];
    int64 rxtx_factor = 15 [(gogoproto.customname) = "RXTXFactor"];
    int64 swap = 16 [(gogoproto.customname) = "Swap"];
    bool is_public = 17 [(gogoproto.customname) = "IsPublic"];
    int64 ephemeral = 18 [(gogoproto.customname) = "Ephemeral"];
    OpenStackLink links = 19 [(gogoproto.customname) = "Links"]; 


}



message CreateFlavorRequest {
    Flavor flavor = 1 [(gogoproto.customname) = "Flavor",(gogoproto.jsontag) = "flavor"];
}

message CreateFlavorResponse {
    Flavor flavor = 1 [(gogoproto.customname) = "Flavor" ,(gogoproto.jsontag) = "flavor"];
}

message UpdateFlavorRequest {
    Flavor flavor = 1 [(gogoproto.customname) = "Flavor",(gogoproto.jsontag) = "flavor"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateFlavorResponse {
    Flavor flavor = 1 [(gogoproto.customname) = "Flavor",(gogoproto.jsontag) = "flavor"];
}

message DeleteFlavorRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteFlavorResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListFlavorRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListFlavorResponse {
    repeated Flavor flavors = 1 [(gogoproto.customname) = "Flavors", (gogoproto.jsontag) = "flavors"];
}

message GetFlavorRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetFlavorResponse {
    Flavor flavor = 1 [(gogoproto.customname) = "Flavor", (gogoproto.jsontag) = "flavor"];
}



message OsImage {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    string name = 9 [(gogoproto.customname) = "Name"];
    string owner = 10 [(gogoproto.customname) = "Owner"];
    string id = 11 [(gogoproto.customname) = "ID"];
    int64 size = 12 [(gogoproto.customname) = "Size_"];
    string status = 13 [(gogoproto.customname) = "Status"];
    string location = 14 [(gogoproto.customname) = "Location"];
    string file = 15 [(gogoproto.customname) = "File"];
    string checksum = 16 [(gogoproto.customname) = "Checksum"];
    string created_at = 17 [(gogoproto.customname) = "CreatedAt"];
    string updated_at = 18 [(gogoproto.customname) = "UpdatedAt"];
    string container_format = 19 [(gogoproto.customname) = "ContainerFormat"];
    string disk_format = 20 [(gogoproto.customname) = "DiskFormat"];
    bool protected = 21 [(gogoproto.customname) = "Protected"];
    string visibility = 22 [(gogoproto.customname) = "Visibility"];
    string property = 23 [(gogoproto.customname) = "Property"];
    int64 min_disk = 24 [(gogoproto.customname) = "MinDisk"];
    int64 min_ram = 25 [(gogoproto.customname) = "MinRAM"];
    string tags = 26 [(gogoproto.customname) = "Tags"]; 


}



message CreateOsImageRequest {
    OsImage os_image = 1 [(gogoproto.customname) = "OsImage",(gogoproto.jsontag) = "os-image"];
}

message CreateOsImageResponse {
    OsImage os_image = 1 [(gogoproto.customname) = "OsImage" ,(gogoproto.jsontag) = "os-image"];
}

message UpdateOsImageRequest {
    OsImage os_image = 1 [(gogoproto.customname) = "OsImage",(gogoproto.jsontag) = "os-image"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateOsImageResponse {
    OsImage os_image = 1 [(gogoproto.customname) = "OsImage",(gogoproto.jsontag) = "os-image"];
}

message DeleteOsImageRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteOsImageResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListOsImageRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListOsImageResponse {
    repeated OsImage os_images = 1 [(gogoproto.customname) = "OsImages", (gogoproto.jsontag) = "os-images"];
}

message GetOsImageRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetOsImageResponse {
    OsImage os_image = 1 [(gogoproto.customname) = "OsImage", (gogoproto.jsontag) = "os-image"];
}



message Keypair {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    string name = 9 [(gogoproto.customname) = "Name"];
    string public_key = 10 [(gogoproto.customname) = "PublicKey"]; 


}



message CreateKeypairRequest {
    Keypair keypair = 1 [(gogoproto.customname) = "Keypair",(gogoproto.jsontag) = "keypair"];
}

message CreateKeypairResponse {
    Keypair keypair = 1 [(gogoproto.customname) = "Keypair" ,(gogoproto.jsontag) = "keypair"];
}

message UpdateKeypairRequest {
    Keypair keypair = 1 [(gogoproto.customname) = "Keypair",(gogoproto.jsontag) = "keypair"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateKeypairResponse {
    Keypair keypair = 1 [(gogoproto.customname) = "Keypair",(gogoproto.jsontag) = "keypair"];
}

message DeleteKeypairRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteKeypairResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListKeypairRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListKeypairResponse {
    repeated Keypair keypairs = 1 [(gogoproto.customname) = "Keypairs", (gogoproto.jsontag) = "keypairs"];
}

message GetKeypairRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetKeypairResponse {
    Keypair keypair = 1 [(gogoproto.customname) = "Keypair", (gogoproto.jsontag) = "keypair"];
}



message KubernetesCluster {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    string contrail_cluster_id = 9 [(gogoproto.customname) = "ContrailClusterID"];
    string kuberunetes_dashboard = 10 [(gogoproto.customname) = "KuberunetesDashboard"]; 


}



message CreateKubernetesClusterRequest {
    KubernetesCluster kubernetes_cluster = 1 [(gogoproto.customname) = "KubernetesCluster",(gogoproto.jsontag) = "kubernetes-cluster"];
}

message CreateKubernetesClusterResponse {
    KubernetesCluster kubernetes_cluster = 1 [(gogoproto.customname) = "KubernetesCluster" ,(gogoproto.jsontag) = "kubernetes-cluster"];
}

message UpdateKubernetesClusterRequest {
    KubernetesCluster kubernetes_cluster = 1 [(gogoproto.customname) = "KubernetesCluster",(gogoproto.jsontag) = "kubernetes-cluster"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateKubernetesClusterResponse {
    KubernetesCluster kubernetes_cluster = 1 [(gogoproto.customname) = "KubernetesCluster",(gogoproto.jsontag) = "kubernetes-cluster"];
}

message DeleteKubernetesClusterRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteKubernetesClusterResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListKubernetesClusterRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListKubernetesClusterResponse {
    repeated KubernetesCluster kubernetes_clusters = 1 [(gogoproto.customname) = "KubernetesClusters", (gogoproto.jsontag) = "kubernetes-clusters"];
}

message GetKubernetesClusterRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetKubernetesClusterResponse {
    KubernetesCluster kubernetes_cluster = 1 [(gogoproto.customname) = "KubernetesCluster", (gogoproto.jsontag) = "kubernetes-cluster"];
}



message KubernetesNode {

    string provisioning_log = 1 [(gogoproto.customname) = "ProvisioningLog"];
    int64 provisioning_progress = 2 [(gogoproto.customname) = "ProvisioningProgress"];
    string provisioning_progress_stage = 3 [(gogoproto.customname) = "ProvisioningProgressStage"];
    string provisioning_start_time = 4 [(gogoproto.customname) = "ProvisioningStartTime"];
    string provisioning_state = 5 [(gogoproto.customname) = "ProvisioningState"];
    string uuid = 6 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 7 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 8 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 9 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 10 [(gogoproto.customname) = "IDPerms"];
    string display_name = 11 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 12 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 13 [(gogoproto.customname) = "Perms2"]; 


}



message CreateKubernetesNodeRequest {
    KubernetesNode kubernetes_node = 1 [(gogoproto.customname) = "KubernetesNode",(gogoproto.jsontag) = "kubernetes-node"];
}

message CreateKubernetesNodeResponse {
    KubernetesNode kubernetes_node = 1 [(gogoproto.customname) = "KubernetesNode" ,(gogoproto.jsontag) = "kubernetes-node"];
}

message UpdateKubernetesNodeRequest {
    KubernetesNode kubernetes_node = 1 [(gogoproto.customname) = "KubernetesNode",(gogoproto.jsontag) = "kubernetes-node"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateKubernetesNodeResponse {
    KubernetesNode kubernetes_node = 1 [(gogoproto.customname) = "KubernetesNode",(gogoproto.jsontag) = "kubernetes-node"];
}

message DeleteKubernetesNodeRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteKubernetesNodeResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListKubernetesNodeRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListKubernetesNodeResponse {
    repeated KubernetesNode kubernetes_nodes = 1 [(gogoproto.customname) = "KubernetesNodes", (gogoproto.jsontag) = "kubernetes-nodes"];
}

message GetKubernetesNodeRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetKubernetesNodeResponse {
    KubernetesNode kubernetes_node = 1 [(gogoproto.customname) = "KubernetesNode", (gogoproto.jsontag) = "kubernetes-node"];
}



message Location {

    string provisioning_log = 1 [(gogoproto.customname) = "ProvisioningLog"];
    int64 provisioning_progress = 2 [(gogoproto.customname) = "ProvisioningProgress"];
    string provisioning_progress_stage = 3 [(gogoproto.customname) = "ProvisioningProgressStage"];
    string provisioning_start_time = 4 [(gogoproto.customname) = "ProvisioningStartTime"];
    string provisioning_state = 5 [(gogoproto.customname) = "ProvisioningState"];
    string uuid = 6 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 7 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 8 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 9 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 10 [(gogoproto.customname) = "IDPerms"];
    string display_name = 11 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 12 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 13 [(gogoproto.customname) = "Perms2"];
    string type = 14 [(gogoproto.customname) = "Type"];
    string private_dns_servers = 15 [(gogoproto.customname) = "PrivateDNSServers"];
    string private_ntp_hosts = 16 [(gogoproto.customname) = "PrivateNTPHosts"];
    string private_ospd_package_url = 17 [(gogoproto.customname) = "PrivateOspdPackageURL"];
    string private_ospd_user_name = 18 [(gogoproto.customname) = "PrivateOspdUserName"];
    string private_ospd_user_password = 19 [(gogoproto.customname) = "PrivateOspdUserPassword"];
    string private_ospd_vm_disk_gb = 20 [(gogoproto.customname) = "PrivateOspdVMDiskGB"];
    string private_ospd_vm_name = 21 [(gogoproto.customname) = "PrivateOspdVMName"];
    string private_ospd_vm_ram_mb = 22 [(gogoproto.customname) = "PrivateOspdVMRAMMB"];
    string private_ospd_vm_vcpus = 23 [(gogoproto.customname) = "PrivateOspdVMVcpus"];
    string private_redhat_pool_id = 24 [(gogoproto.customname) = "PrivateRedhatPoolID"];
    string private_redhat_subscription_key = 25 [(gogoproto.customname) = "PrivateRedhatSubscriptionKey"];
    string private_redhat_subscription_pasword = 26 [(gogoproto.customname) = "PrivateRedhatSubscriptionPasword"];
    string private_redhat_subscription_user = 27 [(gogoproto.customname) = "PrivateRedhatSubscriptionUser"];
    string gcp_account_info = 28 [(gogoproto.customname) = "GCPAccountInfo"];
    int64 gcp_asn = 29 [(gogoproto.customname) = "GCPAsn"];
    string gcp_region = 30 [(gogoproto.customname) = "GCPRegion"];
    string gcp_subnet = 31 [(gogoproto.customname) = "GCPSubnet"];
    string aws_access_key = 32 [(gogoproto.customname) = "AwsAccessKey"];
    string aws_region = 33 [(gogoproto.customname) = "AwsRegion"];
    string aws_secret_key = 34 [(gogoproto.customname) = "AwsSecretKey"];
    string aws_subnet = 35 [(gogoproto.customname) = "AwsSubnet"]; 


    
    repeated PhysicalRouter physical_routers = 3036 [(gogoproto.customname) = "PhysicalRouters"];
}



message CreateLocationRequest {
    Location location = 1 [(gogoproto.customname) = "Location",(gogoproto.jsontag) = "location"];
}

message CreateLocationResponse {
    Location location = 1 [(gogoproto.customname) = "Location" ,(gogoproto.jsontag) = "location"];
}

message UpdateLocationRequest {
    Location location = 1 [(gogoproto.customname) = "Location",(gogoproto.jsontag) = "location"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateLocationResponse {
    Location location = 1 [(gogoproto.customname) = "Location",(gogoproto.jsontag) = "location"];
}

message DeleteLocationRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteLocationResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListLocationRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListLocationResponse {
    repeated Location locations = 1 [(gogoproto.customname) = "Locations", (gogoproto.jsontag) = "locations"];
}

message GetLocationRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetLocationResponse {
    Location location = 1 [(gogoproto.customname) = "Location", (gogoproto.jsontag) = "location"];
}



message Node {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    string hostname = 9 [(gogoproto.customname) = "Hostname"];
    string ip_address = 10 [(gogoproto.customname) = "IPAddress"];
    string mac_address = 11 [(gogoproto.customname) = "MacAddress"];
    string type = 12 [(gogoproto.customname) = "Type"];
    string password = 13 [(gogoproto.customname) = "Password"];
    string ssh_key = 14 [(gogoproto.customname) = "SSHKey"];
    string username = 15 [(gogoproto.customname) = "Username"];
    string aws_ami = 16 [(gogoproto.customname) = "AwsAmi"];
    string aws_instance_type = 17 [(gogoproto.customname) = "AwsInstanceType"];
    string gcp_image = 18 [(gogoproto.customname) = "GCPImage"];
    string gcp_machine_type = 19 [(gogoproto.customname) = "GCPMachineType"];
    string private_machine_properties = 20 [(gogoproto.customname) = "PrivateMachineProperties"];
    string private_machine_state = 21 [(gogoproto.customname) = "PrivateMachineState"];
    string private_power_management_ip = 22 [(gogoproto.customname) = "PrivatePowerManagementIP"];
    string private_power_management_password = 23 [(gogoproto.customname) = "PrivatePowerManagementPassword"];
    string private_power_management_username = 24 [(gogoproto.customname) = "PrivatePowerManagementUsername"]; 


}



message CreateNodeRequest {
    Node node = 1 [(gogoproto.customname) = "Node",(gogoproto.jsontag) = "node"];
}

message CreateNodeResponse {
    Node node = 1 [(gogoproto.customname) = "Node" ,(gogoproto.jsontag) = "node"];
}

message UpdateNodeRequest {
    Node node = 1 [(gogoproto.customname) = "Node",(gogoproto.jsontag) = "node"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateNodeResponse {
    Node node = 1 [(gogoproto.customname) = "Node",(gogoproto.jsontag) = "node"];
}

message DeleteNodeRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteNodeResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListNodeRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListNodeResponse {
    repeated Node nodes = 1 [(gogoproto.customname) = "Nodes", (gogoproto.jsontag) = "nodes"];
}

message GetNodeRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetNodeResponse {
    Node node = 1 [(gogoproto.customname) = "Node", (gogoproto.jsontag) = "node"];
}



message OpenstackCluster {

    string provisioning_log = 1 [(gogoproto.customname) = "ProvisioningLog"];
    int64 provisioning_progress = 2 [(gogoproto.customname) = "ProvisioningProgress"];
    string provisioning_progress_stage = 3 [(gogoproto.customname) = "ProvisioningProgressStage"];
    string provisioning_start_time = 4 [(gogoproto.customname) = "ProvisioningStartTime"];
    string provisioning_state = 5 [(gogoproto.customname) = "ProvisioningState"];
    string uuid = 6 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 7 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 8 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 9 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 10 [(gogoproto.customname) = "IDPerms"];
    string display_name = 11 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 12 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 13 [(gogoproto.customname) = "Perms2"];
    string admin_password = 14 [(gogoproto.customname) = "AdminPassword"];
    string contrail_cluster_id = 15 [(gogoproto.customname) = "ContrailClusterID"];
    string default_capacity_drives = 16 [(gogoproto.customname) = "DefaultCapacityDrives"];
    string default_journal_drives = 17 [(gogoproto.customname) = "DefaultJournalDrives"];
    string default_osd_drives = 18 [(gogoproto.customname) = "DefaultOsdDrives"];
    string default_performance_drives = 19 [(gogoproto.customname) = "DefaultPerformanceDrives"];
    string default_storage_access_bond_interface_members = 20 [(gogoproto.customname) = "DefaultStorageAccessBondInterfaceMembers"];
    string default_storage_backend_bond_interface_members = 21 [(gogoproto.customname) = "DefaultStorageBackendBondInterfaceMembers"];
    string external_allocation_pool_end = 22 [(gogoproto.customname) = "ExternalAllocationPoolEnd"];
    string external_allocation_pool_start = 23 [(gogoproto.customname) = "ExternalAllocationPoolStart"];
    string external_net_cidr = 24 [(gogoproto.customname) = "ExternalNetCidr"];
    string openstack_webui = 25 [(gogoproto.customname) = "OpenstackWebui"];
    string public_gateway = 26 [(gogoproto.customname) = "PublicGateway"];
    string public_ip = 27 [(gogoproto.customname) = "PublicIP"]; 


}



message CreateOpenstackClusterRequest {
    OpenstackCluster openstack_cluster = 1 [(gogoproto.customname) = "OpenstackCluster",(gogoproto.jsontag) = "openstack-cluster"];
}

message CreateOpenstackClusterResponse {
    OpenstackCluster openstack_cluster = 1 [(gogoproto.customname) = "OpenstackCluster" ,(gogoproto.jsontag) = "openstack-cluster"];
}

message UpdateOpenstackClusterRequest {
    OpenstackCluster openstack_cluster = 1 [(gogoproto.customname) = "OpenstackCluster",(gogoproto.jsontag) = "openstack-cluster"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateOpenstackClusterResponse {
    OpenstackCluster openstack_cluster = 1 [(gogoproto.customname) = "OpenstackCluster",(gogoproto.jsontag) = "openstack-cluster"];
}

message DeleteOpenstackClusterRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteOpenstackClusterResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListOpenstackClusterRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListOpenstackClusterResponse {
    repeated OpenstackCluster openstack_clusters = 1 [(gogoproto.customname) = "OpenstackClusters", (gogoproto.jsontag) = "openstack-clusters"];
}

message GetOpenstackClusterRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetOpenstackClusterResponse {
    OpenstackCluster openstack_cluster = 1 [(gogoproto.customname) = "OpenstackCluster", (gogoproto.jsontag) = "openstack-cluster"];
}



message OpenstackComputeNodeRole {

    string provisioning_log = 1 [(gogoproto.customname) = "ProvisioningLog"];
    int64 provisioning_progress = 2 [(gogoproto.customname) = "ProvisioningProgress"];
    string provisioning_progress_stage = 3 [(gogoproto.customname) = "ProvisioningProgressStage"];
    string provisioning_start_time = 4 [(gogoproto.customname) = "ProvisioningStartTime"];
    string provisioning_state = 5 [(gogoproto.customname) = "ProvisioningState"];
    string uuid = 6 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 7 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 8 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 9 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 10 [(gogoproto.customname) = "IDPerms"];
    string display_name = 11 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 12 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 13 [(gogoproto.customname) = "Perms2"];
    string default_gateway = 14 [(gogoproto.customname) = "DefaultGateway"];
    string vrouter_bond_interface = 15 [(gogoproto.customname) = "VrouterBondInterface"];
    string vrouter_bond_interface_members = 16 [(gogoproto.customname) = "VrouterBondInterfaceMembers"];
    string vrouter_type = 17 [(gogoproto.customname) = "VrouterType"]; 


}



message CreateOpenstackComputeNodeRoleRequest {
    OpenstackComputeNodeRole openstack_compute_node_role = 1 [(gogoproto.customname) = "OpenstackComputeNodeRole",(gogoproto.jsontag) = "openstack-compute-node-role"];
}

message CreateOpenstackComputeNodeRoleResponse {
    OpenstackComputeNodeRole openstack_compute_node_role = 1 [(gogoproto.customname) = "OpenstackComputeNodeRole" ,(gogoproto.jsontag) = "openstack-compute-node-role"];
}

message UpdateOpenstackComputeNodeRoleRequest {
    OpenstackComputeNodeRole openstack_compute_node_role = 1 [(gogoproto.customname) = "OpenstackComputeNodeRole",(gogoproto.jsontag) = "openstack-compute-node-role"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateOpenstackComputeNodeRoleResponse {
    OpenstackComputeNodeRole openstack_compute_node_role = 1 [(gogoproto.customname) = "OpenstackComputeNodeRole",(gogoproto.jsontag) = "openstack-compute-node-role"];
}

message DeleteOpenstackComputeNodeRoleRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteOpenstackComputeNodeRoleResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListOpenstackComputeNodeRoleRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListOpenstackComputeNodeRoleResponse {
    repeated OpenstackComputeNodeRole openstack_compute_node_roles = 1 [(gogoproto.customname) = "OpenstackComputeNodeRoles", (gogoproto.jsontag) = "openstack-compute-node-roles"];
}

message GetOpenstackComputeNodeRoleRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetOpenstackComputeNodeRoleResponse {
    OpenstackComputeNodeRole openstack_compute_node_role = 1 [(gogoproto.customname) = "OpenstackComputeNodeRole", (gogoproto.jsontag) = "openstack-compute-node-role"];
}



message OpenstackStorageNodeRole {

    string provisioning_log = 1 [(gogoproto.customname) = "ProvisioningLog"];
    int64 provisioning_progress = 2 [(gogoproto.customname) = "ProvisioningProgress"];
    string provisioning_progress_stage = 3 [(gogoproto.customname) = "ProvisioningProgressStage"];
    string provisioning_start_time = 4 [(gogoproto.customname) = "ProvisioningStartTime"];
    string provisioning_state = 5 [(gogoproto.customname) = "ProvisioningState"];
    string uuid = 6 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 7 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 8 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 9 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 10 [(gogoproto.customname) = "IDPerms"];
    string display_name = 11 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 12 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 13 [(gogoproto.customname) = "Perms2"];
    string journal_drives = 14 [(gogoproto.customname) = "JournalDrives"];
    string osd_drives = 15 [(gogoproto.customname) = "OsdDrives"];
    string storage_access_bond_interface_members = 16 [(gogoproto.customname) = "StorageAccessBondInterfaceMembers"];
    string storage_backend_bond_interface_members = 17 [(gogoproto.customname) = "StorageBackendBondInterfaceMembers"]; 


}



message CreateOpenstackStorageNodeRoleRequest {
    OpenstackStorageNodeRole openstack_storage_node_role = 1 [(gogoproto.customname) = "OpenstackStorageNodeRole",(gogoproto.jsontag) = "openstack-storage-node-role"];
}

message CreateOpenstackStorageNodeRoleResponse {
    OpenstackStorageNodeRole openstack_storage_node_role = 1 [(gogoproto.customname) = "OpenstackStorageNodeRole" ,(gogoproto.jsontag) = "openstack-storage-node-role"];
}

message UpdateOpenstackStorageNodeRoleRequest {
    OpenstackStorageNodeRole openstack_storage_node_role = 1 [(gogoproto.customname) = "OpenstackStorageNodeRole",(gogoproto.jsontag) = "openstack-storage-node-role"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateOpenstackStorageNodeRoleResponse {
    OpenstackStorageNodeRole openstack_storage_node_role = 1 [(gogoproto.customname) = "OpenstackStorageNodeRole",(gogoproto.jsontag) = "openstack-storage-node-role"];
}

message DeleteOpenstackStorageNodeRoleRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteOpenstackStorageNodeRoleResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListOpenstackStorageNodeRoleRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListOpenstackStorageNodeRoleResponse {
    repeated OpenstackStorageNodeRole openstack_storage_node_roles = 1 [(gogoproto.customname) = "OpenstackStorageNodeRoles", (gogoproto.jsontag) = "openstack-storage-node-roles"];
}

message GetOpenstackStorageNodeRoleRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetOpenstackStorageNodeRoleResponse {
    OpenstackStorageNodeRole openstack_storage_node_role = 1 [(gogoproto.customname) = "OpenstackStorageNodeRole", (gogoproto.jsontag) = "openstack-storage-node-role"];
}



message Server {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    string created = 9 [(gogoproto.customname) = "Created"];
    string hostId = 10 [(gogoproto.customname) = "HostId"];
    string id = 11 [(gogoproto.customname) = "ID"];
    string name = 12 [(gogoproto.customname) = "Name"];
    OpenStackImageProperty image = 13 [(gogoproto.customname) = "Image"];
    OpenStackFlavorProperty flavor = 14 [(gogoproto.customname) = "Flavor"];
    OpenStackAddress addresses = 15 [(gogoproto.customname) = "Addresses"];
    string accessIPv4 = 16 [(gogoproto.customname) = "AccessIPv4"];
    string accessIPv6 = 17 [(gogoproto.customname) = "AccessIPv6"];
    bool config_drive = 18 [(gogoproto.customname) = "ConfigDrive"];
    int64 progress = 19 [(gogoproto.customname) = "Progress"];
    string status = 20 [(gogoproto.customname) = "Status"];
    string host_status = 21 [(gogoproto.customname) = "HostStatus"];
    string tenant_id = 22 [(gogoproto.customname) = "TenantID"];
    string updated = 23 [(gogoproto.customname) = "Updated"];
    int64 user_id = 24 [(gogoproto.customname) = "UserID"];
    bool locked = 25 [(gogoproto.customname) = "Locked"]; 


}



message CreateServerRequest {
    Server server = 1 [(gogoproto.customname) = "Server",(gogoproto.jsontag) = "server"];
}

message CreateServerResponse {
    Server server = 1 [(gogoproto.customname) = "Server" ,(gogoproto.jsontag) = "server"];
}

message UpdateServerRequest {
    Server server = 1 [(gogoproto.customname) = "Server",(gogoproto.jsontag) = "server"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateServerResponse {
    Server server = 1 [(gogoproto.customname) = "Server",(gogoproto.jsontag) = "server"];
}

message DeleteServerRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteServerResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListServerRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListServerResponse {
    repeated Server servers = 1 [(gogoproto.customname) = "Servers", (gogoproto.jsontag) = "servers"];
}

message GetServerRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetServerResponse {
    Server server = 1 [(gogoproto.customname) = "Server", (gogoproto.jsontag) = "server"];
}



message VPNGroup {

    string provisioning_log = 1 [(gogoproto.customname) = "ProvisioningLog"];
    int64 provisioning_progress = 2 [(gogoproto.customname) = "ProvisioningProgress"];
    string provisioning_progress_stage = 3 [(gogoproto.customname) = "ProvisioningProgressStage"];
    string provisioning_start_time = 4 [(gogoproto.customname) = "ProvisioningStartTime"];
    string provisioning_state = 5 [(gogoproto.customname) = "ProvisioningState"];
    string uuid = 6 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 7 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 8 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 9 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 10 [(gogoproto.customname) = "IDPerms"];
    string display_name = 11 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 12 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 13 [(gogoproto.customname) = "Perms2"];
    string type = 14 [(gogoproto.customname) = "Type"]; 

    repeated VPNGroupLocationRef location_refs = 1015 [(gogoproto.customname) = "LocationRefs"];

}


message VPNGroupLocationRef {
    string uuid = 1 [(gogoproto.customname) = "UUID"];
    repeated string to = 2 [(gogoproto.customname) = "To"];
    
}


message CreateVPNGroupRequest {
    VPNGroup vpn_group = 1 [(gogoproto.customname) = "VPNGroup",(gogoproto.jsontag) = "vpn-group"];
}

message CreateVPNGroupResponse {
    VPNGroup vpn_group = 1 [(gogoproto.customname) = "VPNGroup" ,(gogoproto.jsontag) = "vpn-group"];
}

message UpdateVPNGroupRequest {
    VPNGroup vpn_group = 1 [(gogoproto.customname) = "VPNGroup",(gogoproto.jsontag) = "vpn-group"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateVPNGroupResponse {
    VPNGroup vpn_group = 1 [(gogoproto.customname) = "VPNGroup",(gogoproto.jsontag) = "vpn-group"];
}

message DeleteVPNGroupRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteVPNGroupResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListVPNGroupRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListVPNGroupResponse {
    repeated VPNGroup vpn_groups = 1 [(gogoproto.customname) = "VPNGroups", (gogoproto.jsontag) = "vpn-groups"];
}

message GetVPNGroupRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetVPNGroupResponse {
    VPNGroup vpn_group = 1 [(gogoproto.customname) = "VPNGroup", (gogoproto.jsontag) = "vpn-group"];
}



message Widget {

    string uuid = 1 [(gogoproto.customname) = "UUID"];
    string parent_uuid = 2 [(gogoproto.customname) = "ParentUUID"];
    string parent_type = 3 [(gogoproto.customname) = "ParentType"];
    repeated string fq_name = 4 [(gogoproto.customname) = "FQName"];
    IdPermsType id_perms = 5 [(gogoproto.customname) = "IDPerms"];
    string display_name = 6 [(gogoproto.customname) = "DisplayName"];
    KeyValuePairs annotations = 7 [(gogoproto.customname) = "Annotations"];
    PermType2 perms2 = 8 [(gogoproto.customname) = "Perms2"];
    string container_config = 9 [(gogoproto.customname) = "ContainerConfig"];
    string content_config = 10 [(gogoproto.customname) = "ContentConfig"];
    string layout_config = 11 [(gogoproto.customname) = "LayoutConfig"]; 


}



message CreateWidgetRequest {
    Widget widget = 1 [(gogoproto.customname) = "Widget",(gogoproto.jsontag) = "widget"];
}

message CreateWidgetResponse {
    Widget widget = 1 [(gogoproto.customname) = "Widget" ,(gogoproto.jsontag) = "widget"];
}

message UpdateWidgetRequest {
    Widget widget = 1 [(gogoproto.customname) = "Widget",(gogoproto.jsontag) = "widget"];
    google.protobuf.FieldMask field_mask = 2 [(gogoproto.nullable) = false];
}

message UpdateWidgetResponse {
    Widget widget = 1 [(gogoproto.customname) = "Widget",(gogoproto.jsontag) = "widget"];
}

message DeleteWidgetRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message DeleteWidgetResponse {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message ListWidgetRequest {
    ListSpec spec = 1 [(gogoproto.customname) = "Spec"];
}

message ListWidgetResponse {
    repeated Widget widgets = 1 [(gogoproto.customname) = "Widgets", (gogoproto.jsontag) = "widgets"];
}

message GetWidgetRequest {
    string id = 1 [(gogoproto.customname) = "ID"];
}

message GetWidgetResponse {
    Widget widget = 1 [(gogoproto.customname) = "Widget", (gogoproto.jsontag) = "widget"];
}







message EncapsulationPrioritiesType {

    repeated string encapsulation = 1 [(gogoproto.customname) = "Encapsulation"]; 
}



message AllowedAddressPair {

    SubnetType ip = 1 [(gogoproto.customname) = "IP"];
    string mac = 2 [(gogoproto.customname) = "Mac"];
    string address_mode = 3 [(gogoproto.customname) = "AddressMode"]; 
}



message FirewallRuleEndpointType {

    string address_group = 1 [(gogoproto.customname) = "AddressGroup"];
    SubnetType subnet = 2 [(gogoproto.customname) = "Subnet"];
    repeated string tags = 3 [(gogoproto.customname) = "Tags"];
    repeated int64 tag_ids = 4 [(gogoproto.customname) = "TagIds"];
    string virtual_network = 5 [(gogoproto.customname) = "VirtualNetwork"];
    bool any = 6 [(gogoproto.customname) = "Any"]; 
}









message AllocationPoolType {

    bool vrouter_specific_pool = 1 [(gogoproto.customname) = "VrouterSpecificPool"];
    string start = 2 [(gogoproto.customname) = "Start"];
    string end = 3 [(gogoproto.customname) = "End"]; 
}







message DiscoveryPubSubEndPointType {

    string ep_version = 1 [(gogoproto.customname) = "EpVersion"];
    string ep_id = 2 [(gogoproto.customname) = "EpID"];
    string ep_type = 3 [(gogoproto.customname) = "EpType"];
    SubnetType ep_prefix = 4 [(gogoproto.customname) = "EpPrefix"]; 
}



message DiscoveryServiceAssignmentType {

    repeated DiscoveryPubSubEndPointType subscriber = 1 [(gogoproto.customname) = "Subscriber"];
    DiscoveryPubSubEndPointType publisher = 2 [(gogoproto.customname) = "Publisher"]; 
}





message LoadbalancerListenerType {

    string default_tls_container = 1 [(gogoproto.customname) = "DefaultTLSContainer"];
    string protocol = 2 [(gogoproto.customname) = "Protocol"];
    int64 connection_limit = 3 [(gogoproto.customname) = "ConnectionLimit"];
    bool admin_state = 4 [(gogoproto.customname) = "AdminState"];
    repeated string sni_containers = 5 [(gogoproto.customname) = "SniContainers"];
    int64 protocol_port = 6 [(gogoproto.customname) = "ProtocolPort"]; 
}



message ProtocolType {

    string protocol = 1 [(gogoproto.customname) = "Protocol"];
    int64 port = 2 [(gogoproto.customname) = "Port"]; 
}



message VirtualRouterNetworkIpamType {

    repeated SubnetType subnet = 1 [(gogoproto.customname) = "Subnet"];
    repeated AllocationPoolType allocation_pools = 2 [(gogoproto.customname) = "AllocationPools"]; 
}



message ShareType {

    int64 tenant_access = 1 [(gogoproto.customname) = "TenantAccess"];
    string tenant = 2 [(gogoproto.customname) = "Tenant"]; 
}



message PortType {

    int64 end_port = 1 [(gogoproto.customname) = "EndPort"];
    int64 start_port = 2 [(gogoproto.customname) = "StartPort"]; 
}





message SNMPCredentials {

    string v3_privacy_protocol = 1 [(gogoproto.customname) = "V3PrivacyProtocol"];
    int64 retries = 2 [(gogoproto.customname) = "Retries"];
    string v3_authentication_password = 3 [(gogoproto.customname) = "V3AuthenticationPassword"];
    int64 v3_engine_time = 4 [(gogoproto.customname) = "V3EngineTime"];
    string v3_engine_id = 5 [(gogoproto.customname) = "V3EngineID"];
    int64 local_port = 6 [(gogoproto.customname) = "LocalPort"];
    string v3_security_level = 7 [(gogoproto.customname) = "V3SecurityLevel"];
    string v3_context = 8 [(gogoproto.customname) = "V3Context"];
    string v3_security_name = 9 [(gogoproto.customname) = "V3SecurityName"];
    string v3_authentication_protocol = 10 [(gogoproto.customname) = "V3AuthenticationProtocol"];
    string v2_community = 11 [(gogoproto.customname) = "V2Community"];
    string v3_security_engine_id = 12 [(gogoproto.customname) = "V3SecurityEngineID"];
    string v3_context_engine_id = 13 [(gogoproto.customname) = "V3ContextEngineID"];
    int64 version = 14 [(gogoproto.customname) = "Version"];
    int64 timeout = 15 [(gogoproto.customname) = "Timeout"];
    string v3_privacy_password = 16 [(gogoproto.customname) = "V3PrivacyPassword"];
    int64 v3_engine_boots = 17 [(gogoproto.customname) = "V3EngineBoots"]; 
}



message AllowedAddressPairs {

    repeated AllowedAddressPair allowed_address_pair = 1 [(gogoproto.customname) = "AllowedAddressPair"]; 
}



message FatFlowProtocols {

    repeated ProtocolType fat_flow_protocol = 1 [(gogoproto.customname) = "FatFlowProtocol"]; 
}



message PolicyBasedForwardingRuleType {

    string dst_mac = 1 [(gogoproto.customname) = "DSTMac"];
    string protocol = 2 [(gogoproto.customname) = "Protocol"];
    string ipv6_service_chain_address = 3 [(gogoproto.customname) = "Ipv6ServiceChainAddress"];
    string direction = 4 [(gogoproto.customname) = "Direction"];
    int64 mpls_label = 5 [(gogoproto.customname) = "MPLSLabel"];
    int64 vlan_tag = 6 [(gogoproto.customname) = "VlanTag"];
    string src_mac = 7 [(gogoproto.customname) = "SRCMac"];
    string service_chain_address = 8 [(gogoproto.customname) = "ServiceChainAddress"]; 
}



message MatchConditionType {

    PortType src_port = 1 [(gogoproto.customname) = "SRCPort"];
    AddressType src_address = 2 [(gogoproto.customname) = "SRCAddress"];
    string ethertype = 3 [(gogoproto.customname) = "Ethertype"];
    AddressType dst_address = 4 [(gogoproto.customname) = "DSTAddress"];
    PortType dst_port = 5 [(gogoproto.customname) = "DSTPort"];
    string protocol = 6 [(gogoproto.customname) = "Protocol"]; 
}











message InterfaceMirrorType {

    string traffic_direction = 1 [(gogoproto.customname) = "TrafficDirection"];
    MirrorActionType mirror_to = 2 [(gogoproto.customname) = "MirrorTo"]; 
}



message DriverInfo {

    string ipmi_address = 1 [(gogoproto.customname) = "IpmiAddress"];
    string ipmi_username = 2 [(gogoproto.customname) = "IpmiUsername"];
    string ipmi_password = 3 [(gogoproto.customname) = "IpmiPassword"];
    string deploy_kernel = 4 [(gogoproto.customname) = "DeployKernel"];
    string deploy_ramdisk = 5 [(gogoproto.customname) = "DeployRamdisk"]; 
}



message RoutingPolicyServiceInstanceType {

    string right_sequence = 1 [(gogoproto.customname) = "RightSequence"];
    string left_sequence = 2 [(gogoproto.customname) = "LeftSequence"]; 
}



message UserDefinedLogStatList {

    repeated UserDefinedLogStat statlist = 1 [(gogoproto.customname) = "Statlist"]; 
}



message FlowAgingTimeout {

    int64 timeout_in_seconds = 1 [(gogoproto.customname) = "TimeoutInSeconds"];
    string protocol = 2 [(gogoproto.customname) = "Protocol"];
    int64 port = 3 [(gogoproto.customname) = "Port"]; 
}



message LinklocalServicesTypes {

    repeated LinklocalServiceEntryType linklocal_service_entry = 1 [(gogoproto.customname) = "LinklocalServiceEntry"]; 
}



message IpamSubnets {

    repeated IpamSubnetType subnets = 1 [(gogoproto.customname) = "Subnets"]; 
}



message FirewallServiceGroupType {

    repeated FirewallServiceType firewall_service = 1 [(gogoproto.customname) = "FirewallService"]; 
}



message MacAddressesType {

    repeated string mac_address = 1 [(gogoproto.customname) = "MacAddress"]; 
}



message ServiceInterfaceTag {

    string interface_type = 1 [(gogoproto.customname) = "InterfaceType"]; 
}







message EcmpHashingIncludeFields {

    bool destination_ip = 1 [(gogoproto.customname) = "DestinationIP"];
    bool ip_protocol = 2 [(gogoproto.customname) = "IPProtocol"];
    bool source_ip = 3 [(gogoproto.customname) = "SourceIP"];
    bool hashing_configured = 4 [(gogoproto.customname) = "HashingConfigured"];
    bool source_port = 5 [(gogoproto.customname) = "SourcePort"];
    bool destination_port = 6 [(gogoproto.customname) = "DestinationPort"]; 
}



message IpAddressesType {

    string ip_address = 1 [(gogoproto.customname) = "IPAddress"]; 
}



message IpamSubnetType {

    SubnetType subnet = 1 [(gogoproto.customname) = "Subnet"];
    bool addr_from_start = 2 [(gogoproto.customname) = "AddrFromStart"];
    bool enable_dhcp = 3 [(gogoproto.customname) = "EnableDHCP"];
    string default_gateway = 4 [(gogoproto.customname) = "DefaultGateway"];
    int64 alloc_unit = 5 [(gogoproto.customname) = "AllocUnit"];
    string created = 6 [(gogoproto.customname) = "Created"];
    repeated string dns_nameservers = 7 [(gogoproto.customname) = "DNSNameservers"];
    DhcpOptionsListType dhcp_option_list = 8 [(gogoproto.customname) = "DHCPOptionList"];
    string subnet_uuid = 9 [(gogoproto.customname) = "SubnetUUID"];
    repeated AllocationPoolType allocation_pools = 10 [(gogoproto.customname) = "AllocationPools"];
    string last_modified = 11 [(gogoproto.customname) = "LastModified"];
    RouteTableType host_routes = 12 [(gogoproto.customname) = "HostRoutes"];
    string dns_server_address = 13 [(gogoproto.customname) = "DNSServerAddress"];
    string subnet_name = 14 [(gogoproto.customname) = "SubnetName"]; 
}



message QuotaType {

    int64 virtual_router = 1 [(gogoproto.customname) = "VirtualRouter"];
    int64 network_policy = 2 [(gogoproto.customname) = "NetworkPolicy"];
    int64 loadbalancer_pool = 3 [(gogoproto.customname) = "LoadbalancerPool"];
    int64 route_table = 4 [(gogoproto.customname) = "RouteTable"];
    int64 subnet = 5 [(gogoproto.customname) = "Subnet"];
    int64 network_ipam = 6 [(gogoproto.customname) = "NetworkIpam"];
    int64 virtual_DNS_record = 7 [(gogoproto.customname) = "VirtualDNSRecord"];
    int64 logical_router = 8 [(gogoproto.customname) = "LogicalRouter"];
    int64 security_group_rule = 9 [(gogoproto.customname) = "SecurityGroupRule"];
    int64 virtual_DNS = 10 [(gogoproto.customname) = "VirtualDNS"];
    int64 service_instance = 11 [(gogoproto.customname) = "ServiceInstance"];
    int64 service_template = 12 [(gogoproto.customname) = "ServiceTemplate"];
    int64 bgp_router = 13 [(gogoproto.customname) = "BGPRouter"];
    int64 floating_ip = 14 [(gogoproto.customname) = "FloatingIP"];
    int64 floating_ip_pool = 15 [(gogoproto.customname) = "FloatingIPPool"];
    int64 loadbalancer_member = 16 [(gogoproto.customname) = "LoadbalancerMember"];
    int64 access_control_list = 17 [(gogoproto.customname) = "AccessControlList"];
    int64 virtual_machine_interface = 18 [(gogoproto.customname) = "VirtualMachineInterface"];
    int64 instance_ip = 19 [(gogoproto.customname) = "InstanceIP"];
    int64 global_vrouter_config = 20 [(gogoproto.customname) = "GlobalVrouterConfig"];
    int64 security_logging_object = 21 [(gogoproto.customname) = "SecurityLoggingObject"];
    int64 loadbalancer_healthmonitor = 22 [(gogoproto.customname) = "LoadbalancerHealthmonitor"];
    int64 virtual_ip = 23 [(gogoproto.customname) = "VirtualIP"];
    int64 defaults = 24 [(gogoproto.customname) = "Defaults"];
    int64 security_group = 25 [(gogoproto.customname) = "SecurityGroup"];
    int64 virtual_network = 26 [(gogoproto.customname) = "VirtualNetwork"]; 
}









message KeyValuePairs {

    repeated KeyValuePair key_value_pair = 1 [(gogoproto.customname) = "KeyValuePair"]; 
}



message StaticMirrorNhType {

    string vtep_dst_ip_address = 1 [(gogoproto.customname) = "VtepDSTIPAddress"];
    string vtep_dst_mac_address = 2 [(gogoproto.customname) = "VtepDSTMacAddress"];
    int64 vni = 3 [(gogoproto.customname) = "Vni"]; 
}



message FlowAgingTimeoutList {

    repeated FlowAgingTimeout flow_aging_timeout = 1 [(gogoproto.customname) = "FlowAgingTimeout"]; 
}



message VirtualDnsRecordType {

    string record_name = 1 [(gogoproto.customname) = "RecordName"];
    string record_class = 2 [(gogoproto.customname) = "RecordClass"];
    string record_data = 3 [(gogoproto.customname) = "RecordData"];
    string record_type = 4 [(gogoproto.customname) = "RecordType"];
    int64 record_ttl_seconds = 5 [(gogoproto.customname) = "RecordTTLSeconds"];
    int64 record_mx_preference = 6 [(gogoproto.customname) = "RecordMXPreference"]; 
}



message FloatingIpPoolSubnetType {

    repeated string subnet_uuid = 1 [(gogoproto.customname) = "SubnetUUID"]; 
}









message PortMappings {

    repeated PortMap port_mappings = 1 [(gogoproto.customname) = "PortMappings"]; 
}





message BridgeDomainMembershipType {

    int64 vlan_tag = 1 [(gogoproto.customname) = "VlanTag"]; 
}





message FirewallRuleMatchTagsType {

    repeated string tag_list = 1 [(gogoproto.customname) = "TagList"]; 
}





message VirtualDnsType {

    string floating_ip_record = 1 [(gogoproto.customname) = "FloatingIPRecord"];
    string domain_name = 2 [(gogoproto.customname) = "DomainName"];
    bool external_visible = 3 [(gogoproto.customname) = "ExternalVisible"];
    string next_virtual_DNS = 4 [(gogoproto.customname) = "NextVirtualDNS"];
    bool dynamic_records_from_client = 5 [(gogoproto.customname) = "DynamicRecordsFromClient"];
    bool reverse_resolution = 6 [(gogoproto.customname) = "ReverseResolution"];
    int64 default_ttl_seconds = 7 [(gogoproto.customname) = "DefaultTTLSeconds"];
    string record_order = 8 [(gogoproto.customname) = "RecordOrder"]; 
}



message VrfAssignTableType {

    repeated VrfAssignRuleType vrf_assign_rule = 1 [(gogoproto.customname) = "VRFAssignRule"]; 
}





message VirtualNetworkType {

    string forwarding_mode = 1 [(gogoproto.customname) = "ForwardingMode"];
    bool allow_transit = 2 [(gogoproto.customname) = "AllowTransit"];
    int64 network_id = 3 [(gogoproto.customname) = "NetworkID"];
    bool mirror_destination = 4 [(gogoproto.customname) = "MirrorDestination"];
    int64 vxlan_network_identifier = 5 [(gogoproto.customname) = "VxlanNetworkIdentifier"];
    string rpf = 6 [(gogoproto.customname) = "RPF"]; 
}







message AddressType {

    string security_group = 1 [(gogoproto.customname) = "SecurityGroup"];
    SubnetType subnet = 2 [(gogoproto.customname) = "Subnet"];
    string network_policy = 3 [(gogoproto.customname) = "NetworkPolicy"];
    repeated SubnetType subnet_list = 4 [(gogoproto.customname) = "SubnetList"];
    string virtual_network = 5 [(gogoproto.customname) = "VirtualNetwork"]; 
}



message AclRuleType {

    string rule_uuid = 1 [(gogoproto.customname) = "RuleUUID"];
    MatchConditionType match_condition = 2 [(gogoproto.customname) = "MatchCondition"];
    string direction = 3 [(gogoproto.customname) = "Direction"];
    ActionListType action_list = 4 [(gogoproto.customname) = "ActionList"]; 
}



message ControlTrafficDscpType {

    int64 control = 1 [(gogoproto.customname) = "Control"];
    int64 analytics = 2 [(gogoproto.customname) = "Analytics"];
    int64 dns = 3 [(gogoproto.customname) = "DNS"]; 
}



message PluginProperty {

    string property = 1 [(gogoproto.customname) = "Property"];
    string value = 2 [(gogoproto.customname) = "Value"]; 
}



message VirtualMachineInterfacePropertiesType {

    int64 sub_interface_vlan_tag = 1 [(gogoproto.customname) = "SubInterfaceVlanTag"];
    int64 local_preference = 2 [(gogoproto.customname) = "LocalPreference"];
    InterfaceMirrorType interface_mirror = 3 [(gogoproto.customname) = "InterfaceMirror"];
    string service_interface_type = 4 [(gogoproto.customname) = "ServiceInterfaceType"]; 
}



message MirrorActionType {

    int64 nic_assisted_mirroring_vlan = 1 [(gogoproto.customname) = "NicAssistedMirroringVlan"];
    string analyzer_name = 2 [(gogoproto.customname) = "AnalyzerName"];
    string nh_mode = 3 [(gogoproto.customname) = "NHMode"];
    bool juniper_header = 4 [(gogoproto.customname) = "JuniperHeader"];
    int64 udp_port = 5 [(gogoproto.customname) = "UDPPort"];
    string routing_instance = 6 [(gogoproto.customname) = "RoutingInstance"];
    StaticMirrorNhType static_nh_header = 7 [(gogoproto.customname) = "StaticNHHeader"];
    string analyzer_ip_address = 8 [(gogoproto.customname) = "AnalyzerIPAddress"];
    string encapsulation = 9 [(gogoproto.customname) = "Encapsulation"];
    string analyzer_mac_address = 10 [(gogoproto.customname) = "AnalyzerMacAddress"];
    bool nic_assisted_mirroring = 11 [(gogoproto.customname) = "NicAssistedMirroring"]; 
}





message KeyValuePair {

    string value = 1 [(gogoproto.customname) = "Value"];
    string key = 2 [(gogoproto.customname) = "Key"]; 
}





message MACMoveLimitControlType {

    int64 mac_move_time_window = 1 [(gogoproto.customname) = "MacMoveTimeWindow"];
    int64 mac_move_limit = 2 [(gogoproto.customname) = "MacMoveLimit"];
    string mac_move_limit_action = 3 [(gogoproto.customname) = "MacMoveLimitAction"]; 
}



message PortMap {

    int64 src_port = 1 [(gogoproto.customname) = "SRCPort"];
    string protocol = 2 [(gogoproto.customname) = "Protocol"];
    int64 dst_port = 3 [(gogoproto.customname) = "DSTPort"]; 
}



message LoadbalancerType {

    string status = 1 [(gogoproto.customname) = "Status"];
    string provisioning_status = 2 [(gogoproto.customname) = "ProvisioningStatus"];
    bool admin_state = 3 [(gogoproto.customname) = "AdminState"];
    string vip_address = 4 [(gogoproto.customname) = "VipAddress"];
    string vip_subnet_id = 5 [(gogoproto.customname) = "VipSubnetID"];
    string operating_status = 6 [(gogoproto.customname) = "OperatingStatus"]; 
}



message PolicyRuleType {

    string direction = 1 [(gogoproto.customname) = "Direction"];
    string protocol = 2 [(gogoproto.customname) = "Protocol"];
    repeated AddressType dst_addresses = 3 [(gogoproto.customname) = "DSTAddresses"];
    ActionListType action_list = 4 [(gogoproto.customname) = "ActionList"];
    string created = 5 [(gogoproto.customname) = "Created"];
    string rule_uuid = 6 [(gogoproto.customname) = "RuleUUID"];
    repeated PortType dst_ports = 7 [(gogoproto.customname) = "DSTPorts"];
    repeated string application = 8 [(gogoproto.customname) = "Application"];
    string last_modified = 9 [(gogoproto.customname) = "LastModified"];
    string ethertype = 10 [(gogoproto.customname) = "Ethertype"];
    repeated AddressType src_addresses = 11 [(gogoproto.customname) = "SRCAddresses"];
    SequenceType rule_sequence = 12 [(gogoproto.customname) = "RuleSequence"];
    repeated PortType src_ports = 13 [(gogoproto.customname) = "SRCPorts"]; 
}



message RouteTableType {

    repeated RouteType route = 1 [(gogoproto.customname) = "Route"]; 
}







message AlarmOperand2 {

    string uve_attribute = 1 [(gogoproto.customname) = "UveAttribute"];
    string json_value = 2 [(gogoproto.customname) = "JSONValue"]; 
}



message AlarmOrList {

    repeated AlarmAndList or_list = 1 [(gogoproto.customname) = "OrList"]; 
}



message RbacPermType {

    string role_crud = 1 [(gogoproto.customname) = "RoleCrud"];
    string role_name = 2 [(gogoproto.customname) = "RoleName"]; 
}



message DomainLimitsType {

    int64 project_limit = 1 [(gogoproto.customname) = "ProjectLimit"];
    int64 virtual_network_limit = 2 [(gogoproto.customname) = "VirtualNetworkLimit"];
    int64 security_group_limit = 3 [(gogoproto.customname) = "SecurityGroupLimit"]; 
}





message LoadbalancerHealthmonitorType {

    int64 delay = 1 [(gogoproto.customname) = "Delay"];
    string expected_codes = 2 [(gogoproto.customname) = "ExpectedCodes"];
    int64 max_retries = 3 [(gogoproto.customname) = "MaxRetries"];
    string http_method = 4 [(gogoproto.customname) = "HTTPMethod"];
    bool admin_state = 5 [(gogoproto.customname) = "AdminState"];
    int64 timeout = 6 [(gogoproto.customname) = "Timeout"];
    string url_path = 7 [(gogoproto.customname) = "URLPath"];
    string monitor_type = 8 [(gogoproto.customname) = "MonitorType"]; 
}





message SequenceType {

    int64 major = 1 [(gogoproto.customname) = "Major"];
    int64 minor = 2 [(gogoproto.customname) = "Minor"]; 
}





message BaremetalProperties {

    int64 cpu_count = 1 [(gogoproto.customname) = "CPUCount"];
    string cpu_arch = 2 [(gogoproto.customname) = "CPUArch"];
    int64 disk_gb = 3 [(gogoproto.customname) = "DiskGB"];
    int64 memory_mb = 4 [(gogoproto.customname) = "MemoryMB"]; 
}



message OpenStackImageProperty {

    string id = 1 [(gogoproto.customname) = "ID"];
    OpenStackLink links = 2 [(gogoproto.customname) = "Links"]; 
}



message VnSubnetsType {

    repeated IpamSubnetType ipam_subnets = 1 [(gogoproto.customname) = "IpamSubnets"];
    RouteTableType host_routes = 2 [(gogoproto.customname) = "HostRoutes"]; 
}



message SubnetType {

    string ip_prefix = 1 [(gogoproto.customname) = "IPPrefix"];
    int64 ip_prefix_len = 2 [(gogoproto.customname) = "IPPrefixLen"]; 
}



message MACLimitControlType {

    int64 mac_limit = 1 [(gogoproto.customname) = "MacLimit"];
    string mac_limit_action = 2 [(gogoproto.customname) = "MacLimitAction"]; 
}



message GracefulRestartParametersType {

    bool enable = 1 [(gogoproto.customname) = "Enable"];
    int64 end_of_rib_timeout = 2 [(gogoproto.customname) = "EndOfRibTimeout"];
    bool bgp_helper_enable = 3 [(gogoproto.customname) = "BGPHelperEnable"];
    bool xmpp_helper_enable = 4 [(gogoproto.customname) = "XMPPHelperEnable"];
    int64 restart_time = 5 [(gogoproto.customname) = "RestartTime"];
    int64 long_lived_restart_time = 6 [(gogoproto.customname) = "LongLivedRestartTime"]; 
}









message LoadbalancerPoolType {

    string status = 1 [(gogoproto.customname) = "Status"];
    string protocol = 2 [(gogoproto.customname) = "Protocol"];
    string subnet_id = 3 [(gogoproto.customname) = "SubnetID"];
    string session_persistence = 4 [(gogoproto.customname) = "SessionPersistence"];
    bool admin_state = 5 [(gogoproto.customname) = "AdminState"];
    string persistence_cookie_name = 6 [(gogoproto.customname) = "PersistenceCookieName"];
    string status_description = 7 [(gogoproto.customname) = "StatusDescription"];
    string loadbalancer_method = 8 [(gogoproto.customname) = "LoadbalancerMethod"]; 
}





message TelemetryStateInfo {

    repeated TelemetryResourceInfo resource = 1 [(gogoproto.customname) = "Resource"];
    int64 server_port = 2 [(gogoproto.customname) = "ServerPort"];
    string server_ip = 3 [(gogoproto.customname) = "ServerIP"]; 
}



message SecurityLoggingObjectRuleEntryType {

    string rule_uuid = 1 [(gogoproto.customname) = "RuleUUID"];
    int64 rate = 2 [(gogoproto.customname) = "Rate"]; 
}



message SecurityLoggingObjectRuleListType {

    repeated SecurityLoggingObjectRuleEntryType rule = 1 [(gogoproto.customname) = "Rule"]; 
}





message InstanceInfo {

    string display_name = 1 [(gogoproto.customname) = "DisplayName"];
    string image_source = 2 [(gogoproto.customname) = "ImageSource"];
    string local_gb = 3 [(gogoproto.customname) = "LocalGB"];
    string memory_mb = 4 [(gogoproto.customname) = "MemoryMB"];
    string nova_host_id = 5 [(gogoproto.customname) = "NovaHostID"];
    string root_gb = 6 [(gogoproto.customname) = "RootGB"];
    string swap_mb = 7 [(gogoproto.customname) = "SwapMB"];
    string vcpus = 8 [(gogoproto.customname) = "Vcpus"];
    string capabilities = 9 [(gogoproto.customname) = "Capabilities"]; 
}





message PermType2 {

    string owner = 1 [(gogoproto.customname) = "Owner"];
    int64 owner_access = 2 [(gogoproto.customname) = "OwnerAccess"];
    int64 global_access = 3 [(gogoproto.customname) = "GlobalAccess"];
    repeated ShareType share = 4 [(gogoproto.customname) = "Share"]; 
}



message SubnetListType {

    repeated SubnetType subnet = 1 [(gogoproto.customname) = "Subnet"]; 
}



message UveKeysType {

    repeated string uve_key = 1 [(gogoproto.customname) = "UveKey"]; 
}







message IpamDnsAddressType {

    IpAddressesType tenant_dns_server_address = 1 [(gogoproto.customname) = "TenantDNSServerAddress"];
    string virtual_dns_server_name = 2 [(gogoproto.customname) = "VirtualDNSServerName"]; 
}



message ServiceTemplateType {

    bool availability_zone_enable = 1 [(gogoproto.customname) = "AvailabilityZoneEnable"];
    string instance_data = 2 [(gogoproto.customname) = "InstanceData"];
    bool ordered_interfaces = 3 [(gogoproto.customname) = "OrderedInterfaces"];
    string service_virtualization_type = 4 [(gogoproto.customname) = "ServiceVirtualizationType"];
    repeated ServiceTemplateInterfaceType interface_type = 5 [(gogoproto.customname) = "InterfaceType"];
    string image_name = 6 [(gogoproto.customname) = "ImageName"];
    string service_mode = 7 [(gogoproto.customname) = "ServiceMode"];
    int64 version = 8 [(gogoproto.customname) = "Version"];
    string service_type = 9 [(gogoproto.customname) = "ServiceType"];
    string flavor = 10 [(gogoproto.customname) = "Flavor"];
    bool service_scaling = 11 [(gogoproto.customname) = "ServiceScaling"];
    string vrouter_instance_type = 12 [(gogoproto.customname) = "VrouterInstanceType"]; 
}



message ServiceApplianceInterfaceType {

    string interface_type = 1 [(gogoproto.customname) = "InterfaceType"]; 
}





message PluginProperties {

    repeated PluginProperty plugin_property = 1 [(gogoproto.customname) = "PluginProperty"]; 
}



message QosIdForwardingClassPair {

    int64 key = 1 [(gogoproto.customname) = "Key"];
    int64 forwarding_class_id = 2 [(gogoproto.customname) = "ForwardingClassID"]; 
}



message ServiceTemplateInterfaceType {

    bool static_route_enable = 1 [(gogoproto.customname) = "StaticRouteEnable"];
    bool shared_ip = 2 [(gogoproto.customname) = "SharedIP"];
    string service_interface_type = 3 [(gogoproto.customname) = "ServiceInterfaceType"]; 
}





message TimerType {

    string start_time = 1 [(gogoproto.customname) = "StartTime"];
    string off_interval = 2 [(gogoproto.customname) = "OffInterval"];
    string on_interval = 3 [(gogoproto.customname) = "OnInterval"];
    string end_time = 4 [(gogoproto.customname) = "EndTime"]; 
}





message AlarmAndList {

    repeated AlarmExpression and_list = 1 [(gogoproto.customname) = "AndList"]; 
}











message LoadbalancerMemberType {

    string status = 1 [(gogoproto.customname) = "Status"];
    string status_description = 2 [(gogoproto.customname) = "StatusDescription"];
    int64 weight = 3 [(gogoproto.customname) = "Weight"];
    bool admin_state = 4 [(gogoproto.customname) = "AdminState"];
    string address = 5 [(gogoproto.customname) = "Address"];
    int64 protocol_port = 6 [(gogoproto.customname) = "ProtocolPort"]; 
}



message DhcpOptionType {

    string dhcp_option_value = 1 [(gogoproto.customname) = "DHCPOptionValue"];
    string dhcp_option_value_bytes = 2 [(gogoproto.customname) = "DHCPOptionValueBytes"];
    string dhcp_option_name = 3 [(gogoproto.customname) = "DHCPOptionName"]; 
}



message DhcpOptionsListType {

    repeated DhcpOptionType dhcp_option = 1 [(gogoproto.customname) = "DHCPOption"]; 
}



message UserCredentials {

    string username = 1 [(gogoproto.customname) = "Username"];
    string password = 2 [(gogoproto.customname) = "Password"]; 
}



message JunosServicePorts {

    repeated string service_port = 1 [(gogoproto.customname) = "ServicePort"]; 
}



message VrfAssignRuleType {

    string routing_instance = 1 [(gogoproto.customname) = "RoutingInstance"];
    MatchConditionType match_condition = 2 [(gogoproto.customname) = "MatchCondition"];
    int64 vlan_tag = 3 [(gogoproto.customname) = "VlanTag"];
    bool ignore_acl = 4 [(gogoproto.customname) = "IgnoreACL"]; 
}











message LocalLinkConnection {

    string switch_id = 1 [(gogoproto.customname) = "SwitchID"];
    string port_id = 2 [(gogoproto.customname) = "PortID"];
    string switch_info = 3 [(gogoproto.customname) = "SwitchInfo"]; 
}





message OpenStackFlavorProperty {

    string id = 1 [(gogoproto.customname) = "ID"];
    OpenStackLink links = 2 [(gogoproto.customname) = "Links"]; 
}



message RouteTargetList {

    repeated string route_target = 1 [(gogoproto.customname) = "RouteTarget"]; 
}









message PolicyEntriesType {

    repeated PolicyRuleType policy_rule = 1 [(gogoproto.customname) = "PolicyRule"]; 
}





message ServiceHealthCheckType {

    int64 delayUsecs = 1 [(gogoproto.customname) = "DelayUsecs"];
    int64 timeoutUsecs = 2 [(gogoproto.customname) = "TimeoutUsecs"];
    bool enabled = 3 [(gogoproto.customname) = "Enabled"];
    int64 delay = 4 [(gogoproto.customname) = "Delay"];
    string expected_codes = 5 [(gogoproto.customname) = "ExpectedCodes"];
    int64 max_retries = 6 [(gogoproto.customname) = "MaxRetries"];
    string health_check_type = 7 [(gogoproto.customname) = "HealthCheckType"];
    string http_method = 8 [(gogoproto.customname) = "HTTPMethod"];
    int64 timeout = 9 [(gogoproto.customname) = "Timeout"];
    string url_path = 10 [(gogoproto.customname) = "URLPath"];
    string monitor_type = 11 [(gogoproto.customname) = "MonitorType"]; 
}



message FirewallSequence {

    string sequence = 1 [(gogoproto.customname) = "Sequence"]; 
}



message PermType {

    string owner = 1 [(gogoproto.customname) = "Owner"];
    int64 owner_access = 2 [(gogoproto.customname) = "OwnerAccess"];
    int64 other_access = 3 [(gogoproto.customname) = "OtherAccess"];
    string group = 4 [(gogoproto.customname) = "Group"];
    int64 group_access = 5 [(gogoproto.customname) = "GroupAccess"]; 
}



message IdPermsType {

    bool enable = 1 [(gogoproto.customname) = "Enable"];
    string description = 2 [(gogoproto.customname) = "Description"];
    string created = 3 [(gogoproto.customname) = "Created"];
    string creator = 4 [(gogoproto.customname) = "Creator"];
    bool user_visible = 5 [(gogoproto.customname) = "UserVisible"];
    string last_modified = 6 [(gogoproto.customname) = "LastModified"];
    PermType permissions = 7 [(gogoproto.customname) = "Permissions"]; 
}



message AclEntriesType {

    bool dynamic = 1 [(gogoproto.customname) = "Dynamic"];
    repeated AclRuleType acl_rule = 2 [(gogoproto.customname) = "ACLRule"]; 
}





message TelemetryResourceInfo {

    string path = 1 [(gogoproto.customname) = "Path"];
    string rate = 2 [(gogoproto.customname) = "Rate"];
    string name = 3 [(gogoproto.customname) = "Name"]; 
}





message OpenStackLink {

    string href = 1 [(gogoproto.customname) = "Href"];
    string rel = 2 [(gogoproto.customname) = "Rel"];
    string type = 3 [(gogoproto.customname) = "Type"]; 
}



message ActionListType {

    string gateway_name = 1 [(gogoproto.customname) = "GatewayName"];
    bool log = 2 [(gogoproto.customname) = "Log"];
    bool alert = 3 [(gogoproto.customname) = "Alert"];
    string qos_action = 4 [(gogoproto.customname) = "QosAction"];
    string assign_routing_instance = 5 [(gogoproto.customname) = "AssignRoutingInstance"];
    MirrorActionType mirror_to = 6 [(gogoproto.customname) = "MirrorTo"];
    string simple_action = 7 [(gogoproto.customname) = "SimpleAction"];
    repeated string apply_service = 8 [(gogoproto.customname) = "ApplyService"]; 
}



message RbacRuleType {

    string rule_object = 1 [(gogoproto.customname) = "RuleObject"];
    repeated RbacPermType rule_perms = 2 [(gogoproto.customname) = "RulePerms"];
    string rule_field = 3 [(gogoproto.customname) = "RuleField"]; 
}







message RouteType {

    string prefix = 1 [(gogoproto.customname) = "Prefix"];
    string next_hop = 2 [(gogoproto.customname) = "NextHop"];
    CommunityAttributes community_attributes = 3 [(gogoproto.customname) = "CommunityAttributes"];
    string next_hop_type = 4 [(gogoproto.customname) = "NextHopType"]; 
}



message ServiceInstanceInterfaceType {

    string virtual_network = 1 [(gogoproto.customname) = "VirtualNetwork"];
    string ip_address = 2 [(gogoproto.customname) = "IPAddress"];
    AllowedAddressPairs allowed_address_pairs = 3 [(gogoproto.customname) = "AllowedAddressPairs"];
    RouteTableType static_routes = 4 [(gogoproto.customname) = "StaticRoutes"]; 
}





message CommunityAttributes {

    repeated string community_attribute = 1 [(gogoproto.customname) = "CommunityAttribute"]; 
}





message ProviderDetails {

    int64 segmentation_id = 1 [(gogoproto.customname) = "SegmentationID"];
    string physical_network = 2 [(gogoproto.customname) = "PhysicalNetwork"]; 
}





message UserDefinedLogStat {

    string pattern = 1 [(gogoproto.customname) = "Pattern"];
    string name = 2 [(gogoproto.customname) = "Name"]; 
}



message LinklocalServiceEntryType {

    repeated string ip_fabric_service_ip = 1 [(gogoproto.customname) = "IPFabricServiceIP"];
    string linklocal_service_name = 2 [(gogoproto.customname) = "LinklocalServiceName"];
    string linklocal_service_ip = 3 [(gogoproto.customname) = "LinklocalServiceIP"];
    int64 ip_fabric_service_port = 4 [(gogoproto.customname) = "IPFabricServicePort"];
    string ip_fabric_DNS_service_name = 5 [(gogoproto.customname) = "IPFabricDNSServiceName"];
    int64 linklocal_service_port = 6 [(gogoproto.customname) = "LinklocalServicePort"]; 
}



message ServiceInstanceType {

    string right_virtual_network = 1 [(gogoproto.customname) = "RightVirtualNetwork"];
    string right_ip_address = 2 [(gogoproto.customname) = "RightIPAddress"];
    string availability_zone = 3 [(gogoproto.customname) = "AvailabilityZone"];
    string management_virtual_network = 4 [(gogoproto.customname) = "ManagementVirtualNetwork"];
    ServiceScaleOutType scale_out = 5 [(gogoproto.customname) = "ScaleOut"];
    string ha_mode = 6 [(gogoproto.customname) = "HaMode"];
    string virtual_router_id = 7 [(gogoproto.customname) = "VirtualRouterID"];
    repeated ServiceInstanceInterfaceType interface_list = 8 [(gogoproto.customname) = "InterfaceList"];
    string left_ip_address = 9 [(gogoproto.customname) = "LeftIPAddress"];
    string left_virtual_network = 10 [(gogoproto.customname) = "LeftVirtualNetwork"];
    bool auto_policy = 11 [(gogoproto.customname) = "AutoPolicy"]; 
}



message FirewallServiceType {

    string protocol = 1 [(gogoproto.customname) = "Protocol"];
    PortType dst_ports = 2 [(gogoproto.customname) = "DSTPorts"];
    PortType src_ports = 3 [(gogoproto.customname) = "SRCPorts"];
    int64 protocol_id = 4 [(gogoproto.customname) = "ProtocolID"]; 
}



message FirewallRuleMatchTagsTypeIdList {

    repeated int64 tag_type = 1 [(gogoproto.customname) = "TagType"]; 
}





message QosIdForwardingClassPairs {

    repeated QosIdForwardingClassPair qos_id_forwarding_class_pair = 1 [(gogoproto.customname) = "QosIDForwardingClassPair"]; 
}



message OpenStackAddress {

    string addr = 1 [(gogoproto.customname) = "Addr"]; 
}



message MemberType {

    string role = 1 [(gogoproto.customname) = "Role"]; 
}



message IpamType {

    string ipam_method = 1 [(gogoproto.customname) = "IpamMethod"];
    string ipam_dns_method = 2 [(gogoproto.customname) = "IpamDNSMethod"];
    IpamDnsAddressType ipam_dns_server = 3 [(gogoproto.customname) = "IpamDNSServer"];
    DhcpOptionsListType dhcp_option_list = 4 [(gogoproto.customname) = "DHCPOptionList"];
    RouteTableType host_routes = 5 [(gogoproto.customname) = "HostRoutes"];
    SubnetType cidr_block = 6 [(gogoproto.customname) = "CidrBlock"]; 
}





message VirtualNetworkPolicyType {

    TimerType timer = 1 [(gogoproto.customname) = "Timer"];
    SequenceType sequence = 2 [(gogoproto.customname) = "Sequence"]; 
}



message AlarmExpression {

    string operations = 1 [(gogoproto.customname) = "Operations"];
    string operand1 = 2 [(gogoproto.customname) = "Operand1"];
    repeated string variables = 3 [(gogoproto.customname) = "Variables"];
    AlarmOperand2 operand2 = 4 [(gogoproto.customname) = "Operand2"]; 
}



message RbacRuleEntriesType {

    repeated RbacRuleType rbac_rule = 1 [(gogoproto.customname) = "RbacRule"]; 
}



message BGPaaServiceParametersType {

    int64 port_start = 1 [(gogoproto.customname) = "PortStart"];
    int64 port_end = 2 [(gogoproto.customname) = "PortEnd"]; 
}



message ServiceScaleOutType {

    bool auto_scale = 1 [(gogoproto.customname) = "AutoScale"];
    int64 max_instances = 2 [(gogoproto.customname) = "MaxInstances"]; 
}





message VirtualIpType {

    string status = 1 [(gogoproto.customname) = "Status"];
    string status_description = 2 [(gogoproto.customname) = "StatusDescription"];
    string protocol = 3 [(gogoproto.customname) = "Protocol"];
    string subnet_id = 4 [(gogoproto.customname) = "SubnetID"];
    string persistence_cookie_name = 5 [(gogoproto.customname) = "PersistenceCookieName"];
    int64 connection_limit = 6 [(gogoproto.customname) = "ConnectionLimit"];
    string persistence_type = 7 [(gogoproto.customname) = "PersistenceType"];
    bool admin_state = 8 [(gogoproto.customname) = "AdminState"];
    string address = 9 [(gogoproto.customname) = "Address"];
    int64 protocol_port = 10 [(gogoproto.customname) = "ProtocolPort"]; 
}

