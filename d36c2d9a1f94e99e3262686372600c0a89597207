{
  "comments": [
    {
      "key": {
        "uuid": "6e800ee1_c929264e",
        "filename": "pkg/apisrv/baseapisrv/server.go",
        "patchSetId": 27
      },
      "lineNbr": 30,
      "author": {
        "id": 565
      },
      "writtenOn": "2020-01-14T11:44:51Z",
      "side": 1,
      "message": "Is the error ever used?",
      "range": {
        "startLine": 30,
        "startChar": 29,
        "endLine": 30,
        "endChar": 34
      },
      "revId": "d36c2d9a1f94e99e3262686372600c0a89597207",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64938b45_86beb69e",
        "filename": "pkg/apisrv/baseapisrv/server.go",
        "patchSetId": 27
      },
      "lineNbr": 30,
      "author": {
        "id": 618
      },
      "writtenOn": "2020-01-14T12:12:39Z",
      "side": 1,
      "message": "It is used only in staticProxyPlugin - Making it not return an error would make that plugin a bit more complex (storing a list of routes and registering all of them at the end). Do you think doing that is worth it?",
      "parentUuid": "6e800ee1_c929264e",
      "range": {
        "startLine": 30,
        "startChar": 29,
        "endLine": 30,
        "endChar": 34
      },
      "revId": "d36c2d9a1f94e99e3262686372600c0a89597207",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f2d5ae0_2c5f94c2",
        "filename": "pkg/apisrv/baseapisrv/server.go",
        "patchSetId": 27
      },
      "lineNbr": 30,
      "author": {
        "id": 565
      },
      "writtenOn": "2020-01-14T12:29:29Z",
      "side": 1,
      "message": "I think that\u0027s how it should be done - something like a constructor that loads and fails if something is wrong. There is no need for having this error in every plugin, let\u0027s keep it simple.",
      "parentUuid": "64938b45_86beb69e",
      "range": {
        "startLine": 30,
        "startChar": 29,
        "endLine": 30,
        "endChar": 34
      },
      "revId": "d36c2d9a1f94e99e3262686372600c0a89597207",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0845bf4f_31c31d1e",
        "filename": "pkg/apisrv/baseapisrv/server.go",
        "patchSetId": 27
      },
      "lineNbr": 30,
      "author": {
        "id": 618
      },
      "writtenOn": "2020-01-14T14:41:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7f2d5ae0_2c5f94c2",
      "range": {
        "startLine": 30,
        "startChar": 29,
        "endLine": 30,
        "endChar": 34
      },
      "revId": "d36c2d9a1f94e99e3262686372600c0a89597207",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8f7fd9fd_601cfd2a",
        "filename": "pkg/apisrv/baseapisrv/server.go",
        "patchSetId": 27
      },
      "lineNbr": 31,
      "author": {
        "id": 565
      },
      "writtenOn": "2020-01-14T11:44:51Z",
      "side": 1,
      "message": "Ditto 30",
      "range": {
        "startLine": 31,
        "startChar": 29,
        "endLine": 31,
        "endChar": 34
      },
      "revId": "d36c2d9a1f94e99e3262686372600c0a89597207",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "839c81b4_8105b93a",
        "filename": "pkg/apisrv/baseapisrv/server.go",
        "patchSetId": 27
      },
      "lineNbr": 31,
      "author": {
        "id": 618
      },
      "writtenOn": "2020-01-14T12:12:39Z",
      "side": 1,
      "message": "Indeed, it is not used. I kept it to be the same as RegisterHTTPAPI.",
      "parentUuid": "8f7fd9fd_601cfd2a",
      "range": {
        "startLine": 31,
        "startChar": 29,
        "endLine": 31,
        "endChar": 34
      },
      "revId": "d36c2d9a1f94e99e3262686372600c0a89597207",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dcd1b12d_11ac486a",
        "filename": "pkg/apisrv/baseapisrv/server.go",
        "patchSetId": 27
      },
      "lineNbr": 31,
      "author": {
        "id": 618
      },
      "writtenOn": "2020-01-14T14:41:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "839c81b4_8105b93a",
      "range": {
        "startLine": 31,
        "startChar": 29,
        "endLine": 31,
        "endChar": 34
      },
      "revId": "d36c2d9a1f94e99e3262686372600c0a89597207",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87fa5524_bf31c523",
        "filename": "pkg/apisrv/server.go",
        "patchSetId": 27
      },
      "lineNbr": 110,
      "author": {
        "id": 618
      },
      "writtenOn": "2020-01-14T12:12:39Z",
      "side": 1,
      "message": "s.Cache is nil at this point. Make the users pass it explicitly instead of setting it after creation to fix this.",
      "revId": "d36c2d9a1f94e99e3262686372600c0a89597207",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ea61644_7d6bd24d",
        "filename": "pkg/apisrv/server.go",
        "patchSetId": 27
      },
      "lineNbr": 110,
      "author": {
        "id": 618
      },
      "writtenOn": "2020-01-14T14:41:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "87fa5524_bf31c523",
      "revId": "d36c2d9a1f94e99e3262686372600c0a89597207",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d84b9806_533f2baf",
        "filename": "pkg/apisrv/server.go",
        "patchSetId": 27
      },
      "lineNbr": 138,
      "author": {
        "id": 565
      },
      "writtenOn": "2020-01-14T11:44:51Z",
      "side": 1,
      "message": "I\u0027m not sure if those should be defined as plugins. Both middlewares are going to be placed in ASF and IMO they can be embedded in the server.",
      "range": {
        "startLine": 128,
        "startChar": 0,
        "endLine": 138,
        "endChar": 20
      },
      "revId": "d36c2d9a1f94e99e3262686372600c0a89597207",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b236892_7a6400b0",
        "filename": "pkg/apisrv/server.go",
        "patchSetId": 27
      },
      "lineNbr": 138,
      "author": {
        "id": 618
      },
      "writtenOn": "2020-01-14T12:12:39Z",
      "side": 1,
      "message": "This make sense; although they should be decoupled from generated code to do this.\n\nWhat do you think about removing the ability to add GRPC server options in plugins (to simplify GRPCRouter) if we do this?",
      "parentUuid": "d84b9806_533f2baf",
      "range": {
        "startLine": 128,
        "startChar": 0,
        "endLine": 138,
        "endChar": 20
      },
      "revId": "d36c2d9a1f94e99e3262686372600c0a89597207",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "032ccff6_ee662f76",
        "filename": "pkg/apisrv/server.go",
        "patchSetId": 27
      },
      "lineNbr": 138,
      "author": {
        "id": 565
      },
      "writtenOn": "2020-01-14T12:29:29Z",
      "side": 1,
      "message": "1. Which generated code? ObjPerms is non generated, see my review for reference: https://review.opencontrail.org/c/Juniper/contrail/+/56067\n2. Yes, if that\u0027s possible.\n\nMy only doubt about the idea I proposed is that it forces ASF users to use keystone authentication. The plugin approach that is implemented here allowed to change it, but I think we should allow users to inject auth providers in a different way (maybe some kind of apisrv dependency that implements some kind of AuthProvider interface). After all I think it won\u0027t be a problem for now - we don\u0027t have different auth providers than keystone.",
      "parentUuid": "6b236892_7a6400b0",
      "range": {
        "startLine": 128,
        "startChar": 0,
        "endLine": 138,
        "endChar": 20
      },
      "revId": "d36c2d9a1f94e99e3262686372600c0a89597207",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5cc81a98_faa84b0b",
        "filename": "pkg/apisrv/server.go",
        "patchSetId": 27
      },
      "lineNbr": 138,
      "author": {
        "id": 618
      },
      "writtenOn": "2020-01-14T14:41:36Z",
      "side": 1,
      "message": "I see, keystone auth middleware won\u0027t depend on non-asf packages after your changes.\n\nThen I\u0027ll rebase on your change to make the interface cleaner.\n\nBy the way, after that, the only remaining user of (HTTPRouter).Use(middleware) would be analytics.BodyDumpPlugin.",
      "parentUuid": "032ccff6_ee662f76",
      "range": {
        "startLine": 128,
        "startChar": 0,
        "endLine": 138,
        "endChar": 20
      },
      "revId": "d36c2d9a1f94e99e3262686372600c0a89597207",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4cb01f1_96d9e16d",
        "filename": "pkg/apisrv/server.go",
        "patchSetId": 27
      },
      "lineNbr": 138,
      "author": {
        "id": 618
      },
      "writtenOn": "2020-01-16T12:08:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5cc81a98_faa84b0b",
      "range": {
        "startLine": 128,
        "startChar": 0,
        "endLine": 138,
        "endChar": 20
      },
      "revId": "d36c2d9a1f94e99e3262686372600c0a89597207",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    }
  ]
}