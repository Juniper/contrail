{
  "comments": [
    {
      "key": {
        "uuid": "73599f5b_05b3f585",
        "filename": "pkg/ansible/container_player.go",
        "patchSetId": 13
      },
      "lineNbr": 85,
      "author": {
        "id": 710
      },
      "writtenOn": "2020-01-09T16:55:00Z",
      "side": 1,
      "message": "This if statement can be inlined",
      "range": {
        "startLine": 82,
        "startChar": 1,
        "endLine": 85,
        "endChar": 2
      },
      "revId": "e8d00a4a7f226a374efc94855e0ca72992bbf583",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff2fc525_2e69c0bc",
        "filename": "pkg/ansible/container_player.go",
        "patchSetId": 13
      },
      "lineNbr": 108,
      "author": {
        "id": 710
      },
      "writtenOn": "2020-01-09T16:55:00Z",
      "side": 1,
      "message": "This if statement can be inlined",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 108,
        "endChar": 2
      },
      "revId": "e8d00a4a7f226a374efc94855e0ca72992bbf583",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13c465c0_88682987",
        "filename": "pkg/ansible/container_player.go",
        "patchSetId": 13
      },
      "lineNbr": 113,
      "author": {
        "id": 710
      },
      "writtenOn": "2020-01-09T16:55:00Z",
      "side": 1,
      "message": "ditto L#105",
      "range": {
        "startLine": 109,
        "startChar": 0,
        "endLine": 113,
        "endChar": 2
      },
      "revId": "e8d00a4a7f226a374efc94855e0ca72992bbf583",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7d2c4b3_06be7a4a",
        "filename": "pkg/ansible/container_player.go",
        "patchSetId": 13
      },
      "lineNbr": 151,
      "author": {
        "id": 633
      },
      "writtenOn": "2020-01-09T14:30:52Z",
      "side": 1,
      "message": "An error could appear below in ReadAll function for some reason. In that case IMHO we shouldn\u0027t ignore reader.Close() error but wrap it.",
      "range": {
        "startLine": 148,
        "startChar": 2,
        "endLine": 151,
        "endChar": 3
      },
      "revId": "e8d00a4a7f226a374efc94855e0ca72992bbf583",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6da167df_aa9ebc1d",
        "filename": "pkg/ansible/container_player.go",
        "patchSetId": 13
      },
      "lineNbr": 159,
      "author": {
        "id": 633
      },
      "writtenOn": "2020-01-09T14:30:52Z",
      "side": 1,
      "message": "return err",
      "range": {
        "startLine": 155,
        "startChar": 1,
        "endLine": 159,
        "endChar": 11
      },
      "revId": "e8d00a4a7f226a374efc94855e0ca72992bbf583",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e08db5f1_b59bdd2b",
        "filename": "pkg/ansible/container_player.go",
        "patchSetId": 13
      },
      "lineNbr": 162,
      "author": {
        "id": 710
      },
      "writtenOn": "2020-01-09T16:55:00Z",
      "side": 1,
      "message": "What\u0027s the use for returned bool? Wouldn\u0027t returning nil container be enough?",
      "revId": "e8d00a4a7f226a374efc94855e0ca72992bbf583",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78fcf687_409c69fa",
        "filename": "pkg/ansible/container_player.go",
        "patchSetId": 13
      },
      "lineNbr": 162,
      "author": {
        "id": 850
      },
      "writtenOn": "2020-01-09T22:49:09Z",
      "side": 1,
      "message": "Yeah, I also thought of that way. But I want the result of found or not distinct, easy to be figured out, like ele, ok :\u003d map[key]. That\u0027s why I choose to return a found boolean value in addition.",
      "parentUuid": "e08db5f1_b59bdd2b",
      "revId": "e8d00a4a7f226a374efc94855e0ca72992bbf583",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f11fb8df_0a79fbb0",
        "filename": "pkg/ansible/container_player.go",
        "patchSetId": 13
      },
      "lineNbr": 174,
      "author": {
        "id": 710
      },
      "writtenOn": "2020-01-09T16:55:00Z",
      "side": 1,
      "message": "What in the case when there are multiple instances of container based on the same image?",
      "revId": "e8d00a4a7f226a374efc94855e0ca72992bbf583",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "474f1f59_3ef97b38",
        "filename": "pkg/ansible/container_player.go",
        "patchSetId": 13
      },
      "lineNbr": 174,
      "author": {
        "id": 850
      },
      "writtenOn": "2020-01-09T22:49:09Z",
      "side": 1,
      "message": "You can use any one of them, their state doesn\u0027t change. You can think of them as a function that awaits arguments.",
      "parentUuid": "f11fb8df_0a79fbb0",
      "revId": "e8d00a4a7f226a374efc94855e0ca72992bbf583",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1a217de_f5192296",
        "filename": "pkg/ansible/container_player.go",
        "patchSetId": 13
      },
      "lineNbr": 193,
      "author": {
        "id": 710
      },
      "writtenOn": "2020-01-09T16:55:00Z",
      "side": 1,
      "message": "ditto L#105",
      "range": {
        "startLine": 190,
        "startChar": 2,
        "endLine": 193,
        "endChar": 3
      },
      "revId": "e8d00a4a7f226a374efc94855e0ca72992bbf583",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc9e604e_f6432653",
        "filename": "pkg/ansible/container_player.go",
        "patchSetId": 13
      },
      "lineNbr": 229,
      "author": {
        "id": 710
      },
      "writtenOn": "2020-01-09T16:55:00Z",
      "side": 1,
      "message": "ditto L#105",
      "range": {
        "startLine": 226,
        "startChar": 1,
        "endLine": 229,
        "endChar": 2
      },
      "revId": "e8d00a4a7f226a374efc94855e0ca72992bbf583",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb6a77d7_8bc1c3af",
        "filename": "pkg/ansible/container_player.go",
        "patchSetId": 13
      },
      "lineNbr": 281,
      "author": {
        "id": 633
      },
      "writtenOn": "2020-01-09T14:30:52Z",
      "side": 1,
      "message": "Instead of passing this argument do not call cleanContainer if it should stay alive.",
      "range": {
        "startLine": 281,
        "startChar": 84,
        "endLine": 281,
        "endChar": 107
      },
      "revId": "e8d00a4a7f226a374efc94855e0ca72992bbf583",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09058d77_da143d05",
        "filename": "pkg/ansible/container_player.go",
        "patchSetId": 13
      },
      "lineNbr": 281,
      "author": {
        "id": 710
      },
      "writtenOn": "2020-01-09T16:55:00Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "eb6a77d7_8bc1c3af",
      "range": {
        "startLine": 281,
        "startChar": 84,
        "endLine": 281,
        "endChar": 107
      },
      "revId": "e8d00a4a7f226a374efc94855e0ca72992bbf583",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "89b92d2d_80249ccc",
        "filename": "pkg/ansible/container_player.go",
        "patchSetId": 13
      },
      "lineNbr": 281,
      "author": {
        "id": 710
      },
      "writtenOn": "2020-01-09T16:55:00Z",
      "side": 1,
      "message": "Nit: Personally I feel the cleanContainer function would reset existing container to its clean state.",
      "range": {
        "startLine": 281,
        "startChar": 26,
        "endLine": 281,
        "endChar": 40
      },
      "revId": "e8d00a4a7f226a374efc94855e0ca72992bbf583",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "327faca9_f67119b0",
        "filename": "pkg/ansible/container_player.go",
        "patchSetId": 13
      },
      "lineNbr": 281,
      "author": {
        "id": 850
      },
      "writtenOn": "2020-01-09T22:49:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "09058d77_da143d05",
      "range": {
        "startLine": 281,
        "startChar": 84,
        "endLine": 281,
        "endChar": 107
      },
      "revId": "e8d00a4a7f226a374efc94855e0ca72992bbf583",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cbd793c4_c8174d08",
        "filename": "pkg/ansible/container_player.go",
        "patchSetId": 13
      },
      "lineNbr": 281,
      "author": {
        "id": 850
      },
      "writtenOn": "2020-01-09T22:49:09Z",
      "side": 1,
      "message": "Good notice, I changed it to remove container instead.",
      "parentUuid": "89b92d2d_80249ccc",
      "range": {
        "startLine": 281,
        "startChar": 26,
        "endLine": 281,
        "endChar": 40
      },
      "revId": "e8d00a4a7f226a374efc94855e0ca72992bbf583",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d1f45cb2_c6a84716",
        "filename": "pkg/ansible/container_player.go",
        "patchSetId": 13
      },
      "lineNbr": 296,
      "author": {
        "id": 710
      },
      "writtenOn": "2020-01-09T16:55:00Z",
      "side": 1,
      "message": "Isn\u0027t stopping container with 0 seconds timeout the same thing as forced container removal?\nIf so, this could be written as:\n return p.client.ContainerRemove(ctx, containerName, types.ContainerRemoveOptions{Force: true})",
      "range": {
        "startLine": 290,
        "startChar": 0,
        "endLine": 296,
        "endChar": 84
      },
      "revId": "e8d00a4a7f226a374efc94855e0ca72992bbf583",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24f511b4_56555c4e",
        "filename": "pkg/deploy/cluster/ansible.go",
        "patchSetId": 13
      },
      "lineNbr": 171,
      "author": {
        "id": 633
      },
      "writtenOn": "2020-01-09T14:30:52Z",
      "side": 1,
      "message": "This is redundant.",
      "range": {
        "startLine": 171,
        "startChar": 71,
        "endLine": 171,
        "endChar": 96
      },
      "revId": "e8d00a4a7f226a374efc94855e0ca72992bbf583",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ac131b8_23b95ef9",
        "filename": "pkg/deploy/cluster/ansible.go",
        "patchSetId": 13
      },
      "lineNbr": 387,
      "author": {
        "id": 633
      },
      "writtenOn": "2020-01-09T14:30:52Z",
      "side": 1,
      "message": "Why exactly this image?",
      "range": {
        "startLine": 387,
        "startChar": 5,
        "endLine": 387,
        "endChar": 36
      },
      "revId": "e8d00a4a7f226a374efc94855e0ca72992bbf583",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d85d82e4_1dffff85",
        "filename": "pkg/deploy/cluster/ansible.go",
        "patchSetId": 13
      },
      "lineNbr": 387,
      "author": {
        "id": 850
      },
      "writtenOn": "2020-01-09T22:49:09Z",
      "side": 1,
      "message": "This image is for deploying contrail products, not responsible for DataEncryptionPath, XFlow, and MC, since their ansible deployer images are not ready yet.",
      "parentUuid": "9ac131b8_23b95ef9",
      "range": {
        "startLine": 387,
        "startChar": 5,
        "endLine": 387,
        "endChar": 36
      },
      "revId": "e8d00a4a7f226a374efc94855e0ca72992bbf583",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5cb6679c_9610f1aa",
        "filename": "pkg/deploy/cluster/ansible.go",
        "patchSetId": 13
      },
      "lineNbr": 444,
      "author": {
        "id": 633
      },
      "writtenOn": "2020-01-09T14:30:52Z",
      "side": 1,
      "message": "Why do we accept only first two arguments?",
      "range": {
        "startLine": 444,
        "startChar": 33,
        "endLine": 444,
        "endChar": 48
      },
      "revId": "e8d00a4a7f226a374efc94855e0ca72992bbf583",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d4d97ed_ee606d4b",
        "filename": "pkg/deploy/cluster/cluster.go",
        "patchSetId": 13
      },
      "lineNbr": 187,
      "author": {
        "id": 710
      },
      "writtenOn": "2020-01-09T16:55:00Z",
      "side": 1,
      "message": "This is redundant since MC provisioner doesn\u0027t call Play().",
      "revId": "e8d00a4a7f226a374efc94855e0ca72992bbf583",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    }
  ]
}