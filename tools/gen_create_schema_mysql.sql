-- Code generated by contrailschema tool from template sql_mysql.tmpl; DO NOT EDIT.

SET GLOBAL group_concat_max_len=100000;

create table metadata (
    `uuid` varchar(255),
    `type` varchar(255),
    `fq_name` varchar(255),
    primary key (`uuid`),
    UNIQUE(`type`, `fq_name`),
    index fq_name_index (`fq_name`)
 ) CHARACTER SET utf8mb4;

create table int_pool (
    `key` varchar(255),
    `start` int,
    `end` int
);

create table ipaddress_pool (
    `key` varchar(255),
    `start` binary(16),
    `end` binary(16)
);

create table kv_store (
	`key` varchar(255),
	`value` varchar(255),
	primary key (`key`)
);




create table access_control_list (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
    `access_control_list_hash` bigint,
    `dynamic` bool,
    `acl_rule` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table address_group (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `draft_mode_state` varchar(255),
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
    `subnet` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table alarm (
    `uve_key` json,
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
    `alarm_severity` bigint,
    `or_list` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table alias_ip_pool (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table alias_ip (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
    `alias_ip_address_family` varchar(255),
    `alias_ip_address` varchar(255),
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table analytics_node (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
    `analytics_node_ip_address` varchar(255),
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table api_access_list (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `rbac_rule` json,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table application_policy_set (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `draft_mode_state` varchar(255),
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
    `all_applications` bool,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table bgp_as_a_service (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `bgpaas_suppress_route_advertisement` bool,
    `bgpaas_shared` bool,
    `origin_override` bool,
    `origin` varchar(255),
    `private_as_action` varchar(255),
    `passive` bool,
    `loop_count` bigint,
    `local_autonomous_system` bigint,
    `hold_time` bigint,
    `family_attributes` json,
    `bgp_router` varchar(255),
    `key_type` varchar(255),
    `key_items` json,
    `as_override` bool,
    `admin_down` bool,
    `family` json,
    `bgpaas_ipv4_mapped_ipv6_nexthop` bool,
    `bgpaas_ip_address` varchar(255),
    `autonomous_system` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table bgp_router (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `vendor` varchar(255),
    `source_port` bigint,
    `router_type` varchar(255),
    `port` bigint,
    `local_autonomous_system` bigint,
    `ipv6_gateway_address` varchar(255),
    `identifier` varchar(255),
    `hold_time` bigint,
    `gateway_address` varchar(255),
    `cluster_id` bigint,
    `autonomous_system` bigint,
    `key_type` varchar(255),
    `key_items` json,
    `admin_down` bool,
    `family` json,
    `address` varchar(255),
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table bgpvpn (
    `uuid` varchar(255),
    `route_target` json,
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `import_route_target_list_route_target` json,
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `export_route_target_list_route_target` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `bgpvpn_type` varchar(255),
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table bridge_domain (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `mac_move_time_window` bigint,
    `mac_move_limit_action` varchar(255),
    `mac_move_limit` bigint,
    `mac_limit_action` varchar(255),
    `mac_limit` bigint,
    `mac_learning_enabled` bool,
    `mac_aging_time` bigint,
    `isid` bigint,
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table card (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table config_node (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `config_node_ip_address` varchar(255),
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table config_root (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table customer_attachment (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `status` varchar(255),
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table database_node (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `database_node_ip_address` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table device_image (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `device_image_vendor_name` varchar(255),
    `platform_name` json,
    `device_image_size` bigint,
    `device_image_sha1` varchar(255),
    `device_image_os_version` varchar(255),
    `device_image_md5` varchar(255),
    `device_image_file_uri` varchar(255),
    `device_image_device_family` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table discovery_service_assignment (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table domain (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `virtual_network_limit` bigint,
    `security_group_limit` bigint,
    `project_limit` bigint,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table dsa_rule (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `subscriber` json,
    `ep_version` varchar(255),
    `ep_type` varchar(255),
    `ip_prefix_len` bigint,
    `ip_prefix` varchar(255),
    `ep_id` varchar(255),
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table e2_service_provider (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `e2_service_provider_promiscuous` bool,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table fabric_namespace (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `serial_nums` json,
    `mac_address` json,
    `subnet` json,
    `asn` bigint,
    `asn_ranges` json,
    `fabric_namespace_type` varchar(255),
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table fabric (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `device_credential` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table firewall_policy (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `draft_mode_state` varchar(255),
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table firewall_rule (
    `uuid` varchar(255),
    `start_port` bigint,
    `end_port` bigint,
    `protocol_id` bigint,
    `protocol` varchar(255),
    `dst_ports_start_port` bigint,
    `dst_ports_end_port` bigint,
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `tag_list` json,
    `tag_type` json,
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `virtual_network` varchar(255),
    `tags` json,
    `tag_ids` json,
    `ip_prefix_len` bigint,
    `ip_prefix` varchar(255),
    `any` bool,
    `address_group` varchar(255),
    `endpoint_1_virtual_network` varchar(255),
    `endpoint_1_tags` json,
    `endpoint_1_tag_ids` json,
    `subnet_ip_prefix_len` bigint,
    `subnet_ip_prefix` varchar(255),
    `endpoint_1_any` bool,
    `endpoint_1_address_group` varchar(255),
    `draft_mode_state` varchar(255),
    `display_name` varchar(255),
    `direction` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
    `simple_action` varchar(255),
    `qos_action` varchar(255),
    `udp_port` bigint,
    `vtep_dst_mac_address` varchar(255),
    `vtep_dst_ip_address` varchar(255),
    `vni` bigint,
    `routing_instance` varchar(255),
    `nic_assisted_mirroring_vlan` bigint,
    `nic_assisted_mirroring` bool,
    `nh_mode` varchar(255),
    `juniper_header` bool,
    `encapsulation` varchar(255),
    `analyzer_name` varchar(255),
    `analyzer_mac_address` varchar(255),
    `analyzer_ip_address` varchar(255),
    `log` bool,
    `gateway_name` varchar(255),
    `assign_routing_instance` varchar(255),
    `apply_service` json,
    `alert` bool,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table floating_ip_pool (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `subnet_uuid` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table floating_ip (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `floating_ip_traffic_direction` varchar(255),
    `port_mappings` json,
    `floating_ip_port_mappings_enable` bool,
    `floating_ip_is_virtual_ip` bool,
    `floating_ip_fixed_ip_address` varchar(255),
    `floating_ip_address_family` varchar(255),
    `floating_ip_address` varchar(255),
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table forwarding_class (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `forwarding_class_vlan_priority` bigint,
    `forwarding_class_mpls_exp` bigint,
    `forwarding_class_id` bigint,
    `forwarding_class_dscp` bigint,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table global_analytics_config (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table global_qos_config (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `dns` bigint,
    `control` bigint,
    `analytics` bigint,
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table global_system_config (
    `uuid` varchar(255),
    `statlist` json,
    `vendor_hardware` json,
    `key_value_pair` json,
    `device_family` json,
    `rd_cluster_seed` bigint,
    `plugin_property` json,
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `mac_move_time_window` bigint,
    `mac_move_limit_action` varchar(255),
    `mac_move_limit` bigint,
    `mac_limit_action` varchar(255),
    `mac_limit` bigint,
    `mac_aging_time` bigint,
    `subnet` json,
    `igmp_enable` bool,
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `ibgp_auto_mesh` bool,
    `xmpp_helper_enable` bool,
    `restart_time` bigint,
    `long_lived_restart_time` bigint,
    `end_of_rib_timeout` bigint,
    `graceful_restart_parameters_enable` bool,
    `bgp_helper_enable` bool,
    `fq_name` json,
    `fabric_ztp` bool,
    `enable_security_policy_draft` bool,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `config_version` varchar(255),
    `port_start` bigint,
    `port_end` bigint,
    `bgp_always_compare_med` bool,
    `autonomous_system` bigint,
    `annotations_key_value_pair` json,
    `alarm_enable` bool,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table global_vrouter_config (
    `vxlan_network_identifier_mode` varchar(255),
    `uuid` varchar(255),
    `port_translation_pool` json,
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `linklocal_service_entry` json,
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `forwarding_mode` varchar(255),
    `flow_export_rate` bigint,
    `flow_aging_timeout` json,
    `endpoint` json,
    `encryption_mode` varchar(255),
    `encapsulation` json,
    `enable_security_logging` bool,
    `source_port` bool,
    `source_ip` bool,
    `ip_protocol` bool,
    `hashing_configured` bool,
    `destination_port` bool,
    `destination_ip` bool,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table hardware (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table instance_ip (
    `uuid` varchar(255),
    `subnet_uuid` varchar(255),
    `service_instance_ip` bool,
    `service_health_check_ip` bool,
    `ip_prefix_len` bigint,
    `ip_prefix` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `instance_ip_subscriber_tag` varchar(255),
    `instance_ip_subnet_ip_prefix_len` bigint,
    `instance_ip_subnet_ip_prefix` varchar(255),
    `instance_ip_secondary` bool,
    `instance_ip_mode` varchar(255),
    `instance_ip_local_ip` bool,
    `instance_ip_family` varchar(255),
    `instance_ip_address` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table interface_route_table (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `route` json,
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table job_template (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `job_template_synchronous_job` bool,
    `playbook_info` json,
    `job_template_output_schema` varchar(255),
    `job_template_multi_device_job` bool,
    `job_template_input_schema` varchar(255),
    `job_template_concurrency_level` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table link_aggregation_group (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `link_aggregation_group_lacp_enabled` bool,
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table loadbalancer_healthmonitor (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `url_path` varchar(255),
    `timeout` bigint,
    `monitor_type` varchar(255),
    `max_retries` bigint,
    `http_method` varchar(255),
    `expected_codes` varchar(255),
    `delay` bigint,
    `admin_state` bool,
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table loadbalancer_listener (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `sni_containers` json,
    `protocol_port` bigint,
    `protocol` varchar(255),
    `default_tls_container` varchar(255),
    `connection_limit` bigint,
    `admin_state` bool,
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table loadbalancer_member (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `weight` bigint,
    `subnet_id` varchar(255),
    `status_description` varchar(255),
    `status` varchar(255),
    `protocol_port` bigint,
    `admin_state` bool,
    `address` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table loadbalancer_pool (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `loadbalancer_pool_provider` varchar(255),
    `subnet_id` varchar(255),
    `status_description` varchar(255),
    `status` varchar(255),
    `session_persistence` varchar(255),
    `protocol` varchar(255),
    `persistence_cookie_name` varchar(255),
    `loadbalancer_method` varchar(255),
    `admin_state` bool,
    `key_value_pair` json,
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `annotations_key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table loadbalancer (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `loadbalancer_provider` varchar(255),
    `vip_subnet_id` varchar(255),
    `vip_address` varchar(255),
    `status` varchar(255),
    `provisioning_status` varchar(255),
    `operating_status` varchar(255),
    `admin_state` bool,
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table logical_interface (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `logical_interface_vlan_tag` bigint,
    `logical_interface_type` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table logical_router (
    `vxlan_network_identifier` varchar(255),
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `route_target` json,
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table multicast_group_address (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `multicast_group_address_source_address` varchar(255),
    `multicast_group_address_group_address` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table multicast_group (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table multicast_policy (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `multicast_source_group` json,
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table namespace (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `ip_prefix_len` bigint,
    `ip_prefix` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table network_device_config (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table network_ipam (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `ipam_method` varchar(255),
    `virtual_dns_server_name` varchar(255),
    `ip_address` varchar(255),
    `ipam_dns_method` varchar(255),
    `route` json,
    `dhcp_option` json,
    `ip_prefix_len` bigint,
    `ip_prefix` varchar(255),
    `name` varchar(255),
    `ipam_subnetting` bool,
    `subnets` json,
    `ipam_subnet_method` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table network_policy (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `policy_rule` json,
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table node_profile (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `node_profile_vendor` varchar(255),
    `rb_role` json,
    `physical_role` varchar(255),
    `node_profile_device_family` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table peering_policy (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `peering_service` varchar(255),
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table physical_interface (
    `uuid` varchar(255),
    `physical_interface_type` varchar(255),
    `physical_interface_port_id` varchar(255),
    `mac_address` json,
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `ethernet_segment_identifier` varchar(255),
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table physical_router (
    `uuid` varchar(255),
    `server_port` bigint,
    `server_ip` varchar(255),
    `resource` json,
    `rb_role` json,
    `physical_router_vnc_managed` bool,
    `physical_router_vendor_name` varchar(255),
    `username` varchar(255),
    `password` varchar(255),
    `version` bigint,
    `v3_security_name` varchar(255),
    `v3_security_level` varchar(255),
    `v3_security_engine_id` varchar(255),
    `v3_privacy_protocol` varchar(255),
    `v3_privacy_password` varchar(255),
    `v3_engine_time` bigint,
    `v3_engine_id` varchar(255),
    `v3_engine_boots` bigint,
    `v3_context_engine_id` varchar(255),
    `v3_context` varchar(255),
    `v3_authentication_protocol` varchar(255),
    `v3_authentication_password` varchar(255),
    `v2_community` varchar(255),
    `timeout` bigint,
    `retries` bigint,
    `local_port` bigint,
    `physical_router_snmp` bool,
    `physical_router_serial_number` varchar(255),
    `physical_router_role` varchar(255),
    `physical_router_product_name` varchar(255),
    `physical_router_management_ip` varchar(255),
    `physical_router_loopback_ip` varchar(255),
    `physical_router_lldp` bool,
    `service_port` json,
    `physical_router_device_family` varchar(255),
    `physical_router_dataplane_ip` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table policy_management (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table port_tuple (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table project (
    `vxlan_routing` bool,
    `uuid` varchar(255),
    `virtual_router` bigint,
    `virtual_network` bigint,
    `virtual_machine_interface` bigint,
    `virtual_ip` bigint,
    `virtual_dns_record` bigint,
    `virtual_dns` bigint,
    `subnet` bigint,
    `service_template` bigint,
    `service_instance` bigint,
    `security_logging_object` bigint,
    `security_group_rule` bigint,
    `security_group` bigint,
    `route_table` bigint,
    `network_policy` bigint,
    `network_ipam` bigint,
    `logical_router` bigint,
    `loadbalancer_pool` bigint,
    `loadbalancer_member` bigint,
    `loadbalancer_healthmonitor` bigint,
    `instance_ip` bigint,
    `global_vrouter_config` bigint,
    `floating_ip_pool` bigint,
    `floating_ip` bigint,
    `defaults` bigint,
    `bgp_router` bigint,
    `access_control_list` bigint,
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `enable_security_policy_draft` bool,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
    `alarm_enable` bool,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table provider_attachment (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table qos_config (
    `qos_id_forwarding_class_pair` json,
    `uuid` varchar(255),
    `qos_config_type` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `mpls_exp_entries_qos_id_forwarding_class_pair` json,
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `dscp_entries_qos_id_forwarding_class_pair` json,
    `display_name` varchar(255),
    `default_forwarding_class_id` bigint,
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table qos_queue (
    `uuid` varchar(255),
    `qos_queue_identifier` bigint,
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `min_bandwidth` bigint,
    `max_bandwidth` bigint,
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table role_config (
    `uuid` varchar(255),
    `role_config_config` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table route_aggregate (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
    `aggregate_route_nexthop` varchar(255),
    `route` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table route_table (
    `uuid` varchar(255),
    `route` json,
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table route_target (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table routing_instance (
    `uuid` varchar(255),
    `route` json,
    `source_routing_instance` varchar(255),
    `service_instance` varchar(255),
    `service_chain_id` varchar(255),
    `service_chain_address` varchar(255),
    `routing_instance` varchar(255),
    `prefix` json,
    `routing_instance_is_default` bool,
    `routing_instance_has_pnf` bool,
    `routing_instance_fabric_snat` bool,
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `ipv6_service_chain_information_source_routing_instance` varchar(255),
    `ipv6_service_chain_information_service_instance` varchar(255),
    `ipv6_service_chain_information_service_chain_id` varchar(255),
    `ipv6_service_chain_information_service_chain_address` varchar(255),
    `ipv6_service_chain_information_routing_instance` varchar(255),
    `ipv6_service_chain_information_prefix` json,
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `area` bigint,
    `autonomous_system` bigint,
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table routing_policy (
    `uuid` varchar(255),
    `term` json,
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table security_group (
    `uuid` varchar(255),
    `security_group_id` bigint,
    `policy_rule` json,
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configured_security_group_id` bigint,
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table security_logging_object (
    `uuid` varchar(255),
    `rule` json,
    `security_logging_object_rate` bigint,
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table service_appliance (
    `uuid` varchar(255),
    `username` varchar(255),
    `password` varchar(255),
    `key_value_pair` json,
    `service_appliance_ip_address` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `annotations_key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table service_appliance_set (
    `uuid` varchar(255),
    `key_value_pair` json,
    `service_appliance_ha_mode` varchar(255),
    `service_appliance_driver` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `annotations_key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table service_connection_module (
    `uuid` varchar(255),
    `service_type` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `e2_service` varchar(255),
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table service_endpoint (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table service_group (
    `uuid` varchar(255),
    `firewall_service` json,
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `draft_mode_state` varchar(255),
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table service_health_check (
    `uuid` varchar(255),
    `url_path` varchar(255),
    `timeoutusecs` bigint,
    `timeout` bigint,
    `monitor_type` varchar(255),
    `max_retries` bigint,
    `http_method` varchar(255),
    `health_check_type` varchar(255),
    `expected_codes` varchar(255),
    `enabled` bool,
    `delayusecs` bigint,
    `delay` bigint,
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table service_instance (
    `uuid` varchar(255),
    `virtual_router_id` varchar(255),
    `max_instances` bigint,
    `auto_scale` bool,
    `right_virtual_network` varchar(255),
    `right_ip_address` varchar(255),
    `management_virtual_network` varchar(255),
    `left_virtual_network` varchar(255),
    `left_ip_address` varchar(255),
    `interface_list` json,
    `ha_mode` varchar(255),
    `availability_zone` varchar(255),
    `auto_policy` bool,
    `key_value_pair` json,
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `annotations_key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table service_object (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table service_template (
    `uuid` varchar(255),
    `vrouter_instance_type` varchar(255),
    `version` bigint,
    `service_virtualization_type` varchar(255),
    `service_type` varchar(255),
    `service_scaling` bool,
    `service_mode` varchar(255),
    `ordered_interfaces` bool,
    `interface_type` json,
    `instance_data` varchar(255),
    `image_name` varchar(255),
    `flavor` varchar(255),
    `availability_zone_enable` bool,
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table structured_syslog_application_record (
    `uuid` varchar(255),
    `structured_syslog_app_subcategory` varchar(255),
    `structured_syslog_app_service_tags` varchar(255),
    `structured_syslog_app_risk` varchar(255),
    `structured_syslog_app_groups` varchar(255),
    `structured_syslog_app_category` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table structured_syslog_config (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table structured_syslog_hostname_record (
    `uuid` varchar(255),
    `structured_syslog_tenant` varchar(255),
    `structured_syslog_location` varchar(255),
    `links` json,
    `structured_syslog_hostname_tags` varchar(255),
    `structured_syslog_hostaddr` varchar(255),
    `structured_syslog_device` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table structured_syslog_message (
    `uuid` varchar(255),
    `field_names` json,
    `structured_syslog_message_process_and_summarize_user` bool,
    `structured_syslog_message_process_and_summarize` bool,
    `structured_syslog_message_process_and_store` bool,
    `structured_syslog_message_integer_fields_field_names` json,
    `structured_syslog_message_forward` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table structured_syslog_sla_profile (
    `uuid` varchar(255),
    `structured_syslog_sla_params` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table sub_cluster (
    `uuid` varchar(255),
    `sub_cluster_asn` bigint,
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table subnet (
    `uuid` varchar(255),
    `ip_prefix_len` bigint,
    `ip_prefix` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table tag (
    `uuid` varchar(255),
    `tag_value` varchar(255),
    `tag_type_name` varchar(255),
    `tag_id` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table tag_type (
    `uuid` varchar(255),
    `tag_type_id` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table virtual_dns_record (
    `record_type` varchar(255),
    `record_ttl_seconds` bigint,
    `record_name` varchar(255),
    `record_mx_preference` bigint,
    `record_data` varchar(255),
    `record_class` varchar(255),
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table virtual_dns (
    `negative_cache_ttl_seconds` bigint,
    `reverse_resolution` bool,
    `record_order` varchar(255),
    `next_virtual_dns` varchar(255),
    `floating_ip_record` varchar(255),
    `external_visible` bool,
    `dynamic_records_from_client` bool,
    `domain_name` varchar(255),
    `default_ttl_seconds` bigint,
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table virtual_ip (
    `subnet_id` varchar(255),
    `status_description` varchar(255),
    `status` varchar(255),
    `protocol_port` bigint,
    `protocol` varchar(255),
    `persistence_type` varchar(255),
    `persistence_cookie_name` varchar(255),
    `connection_limit` bigint,
    `admin_state` bool,
    `address` varchar(255),
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table virtual_machine_interface (
    `vrf_assign_rule` json,
    `vlan_tag_based_bridge_domain` bool,
    `sub_interface_vlan_tag` bigint,
    `service_interface_type` varchar(255),
    `local_preference` bigint,
    `traffic_direction` varchar(255),
    `udp_port` bigint,
    `vtep_dst_mac_address` varchar(255),
    `vtep_dst_ip_address` varchar(255),
    `vni` bigint,
    `routing_instance` varchar(255),
    `nic_assisted_mirroring_vlan` bigint,
    `nic_assisted_mirroring` bool,
    `nh_mode` varchar(255),
    `juniper_header` bool,
    `encapsulation` varchar(255),
    `analyzer_name` varchar(255),
    `analyzer_mac_address` varchar(255),
    `analyzer_ip_address` varchar(255),
    `mac_address` json,
    `route` json,
    `fat_flow_protocol` json,
    `virtual_machine_interface_disable_policy` bool,
    `dhcp_option` json,
    `virtual_machine_interface_device_owner` varchar(255),
    `key_value_pair` json,
    `allowed_address_pair` json,
    `uuid` varchar(255),
    `port_security_enabled` bool,
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `igmp_enable` bool,
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `source_port` bool,
    `source_ip` bool,
    `ip_protocol` bool,
    `hashing_configured` bool,
    `destination_port` bool,
    `destination_ip` bool,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `annotations_key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table virtual_machine (
    `uuid` varchar(255),
    `server_type` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table virtual_network (
    `vxlan_network_identifier` bigint,
    `rpf` varchar(255),
    `network_id` bigint,
    `mirror_destination` bool,
    `max_flows` bigint,
    `max_flow_rate` bigint,
    `forwarding_mode` varchar(255),
    `allow_transit` bool,
    `virtual_network_network_id` bigint,
    `fat_flow_protocol` json,
    `uuid` varchar(255),
    `router_external` bool,
    `route_target` json,
    `segmentation_id` bigint,
    `physical_network` varchar(255),
    `port_security_enabled` bool,
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `pbb_evpn_enable` bool,
    `pbb_etree_enable` bool,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `multi_policy_service_chains_enabled` bool,
    `mac_move_time_window` bigint,
    `mac_move_limit_action` varchar(255),
    `mac_move_limit` bigint,
    `mac_limit_action` varchar(255),
    `mac_limit` bigint,
    `mac_learning_enabled` bool,
    `mac_aging_time` bigint,
    `layer2_control_word` bool,
    `is_shared` bool,
    `is_provider_network` bool,
    `import_route_target_list_route_target` json,
    `igmp_enable` bool,
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `flood_unknown_unicast` bool,
    `fabric_snat` bool,
    `external_ipam` bool,
    `export_route_target_list_route_target` json,
    `source_port` bool,
    `source_ip` bool,
    `ip_protocol` bool,
    `hashing_configured` bool,
    `destination_port` bool,
    `destination_ip` bool,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
    `address_allocation_mode` varchar(255),
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table virtual_router (
    `virtual_router_type` varchar(255),
    `virtual_router_ip_address` varchar(255),
    `virtual_router_dpdk_enabled` bool,
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table appformix_bare_host_node (
    `uuid` varchar(255),
    `provisioning_state` varchar(255),
    `provisioning_start_time` varchar(255),
    `provisioning_progress_stage` varchar(255),
    `provisioning_progress` int,
    `provisioning_log` text,
    `provisioning_action` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `ansible_connection` varchar(255),
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table appformix_cluster (
    `uuid` varchar(255),
    `provisioning_state` varchar(255),
    `provisioning_start_time` varchar(255),
    `provisioning_progress_stage` varchar(255),
    `provisioning_progress` int,
    `provisioning_log` text,
    `provisioning_action` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `openstack_platform_enabled` bool,
    `network_device_discovery_enabled` bool,
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `contrail_config_url` varchar(255),
    `contrail_cluster_name` varchar(255),
    `contrail_analytics_url` varchar(255),
    `configuration_version` bigint,
    `appformix_vip` varchar(255),
    `appformix_version` varchar(255),
    `appformix_username` varchar(255),
    `appformix_remote_host_monitoring_enabled` bool,
    `appformix_password` varchar(255),
    `appformix_network_device_monitoring_enabled` bool,
    `appformix_license` varchar(255),
    `appformix_kvm_instance_discovery` bool,
    `appformix_jti_network_device_monitoring_enabled` bool,
    `appformix_image_dir` varchar(255),
    `appformix_docker_registry` varchar(255),
    `key_value_pair` json,
    `annotations_key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table appformix_compute_node (
    `uuid` varchar(255),
    `provisioning_state` varchar(255),
    `provisioning_start_time` varchar(255),
    `provisioning_progress_stage` varchar(255),
    `provisioning_progress` int,
    `provisioning_log` text,
    `provisioning_action` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `ansible_connection` varchar(255),
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table appformix_controller_node (
    `uuid` varchar(255),
    `provisioning_state` varchar(255),
    `provisioning_start_time` varchar(255),
    `provisioning_progress_stage` varchar(255),
    `provisioning_progress` int,
    `provisioning_log` text,
    `provisioning_action` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `keepalived_vrrp_interface` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `ansible_connection` varchar(255),
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table appformix_openstack_node (
    `uuid` varchar(255),
    `provisioning_state` varchar(255),
    `provisioning_start_time` varchar(255),
    `provisioning_progress_stage` varchar(255),
    `provisioning_progress` int,
    `provisioning_log` text,
    `provisioning_action` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `ansible_connection` varchar(255),
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table baremetal_node (
    `uuid` varchar(255),
    `updated_at` varchar(255),
    `target_provision_state` varchar(255),
    `target_power_state` varchar(255),
    `provision_state` varchar(255),
    `power_state` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `maintenance_reason` varchar(255),
    `maintenance` bool,
    `last_error` varchar(255),
    `instance_uuid` varchar(255),
    `vcpus` varchar(255),
    `swap_mb` varchar(255),
    `root_gb` varchar(255),
    `nova_host_id` varchar(255),
    `memory_mb` varchar(255),
    `local_gb` varchar(255),
    `image_source` varchar(255),
    `display_name` varchar(255),
    `capabilities` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `ipmi_username` varchar(255),
    `ipmi_port` varchar(255),
    `ipmi_password` varchar(255),
    `ipmi_address` varchar(255),
    `deploy_ramdisk` varchar(255),
    `deploy_kernel` varchar(255),
    `_display_name` varchar(255),
    `created_at` varchar(255),
    `console_enabled` bool,
    `configuration_version` bigint,
    `bm_properties_memory_mb` bigint,
    `bm_properties_local_gb` bigint,
    `cpus` bigint,
    `cpu_arch` varchar(255),
    `bm_properties_capabilities` varchar(255),
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table baremetal_port (
    `uuid` varchar(255),
    `updated_at` varchar(255),
    `pxe_enabled` bool,
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `node` varchar(255),
    `name` varchar(255),
    `mac_address` varchar(255),
    `switch_info` varchar(255),
    `switch_id` varchar(255),
    `port_id` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `created_at` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table cloud (
    `uuid` varchar(255),
    `type` varchar(255),
    `provisioning_state` varchar(255),
    `provisioning_start_time` varchar(255),
    `provisioning_progress_stage` varchar(255),
    `provisioning_progress` int,
    `provisioning_log` text,
    `provisioning_action` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `organization` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table cloud_account (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table cloud_private_subnet (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `cidr_block` varchar(255),
    `availability_zone` varchar(255),
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table cloud_project (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table cloud_region (
    `uuid` varchar(255),
    `resource_group` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `availability_zone` varchar(255),
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table cloud_security_group (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table cloud_security_group_rule (
    `uuid` varchar(255),
    `to_port` bigint,
    `protocol` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `from_port` bigint,
    `fq_name` json,
    `display_name` varchar(255),
    `direction` varchar(255),
    `configuration_version` bigint,
    `cidr_block` varchar(255),
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table cloud_user (
    `uuid` varchar(255),
    `public_key_value` varchar(255),
    `public_key_name` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `username` varchar(255),
    `password` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `username_cred_username` varchar(255),
    `username_cred_password` varchar(255),
    `secret_key` varchar(255),
    `access_key` varchar(255),
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table virtual_cloud (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `cidr_block` varchar(255),
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table contrail_analytics_database_node (
    `uuid` varchar(255),
    `provisioning_state` varchar(255),
    `provisioning_start_time` varchar(255),
    `provisioning_progress_stage` varchar(255),
    `provisioning_progress` int,
    `provisioning_log` text,
    `provisioning_action` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table contrail_analytics_node (
    `uuid` varchar(255),
    `provisioning_state` varchar(255),
    `provisioning_start_time` varchar(255),
    `provisioning_progress_stage` varchar(255),
    `provisioning_progress` int,
    `provisioning_log` text,
    `provisioning_action` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table contrail_cluster (
    `uuid` varchar(255),
    `statistics_ttl` varchar(255),
    `registry_private_insecure` bool,
    `rabbitmq_port` varchar(255),
    `provisioning_state` varchar(255),
    `provisioning_start_time` varchar(255),
    `provisioning_progress_stage` varchar(255),
    `provisioning_progress` int,
    `provisioning_log` text,
    `provisioning_action` varchar(255),
    `provisioner_type` varchar(255),
    `pre_shared_key` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `orchestrator` varchar(255),
    `ntp_server` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `flow_ttl` varchar(255),
    `encap_priority` varchar(255),
    `enable_ztp` bool,
    `domain_suffix` varchar(255),
    `display_name` varchar(255),
    `default_vrouter_interface` varchar(255),
    `default_gateway` varchar(255),
    `datapath_encryption` bool,
    `control_data_network_list` varchar(255),
    `contrail_version` varchar(255),
    `key_value_pair` json,
    `container_registry_username` varchar(255),
    `container_registry_password` varchar(255),
    `container_registry` varchar(255),
    `configuration_version` bigint,
    `config_audit_ttl` varchar(255),
    `annotations_key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table contrail_config_database_node (
    `uuid` varchar(255),
    `provisioning_state` varchar(255),
    `provisioning_start_time` varchar(255),
    `provisioning_progress_stage` varchar(255),
    `provisioning_progress` int,
    `provisioning_log` text,
    `provisioning_action` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table contrail_config_node (
    `uuid` varchar(255),
    `provisioning_state` varchar(255),
    `provisioning_start_time` varchar(255),
    `provisioning_progress_stage` varchar(255),
    `provisioning_progress` int,
    `provisioning_log` text,
    `provisioning_action` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table contrail_control_node (
    `uuid` varchar(255),
    `provisioning_state` varchar(255),
    `provisioning_start_time` varchar(255),
    `provisioning_progress_stage` varchar(255),
    `provisioning_progress` int,
    `provisioning_log` text,
    `provisioning_action` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table contrail_multicloud_gw_node (
    `vpn_network` varchar(255),
    `vpn_lo_network` varchar(255),
    `uuid` varchar(255),
    `provisioning_state` varchar(255),
    `provisioning_start_time` varchar(255),
    `provisioning_progress_stage` varchar(255),
    `provisioning_progress` int,
    `provisioning_log` text,
    `provisioning_action` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `openvpn_port` bigint,
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `bfd_multiplier_multihop` bigint,
    `bfd_multiplier` bigint,
    `bfd_interval_multihop` varchar(255),
    `bfd_interval` varchar(255),
    `as` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table contrail_service_node (
    `uuid` varchar(255),
    `service_type` varchar(255),
    `service_bond_interface_members` varchar(255),
    `service_bond_interface` varchar(255),
    `provisioning_state` varchar(255),
    `provisioning_start_time` varchar(255),
    `provisioning_progress_stage` varchar(255),
    `provisioning_progress` int,
    `provisioning_log` text,
    `provisioning_action` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `default_gateway` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table contrail_storage_node (
    `uuid` varchar(255),
    `storage_backend_bond_interface_members` varchar(255),
    `storage_access_bond_interface_members` varchar(255),
    `provisioning_state` varchar(255),
    `provisioning_start_time` varchar(255),
    `provisioning_progress_stage` varchar(255),
    `provisioning_progress` int,
    `provisioning_log` text,
    `provisioning_action` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `osd_drives` varchar(255),
    `name` varchar(255),
    `journal_drives` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table contrail_vrouter_node (
    `uuid` varchar(255),
    `type` varchar(255),
    `sriov_vf` bigint,
    `sriov_physical_net` varchar(255),
    `sriov_physical_interface` varchar(255),
    `provisioning_state` varchar(255),
    `provisioning_start_time` varchar(255),
    `provisioning_progress_stage` varchar(255),
    `provisioning_progress` int,
    `provisioning_log` text,
    `provisioning_action` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `huge_pages` bigint,
    `dpdk_uio_driver` varchar(255),
    `cpu_core_mask` varchar(255),
    `display_name` varchar(255),
    `default_gateway` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table contrail_webui_node (
    `uuid` varchar(255),
    `provisioning_state` varchar(255),
    `provisioning_start_time` varchar(255),
    `provisioning_progress_stage` varchar(255),
    `provisioning_progress` int,
    `provisioning_log` text,
    `provisioning_action` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table contrail_ztp_dhcp_node (
    `uuid` varchar(255),
    `provisioning_state` varchar(255),
    `provisioning_start_time` varchar(255),
    `provisioning_progress_stage` varchar(255),
    `provisioning_progress` int,
    `provisioning_log` text,
    `provisioning_action` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table contrail_ztp_tftp_node (
    `uuid` varchar(255),
    `provisioning_state` varchar(255),
    `provisioning_start_time` varchar(255),
    `provisioning_progress_stage` varchar(255),
    `provisioning_progress` int,
    `provisioning_log` text,
    `provisioning_action` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table credential (
    `uuid` varchar(255),
    `ssh_user` varchar(255),
    `ssh_password` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table dashboard (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `container_config` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table endpoint (
    `uuid` varchar(255),
    `public_url` varchar(255),
    `private_url` varchar(255),
    `prefix` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `enable_proxy` bool,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table flavor (
    `vcpus` bigint,
    `uuid` varchar(255),
    `swap` bigint,
    `rxtx_factor` bigint,
    `ram` bigint,
    `property` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `type` varchar(255),
    `rel` varchar(255),
    `href` varchar(255),
    `is_public` bool,
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `id` varchar(255),
    `fq_name` json,
    `ephemeral` bigint,
    `display_name` varchar(255),
    `disk` bigint,
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table os_image (
    `visibility` varchar(255),
    `uuid` varchar(255),
    `updated_at` varchar(255),
    `tags` varchar(255),
    `status` varchar(255),
    `size` bigint,
    `protected` bool,
    `property` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `_owner` varchar(255),
    `name` varchar(255),
    `min_ram` bigint,
    `min_disk` bigint,
    `location` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `id` varchar(255),
    `fq_name` json,
    `file` varchar(255),
    `display_name` varchar(255),
    `disk_format` varchar(255),
    `created_at` varchar(255),
    `container_format` varchar(255),
    `configuration_version` bigint,
    `checksum` varchar(255),
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table keypair (
    `uuid` varchar(255),
    `ssh_public_key` text,
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table kubernetes_cluster (
    `uuid` varchar(255),
    `provisioning_state` varchar(255),
    `provisioning_start_time` varchar(255),
    `provisioning_progress_stage` varchar(255),
    `provisioning_progress` int,
    `provisioning_log` text,
    `provisioning_action` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `ntp_server` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table kubernetes_kubemanager_node (
    `uuid` varchar(255),
    `provisioning_state` varchar(255),
    `provisioning_start_time` varchar(255),
    `provisioning_progress_stage` varchar(255),
    `provisioning_progress` int,
    `provisioning_log` text,
    `provisioning_action` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table kubernetes_master_node (
    `uuid` varchar(255),
    `provisioning_state` varchar(255),
    `provisioning_start_time` varchar(255),
    `provisioning_progress_stage` varchar(255),
    `provisioning_progress` int,
    `provisioning_log` text,
    `provisioning_action` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table kubernetes_node (
    `uuid` varchar(255),
    `provisioning_state` varchar(255),
    `provisioning_start_time` varchar(255),
    `provisioning_progress_stage` varchar(255),
    `provisioning_progress` int,
    `provisioning_log` text,
    `provisioning_action` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table node (
    `uuid` varchar(255),
    `type` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `mac_address` varchar(255),
    `ip_address` varchar(255),
    `interface_name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `hostname` varchar(255),
    `fq_name` json,
    `vmdk` varchar(255),
    `vcenter_server` varchar(255),
    `username` varchar(255),
    `password` varchar(255),
    `mac` varchar(255),
    `esxi_name` varchar(255),
    `datastore` varchar(255),
    `display_name` varchar(255),
    `disk_partition` varchar(255),
    `configuration_version` bigint,
    `volume_size` bigint,
    `subnets` varchar(255),
    `os_version` varchar(255),
    `operating_system` varchar(255),
    `machine_id` varchar(255),
    `instance_type` varchar(255),
    `memory_mb` bigint,
    `local_gb` bigint,
    `cpus` bigint,
    `cpu_arch` varchar(255),
    `capabilities` varchar(255),
    `network_interface` varchar(255),
    `bms_info_name` varchar(255),
    `ipmi_username` varchar(255),
    `ipmi_port` varchar(255),
    `ipmi_password` varchar(255),
    `ipmi_address` varchar(255),
    `deploy_ramdisk` varchar(255),
    `deploy_kernel` varchar(255),
    `driver` varchar(255),
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table openstack_baremetal_node (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table openstack_cluster (
    `uuid` varchar(255),
    `registry_private_insecure` bool,
    `provisioning_state` varchar(255),
    `provisioning_start_time` varchar(255),
    `provisioning_progress_stage` varchar(255),
    `provisioning_progress` int,
    `provisioning_log` text,
    `provisioning_action` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `openstack_release` varchar(255),
    `openstack_registry` varchar(255),
    `openstack_internal_vip_interface` varchar(255),
    `openstack_internal_vip` varchar(255),
    `openstack_external_vip_interface` varchar(255),
    `openstack_external_vip` varchar(255),
    `ntp_server` varchar(255),
    `name` varchar(255),
    `key_value_pair` json,
    `kolla_globals_key_value_pair` json,
    `keystone_admin_password` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `customize` text,
    `contrail_api_endpoint` varchar(255),
    `configuration_version` bigint,
    `annotations_key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table openstack_compute_node (
    `uuid` varchar(255),
    `provisioning_state` varchar(255),
    `provisioning_start_time` varchar(255),
    `provisioning_progress_stage` varchar(255),
    `provisioning_progress` int,
    `provisioning_log` text,
    `provisioning_action` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table openstack_control_node (
    `uuid` varchar(255),
    `provisioning_state` varchar(255),
    `provisioning_start_time` varchar(255),
    `provisioning_progress_stage` varchar(255),
    `provisioning_progress` int,
    `provisioning_log` text,
    `provisioning_action` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table openstack_monitoring_node (
    `uuid` varchar(255),
    `provisioning_state` varchar(255),
    `provisioning_start_time` varchar(255),
    `provisioning_progress_stage` varchar(255),
    `provisioning_progress` int,
    `provisioning_log` text,
    `provisioning_action` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table openstack_network_node (
    `uuid` varchar(255),
    `provisioning_state` varchar(255),
    `provisioning_start_time` varchar(255),
    `provisioning_progress_stage` varchar(255),
    `provisioning_progress` int,
    `provisioning_log` text,
    `provisioning_action` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table openstack_storage_node (
    `uuid` varchar(255),
    `provisioning_state` varchar(255),
    `provisioning_start_time` varchar(255),
    `provisioning_progress_stage` varchar(255),
    `provisioning_progress` int,
    `provisioning_log` text,
    `provisioning_action` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table port (
    `uuid` varchar(255),
    `port_group_uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `ip_address` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `pxe_enabled` bool,
    `node_uuid` varchar(255),
    `switch_info` varchar(255),
    `switch_id` varchar(255),
    `port_id` varchar(255),
    `address` varchar(255),
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table port_group (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `standalone_ports_supported` bool,
    `xmit_hash_policy` varchar(255),
    `miimon` bigint,
    `node_uuid` varchar(255),
    `mode` varchar(255),
    `address` varchar(255),
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table server (
    `uuid` varchar(255),
    `user_id` bigint,
    `updated` varchar(255),
    `tenant_id` varchar(255),
    `status` varchar(255),
    `progress` bigint,
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `locked` bool,
    `type` varchar(255),
    `rel` varchar(255),
    `href` varchar(255),
    `id` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `_id` varchar(255),
    `hostid` varchar(255),
    `host_status` varchar(255),
    `fq_name` json,
    `links_type` varchar(255),
    `links_rel` varchar(255),
    `links_href` varchar(255),
    `flavor_id` varchar(255),
    `display_name` varchar(255),
    `_created` varchar(255),
    `configuration_version` bigint,
    `config_drive` bool,
    `key_value_pair` json,
    `addr` varchar(255),
    `accessipv6` varchar(255),
    `accessipv4` varchar(255),
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table vcenter (
    `wsdl_path` varchar(255),
    `uuid` varchar(255),
    `username` varchar(255),
    `server` varchar(255),
    `provisioning_state` varchar(255),
    `provisioning_start_time` varchar(255),
    `provisioning_progress_stage` varchar(255),
    `provisioning_progress` int,
    `provisioning_log` text,
    `provisioning_action` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `password` varchar(255),
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `ntp_server` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `auth_protocol` varchar(255),
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table vcenter_compute (
    `uuid` varchar(255),
    `provisioning_state` varchar(255),
    `provisioning_start_time` varchar(255),
    `provisioning_progress_stage` varchar(255),
    `provisioning_progress` int,
    `provisioning_log` text,
    `provisioning_action` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `dvsswitch` varchar(255),
    `display_name` varchar(255),
    `datacenter` varchar(255),
    `configuration_version` bigint,
    `cluster_name` varchar(255),
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table vcenter_plugin_node (
    `uuid` varchar(255),
    `provisioning_state` varchar(255),
    `provisioning_start_time` varchar(255),
    `provisioning_progress_stage` varchar(255),
    `provisioning_progress` int,
    `provisioning_log` text,
    `provisioning_action` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table vpn_group (
    `uuid` varchar(255),
    `type` varchar(255),
    `provisioning_state` varchar(255),
    `provisioning_start_time` varchar(255),
    `provisioning_progress_stage` varchar(255),
    `provisioning_progress` int,
    `provisioning_log` text,
    `provisioning_action` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;


create table widget (
    `uuid` varchar(255),
    `share` json,
    `owner_access` bigint,
    `owner` varchar(255),
    `global_access` bigint,
    `parent_uuid` varchar(255),
    `parent_type` varchar(255),
    `name` varchar(255),
    `layout_config` varchar(255),
    `uuid_mslong` bigint,
    `uuid_lslong` bigint,
    `user_visible` bool,
    `permissions_owner_access` bigint,
    `permissions_owner` varchar(255),
    `other_access` bigint,
    `group_access` bigint,
    `group` varchar(255),
    `last_modified` varchar(255),
    `enable` bool,
    `description` varchar(255),
    `creator` varchar(255),
    `created` varchar(255),
    `fq_name` json,
    `display_name` varchar(255),
    `content_config` varchar(255),
    `container_config` varchar(255),
    `configuration_version` bigint,
    `key_value_pair` json,
     primary key(`uuid`),
    index parent_uuid_index (`parent_uuid`)
    ) CHARACTER SET utf8mb4;







create table ref_access_control_list_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references access_control_list(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_access_control_list_security_group (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references access_control_list(uuid) on delete cascade,
    foreign key (`to`) references security_group(uuid) on delete cascade,
    index from_index (`from`)) CHARACTER SET utf8mb4;

create table parent_access_control_list_virtual_network (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references access_control_list(uuid) on delete cascade,
    foreign key (`to`) references virtual_network(uuid) on delete cascade,
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_access_control_list (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references access_control_list(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_access_control_list (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references access_control_list(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_address_group_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references address_group(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_address_group_policy_management (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references address_group(uuid) on delete cascade,
    foreign key (`to`) references policy_management(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;

create table parent_address_group_project (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references address_group(uuid) on delete cascade,
    foreign key (`to`) references project(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_address_group (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references address_group(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_address_group (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references address_group(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_alarm_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references alarm(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_alarm_global_system_config (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references alarm(uuid) on delete cascade,
    foreign key (`to`) references global_system_config(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;

create table parent_alarm_project (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references alarm(uuid) on delete cascade,
    foreign key (`to`) references project(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_alarm (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references alarm(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_alarm (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references alarm(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_alias_ip_pool_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references alias_ip_pool(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_alias_ip_pool_virtual_network (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references alias_ip_pool(uuid) on delete cascade,
    foreign key (`to`) references virtual_network(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_alias_ip_pool (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references alias_ip_pool(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_alias_ip_pool (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references alias_ip_pool(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_alias_ip_project (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references alias_ip(uuid) on delete cascade,
    foreign key (`to`) references project(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_alias_ip_virtual_machine_interface (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references alias_ip(uuid) on delete cascade,
    foreign key (`to`) references virtual_machine_interface(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_alias_ip_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references alias_ip(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_alias_ip_alias_ip_pool (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references alias_ip(uuid) on delete cascade,
    foreign key (`to`) references alias_ip_pool(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_alias_ip (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references alias_ip(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_alias_ip (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references alias_ip(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_analytics_node_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references analytics_node(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_analytics_node_global_system_config (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references analytics_node(uuid) on delete cascade,
    foreign key (`to`) references global_system_config(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_analytics_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references analytics_node(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_analytics_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references analytics_node(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_api_access_list_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references api_access_list(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_api_access_list_domain (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references api_access_list(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;

create table parent_api_access_list_global_system_config (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references api_access_list(uuid) on delete cascade,
    foreign key (`to`) references global_system_config(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;

create table parent_api_access_list_project (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references api_access_list(uuid) on delete cascade,
    foreign key (`to`) references project(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_api_access_list (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references api_access_list(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_api_access_list (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references api_access_list(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_application_policy_set_firewall_policy (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    `sequence` varchar(255),
    foreign key (`from`) references application_policy_set(uuid) on delete cascade,
    foreign key (`to`) references firewall_policy(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_application_policy_set_global_vrouter_config (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references application_policy_set(uuid) on delete cascade,
    foreign key (`to`) references global_vrouter_config(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_application_policy_set_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references application_policy_set(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_application_policy_set_policy_management (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references application_policy_set(uuid) on delete cascade,
    foreign key (`to`) references policy_management(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;

create table parent_application_policy_set_project (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references application_policy_set(uuid) on delete cascade,
    foreign key (`to`) references project(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_application_policy_set (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references application_policy_set(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_application_policy_set (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references application_policy_set(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_bgp_as_a_service_bgp_router (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references bgp_as_a_service(uuid) on delete cascade,
    foreign key (`to`) references bgp_router(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_bgp_as_a_service_service_health_check (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references bgp_as_a_service(uuid) on delete cascade,
    foreign key (`to`) references service_health_check(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_bgp_as_a_service_virtual_machine_interface (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references bgp_as_a_service(uuid) on delete cascade,
    foreign key (`to`) references virtual_machine_interface(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_bgp_as_a_service_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references bgp_as_a_service(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_bgp_as_a_service_project (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references bgp_as_a_service(uuid) on delete cascade,
    foreign key (`to`) references project(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_bgp_as_a_service (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references bgp_as_a_service(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_bgp_as_a_service (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references bgp_as_a_service(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_bgp_router_bgp_router (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    `session` json,
    foreign key (`from`) references bgp_router(uuid) on delete cascade,
    foreign key (`to`) references bgp_router(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_bgp_router_sub_cluster (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references bgp_router(uuid) on delete cascade,
    foreign key (`to`) references sub_cluster(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_bgp_router_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references bgp_router(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_bgp_router_routing_instance (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references bgp_router(uuid) on delete cascade,
    foreign key (`to`) references routing_instance(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_bgp_router (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references bgp_router(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_bgp_router (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references bgp_router(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_bgpvpn_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references bgpvpn(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_bgpvpn_project (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references bgpvpn(uuid) on delete cascade,
    foreign key (`to`) references project(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_bgpvpn (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references bgpvpn(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_bgpvpn (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references bgpvpn(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_bridge_domain_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references bridge_domain(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_bridge_domain_virtual_network (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references bridge_domain(uuid) on delete cascade,
    foreign key (`to`) references virtual_network(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_bridge_domain (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references bridge_domain(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_bridge_domain (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references bridge_domain(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_card_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references card(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;




create table tenant_share_card (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references card(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_card (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references card(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_config_node_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references config_node(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_config_node_global_system_config (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references config_node(uuid) on delete cascade,
    foreign key (`to`) references global_system_config(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_config_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references config_node(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_config_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references config_node(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_config_root_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references config_root(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;




create table tenant_share_config_root (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references config_root(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_config_root (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references config_root(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_customer_attachment_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references customer_attachment(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_customer_attachment_floating_ip (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references customer_attachment(uuid) on delete cascade,
    foreign key (`to`) references floating_ip(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_customer_attachment_virtual_machine_interface (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references customer_attachment(uuid) on delete cascade,
    foreign key (`to`) references virtual_machine_interface(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;




create table tenant_share_customer_attachment (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references customer_attachment(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_customer_attachment (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references customer_attachment(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_database_node_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references database_node(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_database_node_global_system_config (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references database_node(uuid) on delete cascade,
    foreign key (`to`) references global_system_config(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_database_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references database_node(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_database_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references database_node(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_device_image_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references device_image(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_device_image_global_system_config (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references device_image(uuid) on delete cascade,
    foreign key (`to`) references global_system_config(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_device_image (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references device_image(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_device_image (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references device_image(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_discovery_service_assignment_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references discovery_service_assignment(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;




create table tenant_share_discovery_service_assignment (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references discovery_service_assignment(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_discovery_service_assignment (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references discovery_service_assignment(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_domain_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references domain(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;




create table tenant_share_domain (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references domain(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_domain (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references domain(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_dsa_rule_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references dsa_rule(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_dsa_rule_discovery_service_assignment (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references dsa_rule(uuid) on delete cascade,
    foreign key (`to`) references discovery_service_assignment(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_dsa_rule (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references dsa_rule(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_dsa_rule (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references dsa_rule(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_e2_service_provider_peering_policy (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references e2_service_provider(uuid) on delete cascade,
    foreign key (`to`) references peering_policy(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_e2_service_provider_physical_router (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references e2_service_provider(uuid) on delete cascade,
    foreign key (`to`) references physical_router(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_e2_service_provider_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references e2_service_provider(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;




create table tenant_share_e2_service_provider (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references e2_service_provider(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_e2_service_provider (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references e2_service_provider(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_fabric_namespace_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references fabric_namespace(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_fabric_namespace_fabric (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references fabric_namespace(uuid) on delete cascade,
    foreign key (`to`) references fabric(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_fabric_namespace (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references fabric_namespace(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_fabric_namespace (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references fabric_namespace(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_fabric_node_profile (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    `serial_num` json,
    foreign key (`from`) references fabric(uuid) on delete cascade,
    foreign key (`to`) references node_profile(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_fabric_virtual_network (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    `network_type` varchar(255),
    foreign key (`from`) references fabric(uuid) on delete cascade,
    foreign key (`to`) references virtual_network(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_fabric_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references fabric(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_fabric_global_system_config (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references fabric(uuid) on delete cascade,
    foreign key (`to`) references global_system_config(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_fabric (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references fabric(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_fabric (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references fabric(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_firewall_policy_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references firewall_policy(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_firewall_policy_firewall_rule (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    `sequence` varchar(255),
    foreign key (`from`) references firewall_policy(uuid) on delete cascade,
    foreign key (`to`) references firewall_rule(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_firewall_policy_security_logging_object (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    `rate` bigint,
    foreign key (`from`) references firewall_policy(uuid) on delete cascade,
    foreign key (`to`) references security_logging_object(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_firewall_policy_policy_management (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references firewall_policy(uuid) on delete cascade,
    foreign key (`to`) references policy_management(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;

create table parent_firewall_policy_project (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references firewall_policy(uuid) on delete cascade,
    foreign key (`to`) references project(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_firewall_policy (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references firewall_policy(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_firewall_policy (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references firewall_policy(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_firewall_rule_address_group (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references firewall_rule(uuid) on delete cascade,
    foreign key (`to`) references address_group(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_firewall_rule_security_logging_object (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    `rate` bigint,
    foreign key (`from`) references firewall_rule(uuid) on delete cascade,
    foreign key (`to`) references security_logging_object(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_firewall_rule_service_group (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references firewall_rule(uuid) on delete cascade,
    foreign key (`to`) references service_group(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_firewall_rule_virtual_network (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references firewall_rule(uuid) on delete cascade,
    foreign key (`to`) references virtual_network(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_firewall_rule_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references firewall_rule(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_firewall_rule_policy_management (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references firewall_rule(uuid) on delete cascade,
    foreign key (`to`) references policy_management(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;

create table parent_firewall_rule_project (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references firewall_rule(uuid) on delete cascade,
    foreign key (`to`) references project(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_firewall_rule (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references firewall_rule(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_firewall_rule (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references firewall_rule(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_floating_ip_pool_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references floating_ip_pool(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_floating_ip_pool_virtual_network (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references floating_ip_pool(uuid) on delete cascade,
    foreign key (`to`) references virtual_network(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_floating_ip_pool (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references floating_ip_pool(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_floating_ip_pool (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references floating_ip_pool(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_floating_ip_project (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references floating_ip(uuid) on delete cascade,
    foreign key (`to`) references project(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_floating_ip_virtual_machine_interface (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references floating_ip(uuid) on delete cascade,
    foreign key (`to`) references virtual_machine_interface(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_floating_ip_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references floating_ip(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_floating_ip_floating_ip_pool (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references floating_ip(uuid) on delete cascade,
    foreign key (`to`) references floating_ip_pool(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;

create table parent_floating_ip_instance_ip (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references floating_ip(uuid) on delete cascade,
    foreign key (`to`) references instance_ip(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_floating_ip (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references floating_ip(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_floating_ip (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references floating_ip(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_forwarding_class_qos_queue (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references forwarding_class(uuid) on delete cascade,
    foreign key (`to`) references qos_queue(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_forwarding_class_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references forwarding_class(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_forwarding_class_global_qos_config (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references forwarding_class(uuid) on delete cascade,
    foreign key (`to`) references global_qos_config(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_forwarding_class (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references forwarding_class(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_forwarding_class (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references forwarding_class(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_global_analytics_config_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references global_analytics_config(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_global_analytics_config_global_system_config (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references global_analytics_config(uuid) on delete cascade,
    foreign key (`to`) references global_system_config(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_global_analytics_config (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references global_analytics_config(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_global_analytics_config (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references global_analytics_config(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_global_qos_config_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references global_qos_config(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_global_qos_config_global_system_config (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references global_qos_config(uuid) on delete cascade,
    foreign key (`to`) references global_system_config(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_global_qos_config (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references global_qos_config(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_global_qos_config (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references global_qos_config(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_global_system_config_bgp_router (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references global_system_config(uuid) on delete cascade,
    foreign key (`to`) references bgp_router(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_global_system_config_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references global_system_config(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;




create table tenant_share_global_system_config (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references global_system_config(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_global_system_config (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references global_system_config(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_global_vrouter_config_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references global_vrouter_config(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_global_vrouter_config_global_system_config (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references global_vrouter_config(uuid) on delete cascade,
    foreign key (`to`) references global_system_config(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_global_vrouter_config (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references global_vrouter_config(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_global_vrouter_config (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references global_vrouter_config(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_hardware_card (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references hardware(uuid) on delete cascade,
    foreign key (`to`) references card(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_hardware_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references hardware(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;




create table tenant_share_hardware (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references hardware(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_hardware (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references hardware(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_instance_ip_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references instance_ip(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_instance_ip_logical_interface (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references instance_ip(uuid) on delete cascade,
    foreign key (`to`) references logical_interface(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_instance_ip_network_ipam (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references instance_ip(uuid) on delete cascade,
    foreign key (`to`) references network_ipam(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_instance_ip_physical_router (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references instance_ip(uuid) on delete cascade,
    foreign key (`to`) references physical_router(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_instance_ip_virtual_machine_interface (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references instance_ip(uuid) on delete cascade,
    foreign key (`to`) references virtual_machine_interface(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_instance_ip_virtual_network (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references instance_ip(uuid) on delete cascade,
    foreign key (`to`) references virtual_network(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_instance_ip_virtual_router (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references instance_ip(uuid) on delete cascade,
    foreign key (`to`) references virtual_router(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;




create table tenant_share_instance_ip (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references instance_ip(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_instance_ip (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references instance_ip(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_interface_route_table_service_instance (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    `interface_type` varchar(255),
    foreign key (`from`) references interface_route_table(uuid) on delete cascade,
    foreign key (`to`) references service_instance(uuid) on delete cascade,
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_interface_route_table_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references interface_route_table(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_interface_route_table_project (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references interface_route_table(uuid) on delete cascade,
    foreign key (`to`) references project(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_interface_route_table (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references interface_route_table(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_interface_route_table (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references interface_route_table(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_job_template_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references job_template(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_job_template_global_system_config (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references job_template(uuid) on delete cascade,
    foreign key (`to`) references global_system_config(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_job_template (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references job_template(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_job_template (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references job_template(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_link_aggregation_group_physical_interface (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references link_aggregation_group(uuid) on delete cascade,
    foreign key (`to`) references physical_interface(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_link_aggregation_group_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references link_aggregation_group(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_link_aggregation_group_physical_router (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references link_aggregation_group(uuid) on delete cascade,
    foreign key (`to`) references physical_router(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_link_aggregation_group (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references link_aggregation_group(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_link_aggregation_group (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references link_aggregation_group(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_loadbalancer_healthmonitor_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references loadbalancer_healthmonitor(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_loadbalancer_healthmonitor_project (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references loadbalancer_healthmonitor(uuid) on delete cascade,
    foreign key (`to`) references project(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_loadbalancer_healthmonitor (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references loadbalancer_healthmonitor(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_loadbalancer_healthmonitor (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references loadbalancer_healthmonitor(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_loadbalancer_listener_loadbalancer (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references loadbalancer_listener(uuid) on delete cascade,
    foreign key (`to`) references loadbalancer(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_loadbalancer_listener_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references loadbalancer_listener(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_loadbalancer_listener_project (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references loadbalancer_listener(uuid) on delete cascade,
    foreign key (`to`) references project(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_loadbalancer_listener (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references loadbalancer_listener(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_loadbalancer_listener (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references loadbalancer_listener(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_loadbalancer_member_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references loadbalancer_member(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_loadbalancer_member_loadbalancer_pool (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references loadbalancer_member(uuid) on delete cascade,
    foreign key (`to`) references loadbalancer_pool(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_loadbalancer_member (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references loadbalancer_member(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_loadbalancer_member (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references loadbalancer_member(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_loadbalancer_pool_loadbalancer_healthmonitor (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references loadbalancer_pool(uuid) on delete cascade,
    foreign key (`to`) references loadbalancer_healthmonitor(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_loadbalancer_pool_loadbalancer_listener (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references loadbalancer_pool(uuid) on delete cascade,
    foreign key (`to`) references loadbalancer_listener(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_loadbalancer_pool_service_appliance_set (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references loadbalancer_pool(uuid) on delete cascade,
    foreign key (`to`) references service_appliance_set(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_loadbalancer_pool_service_instance (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references loadbalancer_pool(uuid) on delete cascade,
    foreign key (`to`) references service_instance(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_loadbalancer_pool_virtual_machine_interface (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references loadbalancer_pool(uuid) on delete cascade,
    foreign key (`to`) references virtual_machine_interface(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_loadbalancer_pool_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references loadbalancer_pool(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_loadbalancer_pool_project (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references loadbalancer_pool(uuid) on delete cascade,
    foreign key (`to`) references project(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_loadbalancer_pool (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references loadbalancer_pool(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_loadbalancer_pool (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references loadbalancer_pool(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_loadbalancer_service_instance (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references loadbalancer(uuid) on delete cascade,
    foreign key (`to`) references service_instance(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_loadbalancer_virtual_machine_interface (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references loadbalancer(uuid) on delete cascade,
    foreign key (`to`) references virtual_machine_interface(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_loadbalancer_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references loadbalancer(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_loadbalancer_service_appliance_set (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references loadbalancer(uuid) on delete cascade,
    foreign key (`to`) references service_appliance_set(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_loadbalancer_project (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references loadbalancer(uuid) on delete cascade,
    foreign key (`to`) references project(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_loadbalancer (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references loadbalancer(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_loadbalancer (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references loadbalancer(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_logical_interface_virtual_machine_interface (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references logical_interface(uuid) on delete cascade,
    foreign key (`to`) references virtual_machine_interface(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_logical_interface_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references logical_interface(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_logical_interface_physical_interface (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references logical_interface(uuid) on delete cascade,
    foreign key (`to`) references physical_interface(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;

create table parent_logical_interface_physical_router (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references logical_interface(uuid) on delete cascade,
    foreign key (`to`) references physical_router(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_logical_interface (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references logical_interface(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_logical_interface (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references logical_interface(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_logical_router_service_instance (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references logical_router(uuid) on delete cascade,
    foreign key (`to`) references service_instance(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_logical_router_virtual_machine_interface (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references logical_router(uuid) on delete cascade,
    foreign key (`to`) references virtual_machine_interface(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_logical_router_virtual_network (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    `logical_router_virtual_network_type` varchar(255),
    foreign key (`from`) references logical_router(uuid) on delete cascade,
    foreign key (`to`) references virtual_network(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_logical_router_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references logical_router(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_logical_router_bgpvpn (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references logical_router(uuid) on delete cascade,
    foreign key (`to`) references bgpvpn(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_logical_router_physical_router (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references logical_router(uuid) on delete cascade,
    foreign key (`to`) references physical_router(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_logical_router_route_table (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references logical_router(uuid) on delete cascade,
    foreign key (`to`) references route_table(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_logical_router_route_target (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references logical_router(uuid) on delete cascade,
    foreign key (`to`) references route_target(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_logical_router_project (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references logical_router(uuid) on delete cascade,
    foreign key (`to`) references project(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_logical_router (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references logical_router(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_logical_router (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references logical_router(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_multicast_group_address_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references multicast_group_address(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;




create table tenant_share_multicast_group_address (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references multicast_group_address(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_multicast_group_address (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references multicast_group_address(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_multicast_group_multicast_group_address (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references multicast_group(uuid) on delete cascade,
    foreign key (`to`) references multicast_group_address(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_multicast_group_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references multicast_group(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;




create table tenant_share_multicast_group (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references multicast_group(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_multicast_group (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references multicast_group(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_multicast_policy_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references multicast_policy(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;




create table tenant_share_multicast_policy (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references multicast_policy(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_multicast_policy (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references multicast_policy(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_namespace_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references namespace(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_namespace_domain (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references namespace(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_namespace (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references namespace(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_namespace (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references namespace(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_network_device_config_physical_router (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references network_device_config(uuid) on delete cascade,
    foreign key (`to`) references physical_router(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_network_device_config_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references network_device_config(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;




create table tenant_share_network_device_config (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references network_device_config(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_network_device_config (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references network_device_config(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_network_ipam_virtual_dns (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references network_ipam(uuid) on delete cascade,
    foreign key (`to`) references virtual_dns(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_network_ipam_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references network_ipam(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_network_ipam_project (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references network_ipam(uuid) on delete cascade,
    foreign key (`to`) references project(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_network_ipam (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references network_ipam(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_network_ipam (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references network_ipam(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_network_policy_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references network_policy(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_network_policy_project (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references network_policy(uuid) on delete cascade,
    foreign key (`to`) references project(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_network_policy (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references network_policy(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_network_policy (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references network_policy(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_node_profile_hardware (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references node_profile(uuid) on delete cascade,
    foreign key (`to`) references hardware(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_node_profile_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references node_profile(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_node_profile_global_system_config (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references node_profile(uuid) on delete cascade,
    foreign key (`to`) references global_system_config(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_node_profile (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references node_profile(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_node_profile (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references node_profile(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_peering_policy_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references peering_policy(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;




create table tenant_share_peering_policy (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references peering_policy(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_peering_policy (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references peering_policy(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_physical_interface_physical_interface (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references physical_interface(uuid) on delete cascade,
    foreign key (`to`) references physical_interface(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_physical_interface_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references physical_interface(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_physical_interface_physical_router (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references physical_interface(uuid) on delete cascade,
    foreign key (`to`) references physical_router(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_physical_interface (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references physical_interface(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_physical_interface (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references physical_interface(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_physical_router_virtual_router (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references physical_router(uuid) on delete cascade,
    foreign key (`to`) references virtual_router(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_physical_router_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references physical_router(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_physical_router_bgp_router (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references physical_router(uuid) on delete cascade,
    foreign key (`to`) references bgp_router(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_physical_router_device_image (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references physical_router(uuid) on delete cascade,
    foreign key (`to`) references device_image(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_physical_router_fabric (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references physical_router(uuid) on delete cascade,
    foreign key (`to`) references fabric(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_physical_router_node_profile (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references physical_router(uuid) on delete cascade,
    foreign key (`to`) references node_profile(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_physical_router_virtual_network (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references physical_router(uuid) on delete cascade,
    foreign key (`to`) references virtual_network(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_physical_router_global_system_config (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references physical_router(uuid) on delete cascade,
    foreign key (`to`) references global_system_config(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_physical_router (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references physical_router(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_physical_router (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references physical_router(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_policy_management_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references policy_management(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_policy_management_project (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references policy_management(uuid) on delete cascade,
    foreign key (`to`) references project(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_policy_management (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references policy_management(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_policy_management (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references policy_management(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_port_tuple_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references port_tuple(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_port_tuple_service_instance (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references port_tuple(uuid) on delete cascade,
    foreign key (`to`) references service_instance(uuid) on delete cascade,
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_port_tuple (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references port_tuple(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_port_tuple (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references port_tuple(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_project_floating_ip_pool (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references project(uuid) on delete cascade,
    foreign key (`to`) references floating_ip_pool(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_project_namespace (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    `ip_prefix` varchar(255),
    `ip_prefix_len` bigint,
    foreign key (`from`) references project(uuid) on delete cascade,
    foreign key (`to`) references namespace(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_project_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references project(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_project_alias_ip_pool (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references project(uuid) on delete cascade,
    foreign key (`to`) references alias_ip_pool(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_project_application_policy_set (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references project(uuid) on delete cascade,
    foreign key (`to`) references application_policy_set(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_project_domain (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references project(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_project (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references project(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_project (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references project(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_provider_attachment_virtual_router (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references provider_attachment(uuid) on delete cascade,
    foreign key (`to`) references virtual_router(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_provider_attachment_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references provider_attachment(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;




create table tenant_share_provider_attachment (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references provider_attachment(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_provider_attachment (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references provider_attachment(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_qos_config_global_system_config (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references qos_config(uuid) on delete cascade,
    foreign key (`to`) references global_system_config(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_qos_config_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references qos_config(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_qos_config_global_qos_config (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references qos_config(uuid) on delete cascade,
    foreign key (`to`) references global_qos_config(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;

create table parent_qos_config_project (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references qos_config(uuid) on delete cascade,
    foreign key (`to`) references project(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_qos_config (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references qos_config(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_qos_config (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references qos_config(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_qos_queue_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references qos_queue(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_qos_queue_global_qos_config (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references qos_queue(uuid) on delete cascade,
    foreign key (`to`) references global_qos_config(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_qos_queue (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references qos_queue(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_qos_queue (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references qos_queue(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_role_config_job_template (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references role_config(uuid) on delete cascade,
    foreign key (`to`) references job_template(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_role_config_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references role_config(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_role_config_node_profile (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references role_config(uuid) on delete cascade,
    foreign key (`to`) references node_profile(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_role_config (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references role_config(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_role_config (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references role_config(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_route_aggregate_routing_instance (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references route_aggregate(uuid) on delete cascade,
    foreign key (`to`) references routing_instance(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_route_aggregate_service_instance (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    `interface_type` varchar(255),
    foreign key (`from`) references route_aggregate(uuid) on delete cascade,
    foreign key (`to`) references service_instance(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_route_aggregate_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references route_aggregate(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_route_aggregate_project (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references route_aggregate(uuid) on delete cascade,
    foreign key (`to`) references project(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_route_aggregate (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references route_aggregate(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_route_aggregate (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references route_aggregate(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_route_table_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references route_table(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_route_table_project (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references route_table(uuid) on delete cascade,
    foreign key (`to`) references project(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_route_table (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references route_table(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_route_table (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references route_table(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_route_target_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references route_target(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;




create table tenant_share_route_target (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references route_target(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_route_target (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references route_target(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_routing_instance_route_target (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    `import_export` varchar(255),
    foreign key (`from`) references routing_instance(uuid) on delete cascade,
    foreign key (`to`) references route_target(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_routing_instance_routing_instance (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    `destination_instance` varchar(255),
    foreign key (`from`) references routing_instance(uuid) on delete cascade,
    foreign key (`to`) references routing_instance(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_routing_instance_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references routing_instance(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_routing_instance_virtual_network (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references routing_instance(uuid) on delete cascade,
    foreign key (`to`) references virtual_network(uuid) on delete cascade,
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_routing_instance (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references routing_instance(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_routing_instance (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references routing_instance(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_routing_policy_routing_instance (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    `sequence` varchar(255),
    foreign key (`from`) references routing_policy(uuid) on delete cascade,
    foreign key (`to`) references routing_instance(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_routing_policy_service_instance (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    `left_sequence` varchar(255),
    `right_sequence` varchar(255),
    foreign key (`from`) references routing_policy(uuid) on delete cascade,
    foreign key (`to`) references service_instance(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_routing_policy_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references routing_policy(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_routing_policy_project (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references routing_policy(uuid) on delete cascade,
    foreign key (`to`) references project(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_routing_policy (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references routing_policy(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_routing_policy (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references routing_policy(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_security_group_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references security_group(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_security_group_project (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references security_group(uuid) on delete cascade,
    foreign key (`to`) references project(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_security_group (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references security_group(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_security_group (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references security_group(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_security_logging_object_network_policy (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    `rule` json,
    foreign key (`from`) references security_logging_object(uuid) on delete cascade,
    foreign key (`to`) references network_policy(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_security_logging_object_security_group (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    `rule` json,
    foreign key (`from`) references security_logging_object(uuid) on delete cascade,
    foreign key (`to`) references security_group(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_security_logging_object_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references security_logging_object(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_security_logging_object_global_vrouter_config (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references security_logging_object(uuid) on delete cascade,
    foreign key (`to`) references global_vrouter_config(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;

create table parent_security_logging_object_project (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references security_logging_object(uuid) on delete cascade,
    foreign key (`to`) references project(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_security_logging_object (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references security_logging_object(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_security_logging_object (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references security_logging_object(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_service_appliance_physical_interface (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    `interface_type` varchar(255),
    foreign key (`from`) references service_appliance(uuid) on delete cascade,
    foreign key (`to`) references physical_interface(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_service_appliance_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references service_appliance(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_service_appliance_service_appliance_set (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references service_appliance(uuid) on delete cascade,
    foreign key (`to`) references service_appliance_set(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_service_appliance (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references service_appliance(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_service_appliance (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references service_appliance(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_service_appliance_set_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references service_appliance_set(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_service_appliance_set_global_system_config (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references service_appliance_set(uuid) on delete cascade,
    foreign key (`to`) references global_system_config(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_service_appliance_set (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references service_appliance_set(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_service_appliance_set (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references service_appliance_set(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_service_connection_module_service_object (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references service_connection_module(uuid) on delete cascade,
    foreign key (`to`) references service_object(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_service_connection_module_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references service_connection_module(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;




create table tenant_share_service_connection_module (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references service_connection_module(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_service_connection_module (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references service_connection_module(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_service_endpoint_physical_router (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references service_endpoint(uuid) on delete cascade,
    foreign key (`to`) references physical_router(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_service_endpoint_service_connection_module (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references service_endpoint(uuid) on delete cascade,
    foreign key (`to`) references service_connection_module(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_service_endpoint_service_object (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references service_endpoint(uuid) on delete cascade,
    foreign key (`to`) references service_object(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_service_endpoint_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references service_endpoint(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;




create table tenant_share_service_endpoint (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references service_endpoint(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_service_endpoint (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references service_endpoint(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_service_group_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references service_group(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_service_group_policy_management (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references service_group(uuid) on delete cascade,
    foreign key (`to`) references policy_management(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;

create table parent_service_group_project (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references service_group(uuid) on delete cascade,
    foreign key (`to`) references project(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_service_group (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references service_group(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_service_group (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references service_group(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_service_health_check_service_instance (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    `interface_type` varchar(255),
    foreign key (`from`) references service_health_check(uuid) on delete cascade,
    foreign key (`to`) references service_instance(uuid) on delete cascade,
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_service_health_check_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references service_health_check(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_service_health_check_project (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references service_health_check(uuid) on delete cascade,
    foreign key (`to`) references project(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_service_health_check (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references service_health_check(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_service_health_check (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references service_health_check(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_service_instance_instance_ip (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    `interface_type` varchar(255),
    foreign key (`from`) references service_instance(uuid) on delete cascade,
    foreign key (`to`) references instance_ip(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_service_instance_service_template (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references service_instance(uuid) on delete cascade,
    foreign key (`to`) references service_template(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_service_instance_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references service_instance(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_service_instance_project (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references service_instance(uuid) on delete cascade,
    foreign key (`to`) references project(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_service_instance (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references service_instance(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_service_instance (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references service_instance(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_service_object_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references service_object(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;




create table tenant_share_service_object (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references service_object(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_service_object (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references service_object(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_service_template_service_appliance_set (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references service_template(uuid) on delete cascade,
    foreign key (`to`) references service_appliance_set(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_service_template_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references service_template(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_service_template_domain (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references service_template(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_service_template (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references service_template(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_service_template (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references service_template(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_structured_syslog_application_record_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references structured_syslog_application_record(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_log_application_record_log_config (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references structured_syslog_application_record(uuid) on delete cascade,
    foreign key (`to`) references structured_syslog_config(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_structured_syslog_application_record (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references structured_syslog_application_record(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_structured_syslog_application_record (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references structured_syslog_application_record(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_structured_syslog_config_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references structured_syslog_config(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_structured_syslog_config_project (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references structured_syslog_config(uuid) on delete cascade,
    foreign key (`to`) references project(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;

create table parent_log_config_global_analytics_config (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references structured_syslog_config(uuid) on delete cascade,
    foreign key (`to`) references global_analytics_config(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_structured_syslog_config (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references structured_syslog_config(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_structured_syslog_config (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references structured_syslog_config(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_structured_syslog_hostname_record_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references structured_syslog_hostname_record(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_log_hostname_record_log_config (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references structured_syslog_hostname_record(uuid) on delete cascade,
    foreign key (`to`) references structured_syslog_config(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_structured_syslog_hostname_record (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references structured_syslog_hostname_record(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_structured_syslog_hostname_record (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references structured_syslog_hostname_record(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_structured_syslog_message_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references structured_syslog_message(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_log_message_log_config (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references structured_syslog_message(uuid) on delete cascade,
    foreign key (`to`) references structured_syslog_config(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_structured_syslog_message (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references structured_syslog_message(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_structured_syslog_message (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references structured_syslog_message(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_structured_syslog_sla_profile_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references structured_syslog_sla_profile(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_log_sla_profile_log_config (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references structured_syslog_sla_profile(uuid) on delete cascade,
    foreign key (`to`) references structured_syslog_config(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_structured_syslog_sla_profile (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references structured_syslog_sla_profile(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_structured_syslog_sla_profile (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references structured_syslog_sla_profile(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_sub_cluster_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references sub_cluster(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;




create table tenant_share_sub_cluster (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references sub_cluster(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_sub_cluster (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references sub_cluster(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_subnet_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references subnet(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_subnet_virtual_machine_interface (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references subnet(uuid) on delete cascade,
    foreign key (`to`) references virtual_machine_interface(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;




create table tenant_share_subnet (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references subnet(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_subnet (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references subnet(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_tag_tag_type (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references tag(uuid) on delete cascade,
    foreign key (`to`) references tag_type(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_tag_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references tag(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_tag_project (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references tag(uuid) on delete cascade,
    foreign key (`to`) references project(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_tag (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references tag(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_tag (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references tag(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_tag_type_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references tag_type(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;




create table tenant_share_tag_type (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references tag_type(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_tag_type (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references tag_type(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_virtual_dns_record_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references virtual_dns_record(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_virtual_dns_record_virtual_dns (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references virtual_dns_record(uuid) on delete cascade,
    foreign key (`to`) references virtual_dns(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_virtual_dns_record (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references virtual_dns_record(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_virtual_dns_record (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references virtual_dns_record(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_virtual_dns_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references virtual_dns(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_virtual_dns_domain (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references virtual_dns(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_virtual_dns (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references virtual_dns(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_virtual_dns (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references virtual_dns(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_virtual_ip_virtual_machine_interface (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references virtual_ip(uuid) on delete cascade,
    foreign key (`to`) references virtual_machine_interface(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_virtual_ip_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references virtual_ip(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_virtual_ip_loadbalancer_pool (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references virtual_ip(uuid) on delete cascade,
    foreign key (`to`) references loadbalancer_pool(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_virtual_ip_project (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references virtual_ip(uuid) on delete cascade,
    foreign key (`to`) references project(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_virtual_ip (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references virtual_ip(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_virtual_ip (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references virtual_ip(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_virtual_machine_interface_interface_route_table (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references virtual_machine_interface(uuid) on delete cascade,
    foreign key (`to`) references interface_route_table(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_virtual_machine_interface_qos_config (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references virtual_machine_interface(uuid) on delete cascade,
    foreign key (`to`) references qos_config(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_virtual_machine_interface_security_group (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references virtual_machine_interface(uuid) on delete cascade,
    foreign key (`to`) references security_group(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_virtual_machine_interface_service_endpoint (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references virtual_machine_interface(uuid) on delete cascade,
    foreign key (`to`) references service_endpoint(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_v_m_i_v_m_i (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references virtual_machine_interface(uuid) on delete cascade,
    foreign key (`to`) references virtual_machine_interface(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_virtual_machine_interface_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references virtual_machine_interface(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_virtual_machine_interface_routing_instance (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    `mpls_label` bigint,
    `protocol` varchar(255),
    `service_chain_address` varchar(255),
    `src_mac` varchar(255),
    `vlan_tag` bigint,
    `direction` varchar(255),
    `dst_mac` varchar(255),
    `ipv6_service_chain_address` varchar(255),
    foreign key (`from`) references virtual_machine_interface(uuid) on delete cascade,
    foreign key (`to`) references routing_instance(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_virtual_machine_interface_virtual_network (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references virtual_machine_interface(uuid) on delete cascade,
    foreign key (`to`) references virtual_network(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_virtual_machine_interface_physical_interface (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references virtual_machine_interface(uuid) on delete cascade,
    foreign key (`to`) references physical_interface(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_virtual_machine_interface_service_health_check (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references virtual_machine_interface(uuid) on delete cascade,
    foreign key (`to`) references service_health_check(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_virtual_machine_interface_bgp_router (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references virtual_machine_interface(uuid) on delete cascade,
    foreign key (`to`) references bgp_router(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_virtual_machine_interface_bridge_domain (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    `vlan_tag` bigint,
    foreign key (`from`) references virtual_machine_interface(uuid) on delete cascade,
    foreign key (`to`) references bridge_domain(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_virtual_machine_interface_port_tuple (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references virtual_machine_interface(uuid) on delete cascade,
    foreign key (`to`) references port_tuple(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_virtual_machine_interface_security_logging_object (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references virtual_machine_interface(uuid) on delete cascade,
    foreign key (`to`) references security_logging_object(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_virtual_machine_interface_virtual_machine (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references virtual_machine_interface(uuid) on delete cascade,
    foreign key (`to`) references virtual_machine(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_virtual_machine_interface_virtual_router (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references virtual_machine_interface(uuid) on delete cascade,
    foreign key (`to`) references virtual_router(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;

create table parent_virtual_machine_interface_project (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references virtual_machine_interface(uuid) on delete cascade,
    foreign key (`to`) references project(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;

create table parent_virtual_machine_interface_virtual_machine (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references virtual_machine_interface(uuid) on delete cascade,
    foreign key (`to`) references virtual_machine(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_virtual_machine_interface (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references virtual_machine_interface(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_virtual_machine_interface (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references virtual_machine_interface(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_virtual_machine_service_instance (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references virtual_machine(uuid) on delete cascade,
    foreign key (`to`) references service_instance(uuid) on delete cascade,
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_virtual_machine_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references virtual_machine(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;




create table tenant_share_virtual_machine (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references virtual_machine(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_virtual_machine (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references virtual_machine(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_virtual_network_multicast_policy (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references virtual_network(uuid) on delete cascade,
    foreign key (`to`) references multicast_policy(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_virtual_network_network_policy (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    `on_interval` varchar(255),
    `start_time` varchar(255),
    `end_time` varchar(255),
    `off_interval` varchar(255),
    `major` bigint,
    `minor` bigint,
    foreign key (`from`) references virtual_network(uuid) on delete cascade,
    foreign key (`to`) references network_policy(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_virtual_network_routing_policy (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    `sequence` varchar(255),
    foreign key (`from`) references virtual_network(uuid) on delete cascade,
    foreign key (`to`) references routing_policy(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_virtual_network_security_logging_object (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references virtual_network(uuid) on delete cascade,
    foreign key (`to`) references security_logging_object(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_virtual_network_bgpvpn (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references virtual_network(uuid) on delete cascade,
    foreign key (`to`) references bgpvpn(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_virtual_network_network_ipam (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    `route` json,
    `ipam_subnets` json,
    foreign key (`from`) references virtual_network(uuid) on delete cascade,
    foreign key (`to`) references network_ipam(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_virtual_network_qos_config (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references virtual_network(uuid) on delete cascade,
    foreign key (`to`) references qos_config(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_virtual_network_route_table (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references virtual_network(uuid) on delete cascade,
    foreign key (`to`) references route_table(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_virtual_network_virtual_network (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references virtual_network(uuid) on delete cascade,
    foreign key (`to`) references virtual_network(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_virtual_network_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references virtual_network(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_virtual_network_logical_router (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references virtual_network(uuid) on delete cascade,
    foreign key (`to`) references logical_router(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_virtual_network_project (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references virtual_network(uuid) on delete cascade,
    foreign key (`to`) references project(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_virtual_network (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references virtual_network(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_virtual_network (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references virtual_network(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_virtual_router_network_ipam (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    `allocation_pools` json,
    `subnet` json,
    foreign key (`from`) references virtual_router(uuid) on delete cascade,
    foreign key (`to`) references network_ipam(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_virtual_router_sub_cluster (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references virtual_router(uuid) on delete cascade,
    foreign key (`to`) references sub_cluster(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_virtual_router_virtual_machine (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references virtual_router(uuid) on delete cascade,
    foreign key (`to`) references virtual_machine(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_virtual_router_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references virtual_router(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_virtual_router_global_system_config (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references virtual_router(uuid) on delete cascade,
    foreign key (`to`) references global_system_config(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_virtual_router (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references virtual_router(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_virtual_router (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references virtual_router(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_appformix_bare_host_node_node (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references appformix_bare_host_node(uuid) on delete cascade,
    foreign key (`to`) references node(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_appformix_bare_host_node_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references appformix_bare_host_node(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_appformix_bare_host_node_appformix_cluster (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references appformix_bare_host_node(uuid) on delete cascade,
    foreign key (`to`) references appformix_cluster(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_appformix_bare_host_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references appformix_bare_host_node(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_appformix_bare_host_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references appformix_bare_host_node(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_appformix_cluster_openstack_cluster (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references appformix_cluster(uuid) on delete cascade,
    foreign key (`to`) references openstack_cluster(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_appformix_cluster_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references appformix_cluster(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_appformix_cluster_global_system_config (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references appformix_cluster(uuid) on delete cascade,
    foreign key (`to`) references global_system_config(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_appformix_cluster (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references appformix_cluster(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_appformix_cluster (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references appformix_cluster(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_appformix_compute_node_node (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references appformix_compute_node(uuid) on delete cascade,
    foreign key (`to`) references node(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_appformix_compute_node_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references appformix_compute_node(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_appformix_compute_node_appformix_cluster (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references appformix_compute_node(uuid) on delete cascade,
    foreign key (`to`) references appformix_cluster(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_appformix_compute_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references appformix_compute_node(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_appformix_compute_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references appformix_compute_node(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_appformix_controller_node_node (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references appformix_controller_node(uuid) on delete cascade,
    foreign key (`to`) references node(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_appformix_controller_node_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references appformix_controller_node(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_appformix_controller_node_appformix_cluster (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references appformix_controller_node(uuid) on delete cascade,
    foreign key (`to`) references appformix_cluster(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_appformix_controller_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references appformix_controller_node(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_appformix_controller_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references appformix_controller_node(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_appformix_openstack_node_node (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references appformix_openstack_node(uuid) on delete cascade,
    foreign key (`to`) references node(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_appformix_openstack_node_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references appformix_openstack_node(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_appformix_openstack_node_appformix_cluster (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references appformix_openstack_node(uuid) on delete cascade,
    foreign key (`to`) references appformix_cluster(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_appformix_openstack_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references appformix_openstack_node(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_appformix_openstack_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references appformix_openstack_node(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_baremetal_node_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references baremetal_node(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;




create table tenant_share_baremetal_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references baremetal_node(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_baremetal_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references baremetal_node(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_baremetal_port_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references baremetal_port(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;




create table tenant_share_baremetal_port (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references baremetal_port(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_baremetal_port (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references baremetal_port(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_cloud_credential (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references cloud(uuid) on delete cascade,
    foreign key (`to`) references credential(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_cloud_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references cloud(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;




create table tenant_share_cloud (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references cloud(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_cloud (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references cloud(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_cloud_account_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references cloud_account(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_cloud_account_cloud (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references cloud_account(uuid) on delete cascade,
    foreign key (`to`) references cloud(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_cloud_account (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references cloud_account(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_cloud_account (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references cloud_account(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_cloud_private_subnet_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references cloud_private_subnet(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_cloud_private_subnet_virtual_cloud (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references cloud_private_subnet(uuid) on delete cascade,
    foreign key (`to`) references virtual_cloud(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_cloud_private_subnet (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references cloud_private_subnet(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_cloud_private_subnet (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references cloud_private_subnet(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_cloud_project_cloud_user (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references cloud_project(uuid) on delete cascade,
    foreign key (`to`) references cloud_user(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_cloud_project_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references cloud_project(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_cloud_project_cloud_account (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references cloud_project(uuid) on delete cascade,
    foreign key (`to`) references cloud_account(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_cloud_project (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references cloud_project(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_cloud_project (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references cloud_project(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_cloud_region_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references cloud_region(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_cloud_region_cloud (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references cloud_region(uuid) on delete cascade,
    foreign key (`to`) references cloud(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_cloud_region (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references cloud_region(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_cloud_region (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references cloud_region(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_cloud_security_group_cloud_private_subnet (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references cloud_security_group(uuid) on delete cascade,
    foreign key (`to`) references cloud_private_subnet(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_cloud_security_group_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references cloud_security_group(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_cloud_security_group_virtual_cloud (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references cloud_security_group(uuid) on delete cascade,
    foreign key (`to`) references virtual_cloud(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_cloud_security_group (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references cloud_security_group(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_cloud_security_group (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references cloud_security_group(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_cloud_security_group_rule_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references cloud_security_group_rule(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_cloud_security_group_rule_cloud_security_group (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references cloud_security_group_rule(uuid) on delete cascade,
    foreign key (`to`) references cloud_security_group(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_cloud_security_group_rule (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references cloud_security_group_rule(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_cloud_security_group_rule (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references cloud_security_group_rule(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_cloud_user_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references cloud_user(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;




create table tenant_share_cloud_user (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references cloud_user(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_cloud_user (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references cloud_user(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_virtual_cloud_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references virtual_cloud(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_virtual_cloud_cloud_region (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references virtual_cloud(uuid) on delete cascade,
    foreign key (`to`) references cloud_region(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_virtual_cloud (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references virtual_cloud(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_virtual_cloud (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references virtual_cloud(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_contrail_analytics_database_node_node (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_analytics_database_node(uuid) on delete cascade,
    foreign key (`to`) references node(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_contrail_analytics_database_node_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_analytics_database_node(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_contrail_analytics_database_node_contrail_cluster (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_analytics_database_node(uuid) on delete cascade,
    foreign key (`to`) references contrail_cluster(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_contrail_analytics_database_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references contrail_analytics_database_node(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_contrail_analytics_database_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references contrail_analytics_database_node(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_contrail_analytics_node_node (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_analytics_node(uuid) on delete cascade,
    foreign key (`to`) references node(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_contrail_analytics_node_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_analytics_node(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_contrail_analytics_node_contrail_cluster (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_analytics_node(uuid) on delete cascade,
    foreign key (`to`) references contrail_cluster(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_contrail_analytics_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references contrail_analytics_node(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_contrail_analytics_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references contrail_analytics_node(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_contrail_cluster_kubernetes_cluster (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_cluster(uuid) on delete cascade,
    foreign key (`to`) references kubernetes_cluster(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_contrail_cluster_vcenter (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_cluster(uuid) on delete cascade,
    foreign key (`to`) references vcenter(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_contrail_cluster_appformix_cluster (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_cluster(uuid) on delete cascade,
    foreign key (`to`) references appformix_cluster(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_contrail_cluster_cloud (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_cluster(uuid) on delete cascade,
    foreign key (`to`) references cloud(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_contrail_cluster_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_cluster(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_contrail_cluster_openstack_cluster (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_cluster(uuid) on delete cascade,
    foreign key (`to`) references openstack_cluster(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_contrail_cluster_global_system_config (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_cluster(uuid) on delete cascade,
    foreign key (`to`) references global_system_config(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_contrail_cluster (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references contrail_cluster(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_contrail_cluster (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references contrail_cluster(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_contrail_config_database_node_node (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_config_database_node(uuid) on delete cascade,
    foreign key (`to`) references node(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_contrail_config_database_node_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_config_database_node(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_contrail_config_database_node_contrail_cluster (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_config_database_node(uuid) on delete cascade,
    foreign key (`to`) references contrail_cluster(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_contrail_config_database_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references contrail_config_database_node(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_contrail_config_database_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references contrail_config_database_node(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_contrail_config_node_node (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_config_node(uuid) on delete cascade,
    foreign key (`to`) references node(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_contrail_config_node_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_config_node(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_contrail_config_node_contrail_cluster (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_config_node(uuid) on delete cascade,
    foreign key (`to`) references contrail_cluster(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_contrail_config_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references contrail_config_node(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_contrail_config_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references contrail_config_node(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_contrail_control_node_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_control_node(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_contrail_control_node_node (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_control_node(uuid) on delete cascade,
    foreign key (`to`) references node(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_contrail_control_node_contrail_cluster (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_control_node(uuid) on delete cascade,
    foreign key (`to`) references contrail_cluster(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_contrail_control_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references contrail_control_node(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_contrail_control_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references contrail_control_node(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_contrail_multicloud_gw_node_node (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_multicloud_gw_node(uuid) on delete cascade,
    foreign key (`to`) references node(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_contrail_multicloud_gw_node_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_multicloud_gw_node(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_contrail_multicloud_gw_node_contrail_cluster (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_multicloud_gw_node(uuid) on delete cascade,
    foreign key (`to`) references contrail_cluster(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_contrail_multicloud_gw_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references contrail_multicloud_gw_node(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_contrail_multicloud_gw_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references contrail_multicloud_gw_node(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_contrail_service_node_node (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_service_node(uuid) on delete cascade,
    foreign key (`to`) references node(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_contrail_service_node_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_service_node(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_contrail_service_node_contrail_cluster (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_service_node(uuid) on delete cascade,
    foreign key (`to`) references contrail_cluster(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_contrail_service_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references contrail_service_node(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_contrail_service_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references contrail_service_node(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_contrail_storage_node_node (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_storage_node(uuid) on delete cascade,
    foreign key (`to`) references node(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_contrail_storage_node_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_storage_node(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_contrail_storage_node_contrail_cluster (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_storage_node(uuid) on delete cascade,
    foreign key (`to`) references contrail_cluster(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_contrail_storage_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references contrail_storage_node(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_contrail_storage_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references contrail_storage_node(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_contrail_vrouter_node_node (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_vrouter_node(uuid) on delete cascade,
    foreign key (`to`) references node(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_contrail_vrouter_node_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_vrouter_node(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_contrail_vrouter_node_contrail_cluster (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_vrouter_node(uuid) on delete cascade,
    foreign key (`to`) references contrail_cluster(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_contrail_vrouter_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references contrail_vrouter_node(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_contrail_vrouter_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references contrail_vrouter_node(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_contrail_webui_node_node (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_webui_node(uuid) on delete cascade,
    foreign key (`to`) references node(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_contrail_webui_node_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_webui_node(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_contrail_webui_node_contrail_cluster (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_webui_node(uuid) on delete cascade,
    foreign key (`to`) references contrail_cluster(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_contrail_webui_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references contrail_webui_node(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_contrail_webui_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references contrail_webui_node(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_contrail_ztp_dhcp_node_node (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_ztp_dhcp_node(uuid) on delete cascade,
    foreign key (`to`) references node(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_contrail_ztp_dhcp_node_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_ztp_dhcp_node(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_contrail_ztp_dhcp_node_contrail_cluster (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_ztp_dhcp_node(uuid) on delete cascade,
    foreign key (`to`) references contrail_cluster(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_contrail_ztp_dhcp_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references contrail_ztp_dhcp_node(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_contrail_ztp_dhcp_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references contrail_ztp_dhcp_node(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_contrail_ztp_tftp_node_node (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_ztp_tftp_node(uuid) on delete cascade,
    foreign key (`to`) references node(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_contrail_ztp_tftp_node_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_ztp_tftp_node(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_contrail_ztp_tftp_node_contrail_cluster (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references contrail_ztp_tftp_node(uuid) on delete cascade,
    foreign key (`to`) references contrail_cluster(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_contrail_ztp_tftp_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references contrail_ztp_tftp_node(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_contrail_ztp_tftp_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references contrail_ztp_tftp_node(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_credential_keypair (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references credential(uuid) on delete cascade,
    foreign key (`to`) references keypair(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_credential_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references credential(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_credential_global_system_config (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references credential(uuid) on delete cascade,
    foreign key (`to`) references global_system_config(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_credential (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references credential(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_credential (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references credential(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_dashboard_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references dashboard(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;




create table tenant_share_dashboard (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references dashboard(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_dashboard (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references dashboard(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_endpoint_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references endpoint(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_endpoint_contrail_cluster (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references endpoint(uuid) on delete cascade,
    foreign key (`to`) references contrail_cluster(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_endpoint (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references endpoint(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_endpoint (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references endpoint(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_flavor_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references flavor(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;




create table tenant_share_flavor (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references flavor(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_flavor (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references flavor(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_os_image_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references os_image(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;




create table tenant_share_os_image (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references os_image(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_os_image (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references os_image(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_keypair_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references keypair(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_keypair_global_system_config (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references keypair(uuid) on delete cascade,
    foreign key (`to`) references global_system_config(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_keypair (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references keypair(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_keypair (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references keypair(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_kubernetes_cluster_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references kubernetes_cluster(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_kubernetes_cluster_global_system_config (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references kubernetes_cluster(uuid) on delete cascade,
    foreign key (`to`) references global_system_config(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_kubernetes_cluster (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references kubernetes_cluster(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_kubernetes_cluster (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references kubernetes_cluster(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_kubernetes_kubemanager_node_node (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references kubernetes_kubemanager_node(uuid) on delete cascade,
    foreign key (`to`) references node(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_kubernetes_kubemanager_node_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references kubernetes_kubemanager_node(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_kubernetes_kubemanager_node_kubernetes_cluster (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references kubernetes_kubemanager_node(uuid) on delete cascade,
    foreign key (`to`) references kubernetes_cluster(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_kubernetes_kubemanager_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references kubernetes_kubemanager_node(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_kubernetes_kubemanager_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references kubernetes_kubemanager_node(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_kubernetes_master_node_node (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references kubernetes_master_node(uuid) on delete cascade,
    foreign key (`to`) references node(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_kubernetes_master_node_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references kubernetes_master_node(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_kubernetes_master_node_kubernetes_cluster (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references kubernetes_master_node(uuid) on delete cascade,
    foreign key (`to`) references kubernetes_cluster(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_kubernetes_master_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references kubernetes_master_node(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_kubernetes_master_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references kubernetes_master_node(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_kubernetes_node_node (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references kubernetes_node(uuid) on delete cascade,
    foreign key (`to`) references node(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_kubernetes_node_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references kubernetes_node(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_kubernetes_node_kubernetes_cluster (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references kubernetes_node(uuid) on delete cascade,
    foreign key (`to`) references kubernetes_cluster(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_kubernetes_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references kubernetes_node(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_kubernetes_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references kubernetes_node(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_node_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references node(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_node_credential (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references node(uuid) on delete cascade,
    foreign key (`to`) references credential(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_node_cloud_security_group (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references node(uuid) on delete cascade,
    foreign key (`to`) references cloud_security_group(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_node_cloud_private_subnet (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references node(uuid) on delete cascade,
    foreign key (`to`) references cloud_private_subnet(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_node_global_system_config (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references node(uuid) on delete cascade,
    foreign key (`to`) references global_system_config(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;

create table parent_node_virtual_cloud (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references node(uuid) on delete cascade,
    foreign key (`to`) references virtual_cloud(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references node(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references node(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_openstack_baremetal_node_node (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references openstack_baremetal_node(uuid) on delete cascade,
    foreign key (`to`) references node(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_openstack_baremetal_node_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references openstack_baremetal_node(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_openstack_baremetal_node_openstack_cluster (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references openstack_baremetal_node(uuid) on delete cascade,
    foreign key (`to`) references openstack_cluster(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_openstack_baremetal_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references openstack_baremetal_node(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_openstack_baremetal_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references openstack_baremetal_node(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_openstack_cluster_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references openstack_cluster(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_openstack_cluster_global_system_config (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references openstack_cluster(uuid) on delete cascade,
    foreign key (`to`) references global_system_config(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_openstack_cluster (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references openstack_cluster(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_openstack_cluster (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references openstack_cluster(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_openstack_compute_node_node (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references openstack_compute_node(uuid) on delete cascade,
    foreign key (`to`) references node(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_openstack_compute_node_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references openstack_compute_node(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_openstack_compute_node_openstack_cluster (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references openstack_compute_node(uuid) on delete cascade,
    foreign key (`to`) references openstack_cluster(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_openstack_compute_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references openstack_compute_node(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_openstack_compute_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references openstack_compute_node(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_openstack_control_node_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references openstack_control_node(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_openstack_control_node_node (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references openstack_control_node(uuid) on delete cascade,
    foreign key (`to`) references node(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_openstack_control_node_openstack_cluster (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references openstack_control_node(uuid) on delete cascade,
    foreign key (`to`) references openstack_cluster(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_openstack_control_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references openstack_control_node(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_openstack_control_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references openstack_control_node(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_openstack_monitoring_node_node (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references openstack_monitoring_node(uuid) on delete cascade,
    foreign key (`to`) references node(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_openstack_monitoring_node_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references openstack_monitoring_node(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_openstack_monitoring_node_openstack_cluster (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references openstack_monitoring_node(uuid) on delete cascade,
    foreign key (`to`) references openstack_cluster(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_openstack_monitoring_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references openstack_monitoring_node(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_openstack_monitoring_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references openstack_monitoring_node(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_openstack_network_node_node (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references openstack_network_node(uuid) on delete cascade,
    foreign key (`to`) references node(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_openstack_network_node_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references openstack_network_node(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_openstack_network_node_openstack_cluster (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references openstack_network_node(uuid) on delete cascade,
    foreign key (`to`) references openstack_cluster(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_openstack_network_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references openstack_network_node(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_openstack_network_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references openstack_network_node(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_openstack_storage_node_node (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references openstack_storage_node(uuid) on delete cascade,
    foreign key (`to`) references node(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_openstack_storage_node_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references openstack_storage_node(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_openstack_storage_node_openstack_cluster (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references openstack_storage_node(uuid) on delete cascade,
    foreign key (`to`) references openstack_cluster(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_openstack_storage_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references openstack_storage_node(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_openstack_storage_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references openstack_storage_node(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_port_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references port(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_port_node (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references port(uuid) on delete cascade,
    foreign key (`to`) references node(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_port (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references port(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_port (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references port(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_port_group_port (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references port_group(uuid) on delete cascade,
    foreign key (`to`) references port(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_port_group_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references port_group(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_port_group_node (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references port_group(uuid) on delete cascade,
    foreign key (`to`) references node(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_port_group (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references port_group(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_port_group (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references port_group(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_server_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references server(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;




create table tenant_share_server (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references server(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_server (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references server(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_vcenter_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references vcenter(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_vcenter_global_system_config (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references vcenter(uuid) on delete cascade,
    foreign key (`to`) references global_system_config(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_vcenter (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references vcenter(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_vcenter (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references vcenter(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_vcenter_compute_node (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references vcenter_compute(uuid) on delete cascade,
    foreign key (`to`) references node(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_vcenter_compute_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references vcenter_compute(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_vcenter_compute_vcenter (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references vcenter_compute(uuid) on delete cascade,
    foreign key (`to`) references vcenter(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_vcenter_compute (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references vcenter_compute(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_vcenter_compute (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references vcenter_compute(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_vcenter_plugin_node_node (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references vcenter_plugin_node(uuid) on delete cascade,
    foreign key (`to`) references node(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_vcenter_plugin_node_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references vcenter_plugin_node(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;



create table parent_vcenter_plugin_node_vcenter (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references vcenter_plugin_node(uuid) on delete cascade,
    foreign key (`to`) references vcenter(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table tenant_share_vcenter_plugin_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references vcenter_plugin_node(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_vcenter_plugin_node (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references vcenter_plugin_node(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_vpn_group_cloud (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references vpn_group(uuid) on delete cascade,
    foreign key (`to`) references cloud(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;


create table ref_vpn_group_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references vpn_group(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;




create table tenant_share_vpn_group (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references vpn_group(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_vpn_group (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references vpn_group(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;





create table ref_widget_tag (
    `from` varchar(255),
    `to` varchar(255),
    primary key (`from`,`to`),
    foreign key (`from`) references widget(uuid) on delete cascade,
    foreign key (`to`) references tag(uuid),
    index from_index (`from`)) CHARACTER SET utf8mb4;




create table tenant_share_widget (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references widget(uuid) on delete cascade,
    foreign key (`to`) references project(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;

create table domain_share_widget (
    `uuid` varchar(255),
    `to` varchar(255),
    primary key (`uuid`,`to`),
    `access` integer,
    foreign key (`uuid`) references widget(uuid) on delete cascade,
    foreign key (`to`) references domain(uuid) on delete cascade,
    index uuid_index (`uuid`),
    index to_index (`to`)
    ) CHARACTER SET utf8mb4;



