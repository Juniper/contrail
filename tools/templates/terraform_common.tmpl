{% autoescape off %}
// Automatically generated. DO NOT EDIT.
//

package contrail

import (
	"github.com/hashicorp/terraform/helper/schema"
	"log"
)

var _ = log.Printf // Avoid import errors if not used

var ContrailResourcesMap = map[string]*schema.Resource{
{% for schema in schemas %}{% if schema.Type != "abstract" and schema.ID %}
	"contrail_{{ schema.ID }}": Resource{{ schema.JSONSchema.GoName }}(),
{% endif %}{% endfor %}
}

func CheckTerraformMap(x interface{}) bool {
	//log.Printf("Checking %T => %#v", x, x)
	slice, ok := x.([]interface{})
	if ok && len(slice) > 0 {
		return true
	}
	switch x.(type) {
	case int8:
		return true
	case int16:
		return true
	case int32:
		return true
	case int64:
		return true
	case uint:
		return true
	case uint8:
		return true
	case uint16:
		return true
	case uint32:
		return true
	case uint64:
		return true
	case bool:
		return true
	case float32:
		return true
	case float64:
		return true
	case string:
		return true
	case int:
		return true
	}
	return false
}

{% endautoescape %}
