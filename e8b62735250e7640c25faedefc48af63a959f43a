{
  "comments": [
    {
      "key": {
        "uuid": "8c957610_ea54987d",
        "filename": "pkg/apisrv/keystone/client.go",
        "patchSetId": 7
      },
      "lineNbr": 15,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-11-14T13:36:47Z",
      "side": 1,
      "message": "Does this logger have to be a field? This forces us to have a NewClient function just for keeping the pointer to something that is required outside this struct.",
      "revId": "e8b62735250e7640c25faedefc48af63a959f43a",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75eb9318_de36d582",
        "filename": "pkg/apisrv/proxy.go",
        "patchSetId": 7
      },
      "lineNbr": 91,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-11-14T13:36:47Z",
      "side": 1,
      "message": "I find it hard to understand that first we append the endpoint suffix (L87) and then trim it here, but only if it\u0027s public. Is there a way to simplify this? Maybe we could defer adding the suffix?",
      "revId": "e8b62735250e7640c25faedefc48af63a959f43a",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77e216bc_681c5915",
        "filename": "pkg/apisrv/proxy.go",
        "patchSetId": 7
      },
      "lineNbr": 123,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-11-14T13:36:47Z",
      "side": 1,
      "message": "Why is this changed? From signature, this function looks like it\u0027s pure, but it\u0027s not. Please make it either a pure function or remove the request from return values.",
      "revId": "e8b62735250e7640c25faedefc48af63a959f43a",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4a9397c_b066f513",
        "filename": "pkg/apisrv/proxy_test.go",
        "patchSetId": 7
      },
      "lineNbr": 633,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-11-14T13:36:47Z",
      "side": 1,
      "message": "I see here 3 tests disguised as one. Such long tests are really hard to read, understand and maintain. IMO we could define function that creates keystoneServer and endpoint for provided status. Then this test could be even changed into a table driven test that gets slice of status codes as an argument and then tests request against given endpoint configuration.",
      "range": {
        "startLine": 586,
        "startChar": 1,
        "endLine": 633,
        "endChar": 2
      },
      "revId": "e8b62735250e7640c25faedefc48af63a959f43a",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72837506_13d53f8c",
        "filename": "pkg/proxy/middleware.go",
        "patchSetId": 7
      },
      "lineNbr": 44,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-11-14T13:36:47Z",
      "side": 1,
      "message": "We could have use ReverseProxy\u0027s ModifyResponse and ErrorHandler to solve this. The ModifyResponse function should return error if response status is 502 or 503 and ErrorHandler should be changed to handle those errors by notifying this for instead of the user.",
      "revId": "e8b62735250e7640c25faedefc48af63a959f43a",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e12ccc4c_28c96b76",
        "filename": "pkg/proxy/middleware.go",
        "patchSetId": 7
      },
      "lineNbr": 74,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-11-14T13:36:47Z",
      "side": 1,
      "message": "ditto: This func mutates the pointed struct and returns the pointer for no reason.",
      "revId": "e8b62735250e7640c25faedefc48af63a959f43a",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "262847b8_c3887521",
        "filename": "pkg/proxy/middleware_test.go",
        "patchSetId": 7
      },
      "lineNbr": 12,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-11-14T13:36:47Z",
      "side": 1,
      "message": "I have troubles understanding what this test tests",
      "revId": "e8b62735250e7640c25faedefc48af63a959f43a",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c0dea947_cc7b38c2",
        "filename": "pkg/proxy/middleware_test.go",
        "patchSetId": 7
      },
      "lineNbr": 17,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-11-14T13:36:47Z",
      "side": 1,
      "message": "Please use\n\n }{{\n ...\n }, {\n ... \n }}\n\nnotation",
      "range": {
        "startLine": 17,
        "startChar": 1,
        "endLine": 17,
        "endChar": 3
      },
      "revId": "e8b62735250e7640c25faedefc48af63a959f43a",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "038f3154_b9778323",
        "filename": "pkg/proxy/middleware_test.go",
        "patchSetId": 7
      },
      "lineNbr": 43,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-11-14T13:36:47Z",
      "side": 1,
      "message": "I\u0027m not sure if I got this, but this check overlaps with \"returns header containing data of wrapped response writer\" case.",
      "revId": "e8b62735250e7640c25faedefc48af63a959f43a",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72879875_89191536",
        "filename": "pkg/proxy/middleware_test.go",
        "patchSetId": 7
      },
      "lineNbr": 45,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-11-14T13:36:47Z",
      "side": 1,
      "message": "What is a purpose of this mutation?",
      "revId": "e8b62735250e7640c25faedefc48af63a959f43a",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    }
  ]
}