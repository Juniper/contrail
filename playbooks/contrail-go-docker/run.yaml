- hosts: all
  name: Build and test Juniper/contrail
  roles:
    - install-docker-daemon
  vars:
    workdir: /src
  tasks:

    - name: "Install docker-py"
      yum:
        name: python-docker-py
        state: present
      become: yes
      become_user: root

    - name: "Start runner docker container in background"
      docker_container:
        name: "{{ docker.0.name|default('runner') }}"
        image: "{{ docker.0.image }}"
        state: started
        env: "{{ docker.0.environment|default(omit) }}"
        network_mode: host
        command: sleep infinity
        volumes: 
          - "{{ ansible_env.HOME }}/{{ zuul.project.src_dir }}:{{ workdir }}"
      become: yes
      become_user: root

    - name: "Run required additional docker containers in background"
      docker_container:
        name: "{{ item.name|default(item.image.split('/')[-1].split(':')[0]) }}"
        image: "{{ item.image }}"
        state: started
        env: "{{ item.environment|default(omit) }}"
        network_mode: host
      with_items: "{{ docker[1:] }}"
      become: yes
      become_user: root

    - name: Set docker as default runner
      set_fact:
         exec: docker exec {{ docker.0.name|default('runner') }} bash -c

    - name: install mysql client
      shell: >
        {{ exec }} sudo apt install mysql-client
 
    - name: install deps
      shell: >
        {{ exec }} "cd /src && ./tools/deps.sh"

    - name: lint
      shell: >
        {{ exec }} "cd /src && ./tools/lint.sh"

    - name: wait for db
      shell: >
        {{ exec }} "dockerize -wait tcp://localhost:3306 -timeout 1m"

    - name: reset database
      shell: >
        {{ exec }} "cd /src && ./tools/reset_db.sh"

    - name: run test
      shell: >
        {{ exec }} "cd /src && make test"
