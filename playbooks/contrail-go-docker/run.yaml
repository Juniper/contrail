- hosts: builder
  name: Build and test Juniper/contrail
  roles:
    - zuul-include-vars # include variables exported from trusted context
    - yum-repos-prepare
    - install-pip-virtualenv
    - install-docker-daemon
    - role: add-insecure-registry
      new_registry: "{{ docker_registry.fqdn }}:5010"
  vars_files:
    - build-vars.yaml
  tasks:
    - name: Run build setup
      include: build-setup.yaml

    - name: Prepare directory for unittests logs
      become: yes
      file:
        path: "{{ logsdir }}"
        owner: "{{ ansible_env.USER }}"
        state: directory

    - name: Run build steps in loop
      include: build-step.yaml
      vars:
        docker_branch: "{{ zuul.branch | regex_replace('^R', '') }}"   # 1234 instead of R1234
      loop_control:
        label: "{{ item.name }}"
      with_items:
        - name: Install development dependencies
          command: make deps
          retries: 3
        - name: Run the source code generator
          command: make generate
        - name: Reset databases with latest schema and load initial data
          command: make reset_db
        - name: Build the source code
          command: make build
        - name: Run tests and linters on the source code and check vendored dependencies in parallel
          command: make -j test lint check
        - name: Generate docker images (depends on the nightly job to have already pushed contrail-base:branch-latest image)
          # After branching, make sure to push a contrail-base:1234.latest image (a nightly build does it), otherwise this step will fail.
          # Workaround is to manually change this step to use BASE_IMAGE_TAG='master.latest'
          command: make BASE_IMAGE_REGISTRY='{{ docker_registry.fqdn }}:5010' BASE_IMAGE_TAG='{{ docker_branch }}{{ distro }}.latest' SOURCEDIR='{{ sourcedir }}' ANSIBLE_DEPLOYER_BRANCH='{{ zuul.branch }}' CONTRAIL_API_CLIENT_BRANCH='{{ zuul.branch }}' docker

    - name: Fix files ownerships
      file:
        name: "{{ sourcedir }}"
        recurse: yes
        owner: "{{ ansible_env.USER }}"
      become: yes
      become_user: root
