{
  "comments": [
    {
      "key": {
        "uuid": "0ba32142_0ccdd59f",
        "filename": "pkg/proxy/reverse.go",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 558
      },
      "writtenOn": "2019-10-17T14:43:19Z",
      "side": 1,
      "message": "I also tried path.Join() - integration tests fail with that. Didn\u0027t investigate too much and kept implementation of original proxy from standard library.\nPlease fix at choice.",
      "revId": "caf93136b482cb7fe8e69918dc93ebf6b09ef019",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87fa3fb1_48454d69",
        "filename": "pkg/proxy/reverse.go",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-10-17T21:27:34Z",
      "side": 1,
      "message": "Done, in some cases the leading slash was missing.",
      "parentUuid": "0ba32142_0ccdd59f",
      "revId": "caf93136b482cb7fe8e69918dc93ebf6b09ef019",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "947a7024_3032b994",
        "filename": "pkg/proxy/reverse.go",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 558
      },
      "writtenOn": "2019-10-18T13:16:54Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "87fa3fb1_48454d69",
      "revId": "caf93136b482cb7fe8e69918dc93ebf6b09ef019",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d42bc152_a1272e10",
        "filename": "pkg/proxy/reverse_test.go",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 558
      },
      "writtenOn": "2019-10-17T14:43:19Z",
      "side": 1,
      "message": "Using external package proxy_test ensures testing through interfaces. Please adjust or explain your point.",
      "range": {
        "startLine": 1,
        "startChar": 8,
        "endLine": 1,
        "endChar": 13
      },
      "revId": "caf93136b482cb7fe8e69918dc93ebf6b09ef019",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56c3109e_cb7057f2",
        "filename": "pkg/proxy/reverse_test.go",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-10-17T20:58:18Z",
      "side": 1,
      "message": "I think we shouldn\u0027t use external test as a default. I was surprised that this struct had the external test while not having any unit test. For me external tests have different meaning (black box tests that don\u0027t check every if case or cyclic import hack). Those tests look more like white box tests for me.\n\nThe internal test package is a default behavior. I don\u0027t like when we diverge from default behavior without clear reason (I didn\u0027t know your intent until I saw your comment, I thought that this was to fix a cyclic dependency).\n\nAlso see Dave Chenney\u0027s opinion (however I don\u0027t think he clearly supports this one): https://dave.cheney.net/practical-go/presentations/qcon-china.html#_prefer_internal_tests_to_external_tests",
      "parentUuid": "d42bc152_a1272e10",
      "range": {
        "startLine": 1,
        "startChar": 8,
        "endLine": 1,
        "endChar": 13
      },
      "revId": "caf93136b482cb7fe8e69918dc93ebf6b09ef019",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7eb1b35_0a7ecfa9",
        "filename": "pkg/proxy/reverse_test.go",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-10-17T21:16:34Z",
      "side": 1,
      "message": "Alternatively we can change the tests to make them more component/integration test semantic by placing them in some different file like `integration_test.go`. I think I just don\u0027t like when test files created by adding *_test.go suffix to some go file (like reverse_test.go from reverse.go) don\u0027t contain internal unit tests.",
      "parentUuid": "56c3109e_cb7057f2",
      "range": {
        "startLine": 1,
        "startChar": 8,
        "endLine": 1,
        "endChar": 13
      },
      "revId": "caf93136b482cb7fe8e69918dc93ebf6b09ef019",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ee445f7_8c43643b",
        "filename": "pkg/proxy/reverse_test.go",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 558
      },
      "writtenOn": "2019-10-18T13:16:54Z",
      "side": 1,
      "message": "\u003e avoiding the bureaucracy of external testing.\n\nIn this case there is no added bureaucracy and it really doesn\u0027t matter if it is external or internal. It is still unit test. It is just matter of preference and habits. Let\u0027s leave it as internal test.",
      "parentUuid": "c7eb1b35_0a7ecfa9",
      "range": {
        "startLine": 1,
        "startChar": 8,
        "endLine": 1,
        "endChar": 13
      },
      "revId": "caf93136b482cb7fe8e69918dc93ebf6b09ef019",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da5ae8c6_946d1810",
        "filename": "pkg/proxy/reverse_test.go",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-10-18T18:09:22Z",
      "side": 1,
      "message": "I agree, when I was changing it was more clear to me, but after seeing your comment I realized how subjective is it. I guess it\u0027s a matter of convention that we agree on in the repo.",
      "parentUuid": "3ee445f7_8c43643b",
      "range": {
        "startLine": 1,
        "startChar": 8,
        "endLine": 1,
        "endChar": 13
      },
      "revId": "caf93136b482cb7fe8e69918dc93ebf6b09ef019",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    }
  ]
}