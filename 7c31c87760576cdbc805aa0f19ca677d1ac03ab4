{
  "comments": [
    {
      "key": {
        "uuid": "18a046ec_32458684",
        "filename": "pkg/ansible/client_interface.go",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-10-25T17:26:50Z",
      "side": 1,
      "message": "I think this shouldn\u0027t be moved. The interfaces should be as close to usage as possible. Files should be split by responsibilities, not by content types (interface/implementation).\n\nSee related: https://dave.cheney.net/practical-go/presentations/qcon-china.html#_consider_fewer_larger_packages",
      "revId": "7c31c87760576cdbc805aa0f19ca677d1ac03ab4",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6708ccc5_4a6306ec",
        "filename": "pkg/ansible/client_interface.go",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 850
      },
      "writtenOn": "2019-10-25T23:56:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "18a046ec_32458684",
      "revId": "7c31c87760576cdbc805aa0f19ca677d1ac03ab4",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2c643a24_453363d1",
        "filename": "pkg/ansible/docker_client.go",
        "patchSetId": 3
      },
      "lineNbr": 70,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-10-25T17:26:50Z",
      "side": 1,
      "message": "This func has very rich logging - it\u0027s ok, but it\u0027s also a bit too verbose for an `Info` level. I think those logs should be `Debug` since they allow track the execution, but may cause clutter in server\u0027s log.",
      "revId": "7c31c87760576cdbc805aa0f19ca677d1ac03ab4",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb809cd7_c85c3bc6",
        "filename": "pkg/ansible/docker_client.go",
        "patchSetId": 3
      },
      "lineNbr": 70,
      "author": {
        "id": 850
      },
      "writtenOn": "2019-10-25T23:56:31Z",
      "side": 1,
      "message": "Changed logs related with container manipulation to debug logs",
      "parentUuid": "2c643a24_453363d1",
      "revId": "7c31c87760576cdbc805aa0f19ca677d1ac03ab4",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d9430c00_505a41f8",
        "filename": "pkg/ansible/docker_client.go",
        "patchSetId": 3
      },
      "lineNbr": 76,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-10-25T17:26:50Z",
      "side": 1,
      "message": "This smells - do we run different code specifically for the test? Then what\u0027s the point of writing the code and tests?",
      "revId": "7c31c87760576cdbc805aa0f19ca677d1ac03ab4",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "511de345_aec9b1b0",
        "filename": "pkg/ansible/docker_client.go",
        "patchSetId": 3
      },
      "lineNbr": 76,
      "author": {
        "id": 850
      },
      "writtenOn": "2019-10-29T22:47:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d9430c00_505a41f8",
      "revId": "7c31c87760576cdbc805aa0f19ca677d1ac03ab4",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe156bff_c6fba8e9",
        "filename": "pkg/ansible/docker_client.go",
        "patchSetId": 3
      },
      "lineNbr": 79,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-10-25T17:26:50Z",
      "side": 1,
      "message": "This comment is redundant and should be removed, because line below gives us the same information (prepareDockerCmd is repeated and the type is known because we have a statically typed language ;) ).",
      "revId": "7c31c87760576cdbc805aa0f19ca677d1ac03ab4",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b1bce3a_27e5dfff",
        "filename": "pkg/ansible/docker_client.go",
        "patchSetId": 3
      },
      "lineNbr": 79,
      "author": {
        "id": 850
      },
      "writtenOn": "2019-10-25T23:56:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fe156bff_c6fba8e9",
      "revId": "7c31c87760576cdbc805aa0f19ca677d1ac03ab4",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "35e4f9b2_b8298a49",
        "filename": "pkg/ansible/docker_client.go",
        "patchSetId": 3
      },
      "lineNbr": 82,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-10-25T17:26:50Z",
      "side": 1,
      "message": "Similar to L79",
      "revId": "7c31c87760576cdbc805aa0f19ca677d1ac03ab4",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a66fbe29_41d892b6",
        "filename": "pkg/ansible/docker_client.go",
        "patchSetId": 3
      },
      "lineNbr": 82,
      "author": {
        "id": 850
      },
      "writtenOn": "2019-10-25T23:56:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "35e4f9b2_b8298a49",
      "revId": "7c31c87760576cdbc805aa0f19ca677d1ac03ab4",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "58ef5576_1a6150c4",
        "filename": "pkg/ansible/docker_client.go",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-10-25T17:26:50Z",
      "side": 1,
      "message": "Do we need to create a client during every Play call? Maybe we should create it in constructor.",
      "revId": "7c31c87760576cdbc805aa0f19ca677d1ac03ab4",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a933c204_f49fcc59",
        "filename": "pkg/ansible/docker_client.go",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 850
      },
      "writtenOn": "2019-10-25T23:56:31Z",
      "side": 1,
      "message": "In github.com/Juniper/contrail/pkg/deploy/cluster/cluster.go, a new client is created in this function:\n\nfunc newAnsibleDeployer(c *Cluster, cData *base.Data) *contrailAnsibleDeployer {\n\td :\u003d newDeployCluster(c, cData, \"contrail-ansible-deployer\")\n\treturn \u0026contrailAnsibleDeployer{\n\t\tdeployCluster: *d,\n\t\tansibleClient: ansible.NewCLIClient(\n\t\t\td.Reporter,\n\t\t\tc.config.LogFile,\n\t\t\td.getWorkingDir(),\n\t\t\tc.config.Test,\n\t\t),\n\t}\n}\n\nSo this ansibleClient in the future is supposed to hold both CLIClient and DockerClient structs (both implementation of Play interface in github.com/Juniper/contrail/pkg/ansible). To influence this function as little as possible, I think the docker client (from docker SDK) shouldn\u0027t be created in constructor, because there is an err variable involved in the returning value of client.NewClientWithOpts(), which should be handled in DockerClient\u0027s Play() function instead of when creating a new Ansible deployer.",
      "parentUuid": "58ef5576_1a6150c4",
      "revId": "7c31c87760576cdbc805aa0f19ca677d1ac03ab4",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ef18b4c_72af86fe",
        "filename": "pkg/ansible/docker_client.go",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 850
      },
      "writtenOn": "2019-10-29T22:47:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a933c204_f49fcc59",
      "revId": "7c31c87760576cdbc805aa0f19ca677d1ac03ab4",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f85f14b_1caa1adf",
        "filename": "pkg/ansible/docker_client.go",
        "patchSetId": 3
      },
      "lineNbr": 115,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-10-25T17:26:50Z",
      "side": 1,
      "message": "Please see comment in L194.",
      "revId": "7c31c87760576cdbc805aa0f19ca677d1ac03ab4",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee64c9a6_59cfc442",
        "filename": "pkg/ansible/docker_client.go",
        "patchSetId": 3
      },
      "lineNbr": 115,
      "author": {
        "id": 850
      },
      "writtenOn": "2019-10-25T23:56:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0f85f14b_1caa1adf",
      "revId": "7c31c87760576cdbc805aa0f19ca677d1ac03ab4",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "793fb4a5_195c4c1c",
        "filename": "pkg/ansible/docker_client.go",
        "patchSetId": 3
      },
      "lineNbr": 121,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-10-25T17:26:50Z",
      "side": 1,
      "message": "panic? Is that a reason to crash the server?",
      "revId": "7c31c87760576cdbc805aa0f19ca677d1ac03ab4",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aba91d3c_4c685e37",
        "filename": "pkg/ansible/docker_client.go",
        "patchSetId": 3
      },
      "lineNbr": 121,
      "author": {
        "id": 850
      },
      "writtenOn": "2019-10-25T23:56:31Z",
      "side": 1,
      "message": "Fixed it to return the err.",
      "parentUuid": "793fb4a5_195c4c1c",
      "revId": "7c31c87760576cdbc805aa0f19ca677d1ac03ab4",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cf3bb74d_41045923",
        "filename": "pkg/ansible/docker_client.go",
        "patchSetId": 3
      },
      "lineNbr": 144,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-10-25T17:26:50Z",
      "side": 1,
      "message": "This one log can be left as a Info level log.",
      "revId": "7c31c87760576cdbc805aa0f19ca677d1ac03ab4",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5eab698c_76b71cc6",
        "filename": "pkg/ansible/docker_client.go",
        "patchSetId": 3
      },
      "lineNbr": 144,
      "author": {
        "id": 850
      },
      "writtenOn": "2019-10-25T23:56:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cf3bb74d_41045923",
      "revId": "7c31c87760576cdbc805aa0f19ca677d1ac03ab4",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "314feb54_84a421c5",
        "filename": "pkg/ansible/docker_client.go",
        "patchSetId": 3
      },
      "lineNbr": 152,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-10-25T17:26:50Z",
      "side": 1,
      "message": "This is not neccesary, please use `:\u003d` instead.",
      "revId": "7c31c87760576cdbc805aa0f19ca677d1ac03ab4",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e369cbf9_81b40f3b",
        "filename": "pkg/ansible/docker_client.go",
        "patchSetId": 3
      },
      "lineNbr": 152,
      "author": {
        "id": 850
      },
      "writtenOn": "2019-10-25T23:56:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "314feb54_84a421c5",
      "revId": "7c31c87760576cdbc805aa0f19ca677d1ac03ab4",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a9f5cf0_5fc92972",
        "filename": "pkg/ansible/docker_client.go",
        "patchSetId": 3
      },
      "lineNbr": 181,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-10-25T17:26:50Z",
      "side": 1,
      "message": "Optional: Since the definition is short, I would inline it in the ContainerList call.",
      "range": {
        "startLine": 181,
        "startChar": 22,
        "endLine": 181,
        "endChar": 59
      },
      "revId": "7c31c87760576cdbc805aa0f19ca677d1ac03ab4",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9b90d4b_08be5b84",
        "filename": "pkg/ansible/docker_client.go",
        "patchSetId": 3
      },
      "lineNbr": 181,
      "author": {
        "id": 850
      },
      "writtenOn": "2019-10-25T23:56:31Z",
      "side": 1,
      "message": "Yeah, I agree, because you can see that in some of my function settings, I setup the parameters within the call. The things I am very curious about is that, can there be potential benefits (e.g. clear view of each parameters) if I list all parameters for a func call, no matter how trivial the init of the param is?",
      "parentUuid": "4a9f5cf0_5fc92972",
      "range": {
        "startLine": 181,
        "startChar": 22,
        "endLine": 181,
        "endChar": 59
      },
      "revId": "7c31c87760576cdbc805aa0f19ca677d1ac03ab4",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c031fba_6131f557",
        "filename": "pkg/ansible/docker_client.go",
        "patchSetId": 3
      },
      "lineNbr": 181,
      "author": {
        "id": 850
      },
      "writtenOn": "2019-10-29T22:47:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a9b90d4b_08be5b84",
      "range": {
        "startLine": 181,
        "startChar": 22,
        "endLine": 181,
        "endChar": 59
      },
      "revId": "7c31c87760576cdbc805aa0f19ca677d1ac03ab4",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1570cd30_51997141",
        "filename": "pkg/ansible/docker_client.go",
        "patchSetId": 3
      },
      "lineNbr": 181,
      "author": {
        "id": 558
      },
      "writtenOn": "2019-10-30T15:05:14Z",
      "side": 1,
      "message": "IMO it is best to avoid such temp variables and initialize everything inline or extracting to helper functions.\nThis is considered the best practice (see: https://refactoring.guru/inline-temp https://refactoring.guru/replace-temp-with-query). It emphasizes _what_ function does (lists containers, searches among them) instead of _how_ it does it (calculates containerListOpts, etc.).\n\nPlease remove containerListOpts.",
      "parentUuid": "5c031fba_6131f557",
      "range": {
        "startLine": 181,
        "startChar": 22,
        "endLine": 181,
        "endChar": 59
      },
      "revId": "7c31c87760576cdbc805aa0f19ca677d1ac03ab4",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0fc8410_eba5164b",
        "filename": "pkg/ansible/docker_client.go",
        "patchSetId": 3
      },
      "lineNbr": 181,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-10-30T15:47:58Z",
      "side": 1,
      "message": "Ok, so if that\u0027s not only me, I guess it should be inlined.\n\nBTW IMO this refactoring.guru page seems controversial and I disagree with the second link. I think that such functions shouldn\u0027t be extracted until they give some real value. The example they\u0027ve shown is invalid (they skipped the fact that the function still has to have access to the variables, either by params or methods) and I think is a way to produce cluttered Java code. Who are they to call themselves gurus? I see no references in the example, only subjective description.",
      "parentUuid": "1570cd30_51997141",
      "range": {
        "startLine": 181,
        "startChar": 22,
        "endLine": 181,
        "endChar": 59
      },
      "revId": "7c31c87760576cdbc805aa0f19ca677d1ac03ab4",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2bdf1279_2e3b0f22",
        "filename": "pkg/ansible/docker_client.go",
        "patchSetId": 3
      },
      "lineNbr": 181,
      "author": {
        "id": 558
      },
      "writtenOn": "2019-10-30T16:49:32Z",
      "side": 1,
      "message": "Ok, extracting functions is controversial.\nHowever, this place needs just inlining.",
      "parentUuid": "d0fc8410_eba5164b",
      "range": {
        "startLine": 181,
        "startChar": 22,
        "endLine": 181,
        "endChar": 59
      },
      "revId": "7c31c87760576cdbc805aa0f19ca677d1ac03ab4",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "663d2273_3c80c5f1",
        "filename": "pkg/ansible/docker_client.go",
        "patchSetId": 3
      },
      "lineNbr": 191,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-10-25T17:26:50Z",
      "side": 1,
      "message": "Because of the zero value this may be indistinguishable from found container. Please use pointer type or additional boolean value to tell user that  that a container was found.",
      "revId": "7c31c87760576cdbc805aa0f19ca677d1ac03ab4",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68173c27_4d6a6f2f",
        "filename": "pkg/ansible/docker_client.go",
        "patchSetId": 3
      },
      "lineNbr": 191,
      "author": {
        "id": 850
      },
      "writtenOn": "2019-10-25T23:56:31Z",
      "side": 1,
      "message": "Changed the return type to pointer.",
      "parentUuid": "663d2273_3c80c5f1",
      "revId": "7c31c87760576cdbc805aa0f19ca677d1ac03ab4",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f2d0b20_77421055",
        "filename": "pkg/ansible/docker_client.go",
        "patchSetId": 3
      },
      "lineNbr": 194,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-10-25T17:26:50Z",
      "side": 1,
      "message": "This name might be misleading, because in some cases we also create the container.\n\nIMO the function extraction was too early. The if (L197) should be left in the outer function, because we could clearly see the branching. We could even remove comment in L115, because the code would tell us the same.\n\nWhat I think should be extracted are the if-else bodies. They clearly have their own responsibilities. Example names would be createRunningContainer and startExistingContainer.",
      "revId": "7c31c87760576cdbc805aa0f19ca677d1ac03ab4",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e024e067_dd2557d3",
        "filename": "pkg/ansible/docker_client.go",
        "patchSetId": 3
      },
      "lineNbr": 194,
      "author": {
        "id": 850
      },
      "writtenOn": "2019-10-25T23:56:31Z",
      "side": 1,
      "message": "Yeah, it feels clearer to decouple the functionalities that way, thanks.",
      "parentUuid": "3f2d0b20_77421055",
      "revId": "7c31c87760576cdbc805aa0f19ca677d1ac03ab4",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "793f7ccc_e8b08b43",
        "filename": "pkg/ansible/docker_client.go",
        "patchSetId": 3
      },
      "lineNbr": 256,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-10-25T17:26:50Z",
      "side": 1,
      "message": "You can return here, the if below is redundant.",
      "range": {
        "startLine": 256,
        "startChar": 2,
        "endLine": 256,
        "endChar": 7
      },
      "revId": "7c31c87760576cdbc805aa0f19ca677d1ac03ab4",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10d45fb8_af737e00",
        "filename": "pkg/ansible/docker_client.go",
        "patchSetId": 3
      },
      "lineNbr": 256,
      "author": {
        "id": 850
      },
      "writtenOn": "2019-10-25T23:56:31Z",
      "side": 1,
      "message": "I get the reason why the if below if redundant. From my understanding, the if err !\u003d nil {} structure is kinda standard for Golang error handling, informing the reader how the code is gonna handle the error. So my though here is that by keeping this structure, the code is more expectable to readers. What do you think?",
      "parentUuid": "793f7ccc_e8b08b43",
      "range": {
        "startLine": 256,
        "startChar": 2,
        "endLine": 256,
        "endChar": 7
      },
      "revId": "7c31c87760576cdbc805aa0f19ca677d1ac03ab4",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8fb9f958_a20c80b8",
        "filename": "pkg/ansible/docker_client.go",
        "patchSetId": 3
      },
      "lineNbr": 256,
      "author": {
        "id": 850
      },
      "writtenOn": "2019-10-29T22:47:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "10d45fb8_af737e00",
      "range": {
        "startLine": 256,
        "startChar": 2,
        "endLine": 256,
        "endChar": 7
      },
      "revId": "7c31c87760576cdbc805aa0f19ca677d1ac03ab4",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9edee7d3_e5a3613f",
        "filename": "pkg/ansible/docker_client.go",
        "patchSetId": 3
      },
      "lineNbr": 256,
      "author": {
        "id": 558
      },
      "writtenOn": "2019-10-30T15:05:14Z",
      "side": 1,
      "message": "IMO, this temp is redundant.",
      "parentUuid": "8fb9f958_a20c80b8",
      "range": {
        "startLine": 256,
        "startChar": 2,
        "endLine": 256,
        "endChar": 7
      },
      "revId": "7c31c87760576cdbc805aa0f19ca677d1ac03ab4",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db3c884d_20f992df",
        "filename": "pkg/ansible/docker_client_test.go",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-10-25T17:26:50Z",
      "side": 1,
      "message": "Interface used in production code shouldn\u0027t be defined in test code.",
      "revId": "7c31c87760576cdbc805aa0f19ca677d1ac03ab4",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99d78909_ffc532cd",
        "filename": "pkg/ansible/docker_client_test.go",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 850
      },
      "writtenOn": "2019-10-25T23:56:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "db3c884d_20f992df",
      "revId": "7c31c87760576cdbc805aa0f19ca677d1ac03ab4",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f156c3da_e1301e39",
        "filename": "pkg/ansible/docker_client_test.go",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-10-25T17:26:50Z",
      "side": 1,
      "message": "This mock is a little bit too \"smart\". It has it\u0027s own logic that can introduce it\u0027s own bugs. I think the mock should store the predefined results and leave assertions to the test code.",
      "revId": "7c31c87760576cdbc805aa0f19ca677d1ac03ab4",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "980a97f9_7fc4599b",
        "filename": "pkg/ansible/docker_client_test.go",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 850
      },
      "writtenOn": "2019-10-29T22:47:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f156c3da_e1301e39",
      "revId": "7c31c87760576cdbc805aa0f19ca677d1ac03ab4",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    }
  ]
}