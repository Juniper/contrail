# Database configuration. MySQL/PostgreSQL supported
database:
    # MySQL example
    type: mysql 
    dialect: mysql
    host: localhost
    user: root
    password: contrail123
    name: contrail_test
    # Postgres example
    # connection: "user=root dbname=contrail_test sslmode=disable"
    # type: pgx 
    # dialect: postgres

    # Max Open Connections for DB Server
    max_open_conn: 100
    connection_retries: 10
    retry_period: 3

etcd:
  endpoints:
    - localhost:2379
  username: ""
  password: ""
  path: contrail

# Log Level
log_level: debug

# Server configuration
server:
  enabled: true
  read_timeout: 10
  write_timeout: 5
  log_api: true 
  address: ":9091"

  # TLS Configuration
  tls:
      enabled: false
      key_file: tools/server.key
      cert_file: tools/server.crt

  # Enable GRPC or not
  enable_grpc: false

  # Static file config
  # key: URL path
  # value: file path. (absolute path recommended in production)
  static_files:
      public: public

  # API Proxy configuration
  # key: URL path
  # value: String list of backend host
  proxy:
      /contrail:
      - http://localhost:8082

  notify_etcd: true

# Keystone configuration
#keystone:
#    local: true # Enable local keystone v3. This is only for testing now.
#    assignment:
#        type: static
#        file: sample/keystone.yml
#    store:
#        type: memory
#        expire: 3600
#    authurl: http://localhost:9091/v3

# disable authentication with no_auth true and comment out keystone configuraion.
no_auth: true
insecure: true

watcher:
  enabled: false
  storage: json

client:
  id: alice
  password: alice_password
  project_id: admin
  schema_root: /public
  endpoint: http://localhost:9091

agent:
  enabled: true
  backend: file
  watcher: polling
  tasks:
  - schema_id: virtual_network 
    common:
    - vars:
        dir: "./work/virtual_networks/"
    on_create:
    - command: mkdir -p "{{ dir }}"
    - save:
        dest: "{{ dir }}/{{ resource.uuid }}.yaml"
        format: yaml
    # - command: pwd
    #   args:
    #     chdir: "{{ dir }}"
    # - command: date
    # - template:
    #     src: "./agent/cluster.tmpl"
    #     dest: "{{ dir }}/cluster.txt"
    - command: echo created
    #  register: date
    on_update:
    - command: "echo updated"
    on_delete:
    - command: "echo deleted"
    - command: "rm -rf {{ dir }}/virtual_networks/{{ resource.uuid }}.yaml"

compilation:
  enabled: true
  # Global configuration
  plugin_directory: 'etc/plugins/'
  number_of_workers: 4
  max_job_queue_len: 5
  msg_queue_lock_time: 30
  msg_index_string: 'MsgIndex'
  read_lock_string: "MsgReadLock"
  master_election: true

  # Plugin configuration
  plugin:
      handlers:
          create_handler: 'HandleCreate'
          update_handler: 'HandleUpdate'
          delete_handler: 'HandleDelete'
