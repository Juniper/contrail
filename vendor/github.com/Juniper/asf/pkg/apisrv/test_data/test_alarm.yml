name: Alarm Test
description:  basic alarm test
cleanup:
  - path: /alarm/test_empty_alarm
  - path: /alarm/test_full_alarm
  - path: /alarm/test_alarm_range_correct
  - path: /alarm/test_alarm_range_incorrect
  - path: /alarm/test_alarm_json_uve
  - path: /project/admin_alarm_project_uuid
test_data:

  admin_project: &admin_project_alarm
    uuid: admin_alarm_project_uuid
    name: admin_alarm_project
    parent_type: domain
    parent_uuid: beefbeef-beef-beef-beef-beefbeef0002
    quota: {}

  common_data: &common_data
    alarm_severity: 0
    uve_keys:
    parent_type: project
    parent_uuid: admin_alarm_project_uuid

  empty_alarm: &empty_alarm
    alarm_rules:
    <<: *common_data
    uuid: test_empty_alarm
    display_name: test_empty_alarm
    fq_name: ["default-domain", "admin_alarm_project", "empty_alarm"]

  valid_alarm: &valid_alarm
    alarm_rules:
      or_list:
        - and_list:
            - operation: "=="
              operand1: "test.param"
              operand2:
                json_value: "\"test\""
    <<: *common_data
    uuid: test_valid_alarm
    display_name: test_valid_alarm
    fq_name: ["default-domain", "admin_alarm_project", "valid_alarm"]

  alarm_range_correct_without_uuid: &alarm_range_correct_without_uuid
    alarm_rules:
      or_list:
        - and_list:
            - operation: "range"
              operand1: "test.param"
              operand2:
                json_value: "[0, 1]"
    <<: *common_data
    display_name: test_alarm_range_correct
    fq_name: ["default-domain", "admin_alarm_project", "alarm_range_correct"]

  alarm_range_correct: &alarm_range_correct
    <<: *alarm_range_correct_without_uuid
    uuid: test_alarm_range_correct

  alarm_range_incorrect: &alarm_range_incorrect
    alarm_rules:
      or_list:
        - and_list:
            - operation: "range"
              operand1: "test.param"
              operand2:
                json_value: "[4, 1]"

    <<: *common_data
    uuid: test_alarm_range_incorrect
    display_name: test_alarm_range_incorrect
    fq_name: ["default-domain", "admin_alarm_project", "alarm_range_incorrect"]

  alarm_json_uve: &alarm_json_uve
    alarm_rules:
      or_list:
        - and_list:
            - operation: "=="
              operand1: "test.param"
              operand2:
                json_value: "\"test\""
                uve_attribute: "\"test\""
    <<: *common_data
    uuid: test_alarm_json_uve
    display_name: test_alarm_json_uve
    fq_name: ["default-domain", "admin_alarm_project", "alarm_json_uve"]

  alarm_demo_without_perms2: &alarm_demo_without_perms2
    uuid: test_alarm_demo
    display_name: testAlarm
    fq_name: ["default-domain", "admin_alarm_project", "testAlarm"]
    alarm_severity: 1
    uve_keys:
      uve_key:
        - "VirtualNetwork"
    id_perms:
      enable: true
      description: "Test alarm description"
    parent_type: project

  demo_perms2: &demo_perms2
    global_access: 0
    owner_access: 7

  alarm_demo: &alarm_demo
    <<: *alarm_demo_without_perms2
    perms2: *demo_perms2

clients:
  default:
    id: alice
    password: alice_password
    insecure: true
    scope:
      project:
        name: admin

workflow:
  - name: create project
    request:
      path: /projects
      method: POST
      expected:
        - 200
      data:
        project: *admin_project_alarm
    expect:
      project: *admin_project_alarm

  - name: create empty alarm
    request:
      path: /alarms
      method: POST
      expected:
        - 400
      data:
        alarm: *empty_alarm
    expect:
      alarm: null

  - name: create valid alarm
    request:
      path: /alarms
      method: POST
      expected:
        - 200
      data:
        alarm: *valid_alarm
    expect:
      alarm: *valid_alarm

  - name: create alarm with correct range
    request:
      path: /alarms
      method: POST
      expected:
        - 200
      data:
        alarm: *alarm_range_correct
    expect:
      alarm: *alarm_range_correct

  - name: create alarm with incorrect range
    request:
      path: /alarms
      method: POST
      expected:
        - 400
      data:
        alarm: *alarm_range_incorrect
    expect:
      alarm: null

  - name: create alarm with json and uve
    request:
      path: /alarms
      method: POST
      expected:
        - 400
      data:
        alarm: *alarm_json_uve
    expect:
      alarm: null

  - name: create alarm demo
    request:
      path: /alarms
      method: POST
      expected:
        - 200
      data:
        alarm:
          <<: *alarm_demo_without_perms2
          alarm_rules:
            or_list:
              - and_list:
                  - operation: "=="
                    operand1: "Field.to.check"
                    operand2:
                      uve_attribute: "value"
                    variables: []
          perms2:
            <<: *demo_perms2
            share: []
          tag_refs: []
    expect:
      alarm:
       <<: *alarm_demo
       alarm_rules:
         or_list:
           - and_list:
               - operation: "=="
                 operand1: "Field.to.check"
                 operand2:
                   uve_attribute: "value"

  - name: update valid alarm
    request:
      path: /alarm/test_valid_alarm
      method: PUT
      expected:
        - 200
      data:
        alarm: *alarm_range_correct
    expect:
      alarm:
        <<: *alarm_range_correct_without_uuid
        uuid: test_valid_alarm

  - name: update with emtpy rules
    request:
      path: /alarm/test_valid_alarm
      method: PUT
      expected:
        - 400
      data:
        alarm: *empty_alarm
    expect:
      alarm: null

  - name: delete full alarm
    request:
      path: /alarm/test_valid_alarm
      method: DELETE
      expected:
        - 200
    expect: null

  - name: delete alarm correct range
    request:
      path: /alarm/test_alarm_range_correct
      method: DELETE
      expected:
        - 200
    expect: null

  - name: delete alarm demo
    request:
      path: /alarm/test_alarm_demo
      method: DELETE
      expected:
        - 200
    expect: null
