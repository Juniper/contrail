// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: int_pool.proto

package intpool

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	types "github.com/gogo/protobuf/types"
	grpc "google.golang.org/grpc"
	math "math"
	reflect "reflect"
	strings "strings"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type GetIntOwnerRequest struct {
	Pool  string `protobuf:"bytes,1,opt,name=Pool,proto3" json:"pool"`
	Value int64  `protobuf:"varint,2,opt,name=Value,proto3" json:"value"`
}

func (m *GetIntOwnerRequest) Reset()      { *m = GetIntOwnerRequest{} }
func (*GetIntOwnerRequest) ProtoMessage() {}
func (*GetIntOwnerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_61cad665b59d22e5, []int{0}
}
func (m *GetIntOwnerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetIntOwnerRequest.Unmarshal(m, b)
}
func (m *GetIntOwnerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetIntOwnerRequest.Marshal(b, m, deterministic)
}
func (m *GetIntOwnerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetIntOwnerRequest.Merge(m, src)
}
func (m *GetIntOwnerRequest) XXX_Size() int {
	return xxx_messageInfo_GetIntOwnerRequest.Size(m)
}
func (m *GetIntOwnerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetIntOwnerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetIntOwnerRequest proto.InternalMessageInfo

func (m *GetIntOwnerRequest) GetPool() string {
	if m != nil {
		return m.Pool
	}
	return ""
}

func (m *GetIntOwnerRequest) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type GetIntOwnerResponse struct {
	Owner string `protobuf:"bytes,1,opt,name=Owner,proto3" json:"owner"`
}

func (m *GetIntOwnerResponse) Reset()      { *m = GetIntOwnerResponse{} }
func (*GetIntOwnerResponse) ProtoMessage() {}
func (*GetIntOwnerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_61cad665b59d22e5, []int{1}
}
func (m *GetIntOwnerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetIntOwnerResponse.Unmarshal(m, b)
}
func (m *GetIntOwnerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetIntOwnerResponse.Marshal(b, m, deterministic)
}
func (m *GetIntOwnerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetIntOwnerResponse.Merge(m, src)
}
func (m *GetIntOwnerResponse) XXX_Size() int {
	return xxx_messageInfo_GetIntOwnerResponse.Size(m)
}
func (m *GetIntOwnerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetIntOwnerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetIntOwnerResponse proto.InternalMessageInfo

func (m *GetIntOwnerResponse) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

type CreateIntPoolRequest struct {
	Pool  string `protobuf:"bytes,1,opt,name=Pool,proto3" json:"pool"`
	Start int64  `protobuf:"varint,2,opt,name=Start,proto3" json:"start"`
	End   int64  `protobuf:"varint,3,opt,name=End,proto3" json:"end"`
}

func (m *CreateIntPoolRequest) Reset()      { *m = CreateIntPoolRequest{} }
func (*CreateIntPoolRequest) ProtoMessage() {}
func (*CreateIntPoolRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_61cad665b59d22e5, []int{2}
}
func (m *CreateIntPoolRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateIntPoolRequest.Unmarshal(m, b)
}
func (m *CreateIntPoolRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateIntPoolRequest.Marshal(b, m, deterministic)
}
func (m *CreateIntPoolRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateIntPoolRequest.Merge(m, src)
}
func (m *CreateIntPoolRequest) XXX_Size() int {
	return xxx_messageInfo_CreateIntPoolRequest.Size(m)
}
func (m *CreateIntPoolRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateIntPoolRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateIntPoolRequest proto.InternalMessageInfo

func (m *CreateIntPoolRequest) GetPool() string {
	if m != nil {
		return m.Pool
	}
	return ""
}

func (m *CreateIntPoolRequest) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *CreateIntPoolRequest) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

type DeleteIntPoolRequest struct {
	Pool string `protobuf:"bytes,1,opt,name=Pool,proto3" json:"pool"`
}

func (m *DeleteIntPoolRequest) Reset()      { *m = DeleteIntPoolRequest{} }
func (*DeleteIntPoolRequest) ProtoMessage() {}
func (*DeleteIntPoolRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_61cad665b59d22e5, []int{3}
}
func (m *DeleteIntPoolRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteIntPoolRequest.Unmarshal(m, b)
}
func (m *DeleteIntPoolRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteIntPoolRequest.Marshal(b, m, deterministic)
}
func (m *DeleteIntPoolRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteIntPoolRequest.Merge(m, src)
}
func (m *DeleteIntPoolRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteIntPoolRequest.Size(m)
}
func (m *DeleteIntPoolRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteIntPoolRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteIntPoolRequest proto.InternalMessageInfo

func (m *DeleteIntPoolRequest) GetPool() string {
	if m != nil {
		return m.Pool
	}
	return ""
}

type AllocateIntRequest struct {
	Pool  string `protobuf:"bytes,1,opt,name=Pool,proto3" json:"Pool,omitempty"`
	Owner string `protobuf:"bytes,2,opt,name=Owner,proto3" json:"owner"`
}

func (m *AllocateIntRequest) Reset()      { *m = AllocateIntRequest{} }
func (*AllocateIntRequest) ProtoMessage() {}
func (*AllocateIntRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_61cad665b59d22e5, []int{4}
}
func (m *AllocateIntRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllocateIntRequest.Unmarshal(m, b)
}
func (m *AllocateIntRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllocateIntRequest.Marshal(b, m, deterministic)
}
func (m *AllocateIntRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllocateIntRequest.Merge(m, src)
}
func (m *AllocateIntRequest) XXX_Size() int {
	return xxx_messageInfo_AllocateIntRequest.Size(m)
}
func (m *AllocateIntRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AllocateIntRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AllocateIntRequest proto.InternalMessageInfo

func (m *AllocateIntRequest) GetPool() string {
	if m != nil {
		return m.Pool
	}
	return ""
}

func (m *AllocateIntRequest) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

type AllocateIntResponse struct {
	Value int64 `protobuf:"varint,1,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (m *AllocateIntResponse) Reset()      { *m = AllocateIntResponse{} }
func (*AllocateIntResponse) ProtoMessage() {}
func (*AllocateIntResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_61cad665b59d22e5, []int{5}
}
func (m *AllocateIntResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllocateIntResponse.Unmarshal(m, b)
}
func (m *AllocateIntResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllocateIntResponse.Marshal(b, m, deterministic)
}
func (m *AllocateIntResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllocateIntResponse.Merge(m, src)
}
func (m *AllocateIntResponse) XXX_Size() int {
	return xxx_messageInfo_AllocateIntResponse.Size(m)
}
func (m *AllocateIntResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AllocateIntResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AllocateIntResponse proto.InternalMessageInfo

func (m *AllocateIntResponse) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

type SetIntRequest struct {
	Pool  string `protobuf:"bytes,1,opt,name=Pool,proto3" json:"Pool,omitempty"`
	Value int64  `protobuf:"varint,2,opt,name=Value,proto3" json:"Value,omitempty"`
	Owner string `protobuf:"bytes,3,opt,name=Owner,proto3" json:"owner"`
}

func (m *SetIntRequest) Reset()      { *m = SetIntRequest{} }
func (*SetIntRequest) ProtoMessage() {}
func (*SetIntRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_61cad665b59d22e5, []int{6}
}
func (m *SetIntRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetIntRequest.Unmarshal(m, b)
}
func (m *SetIntRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetIntRequest.Marshal(b, m, deterministic)
}
func (m *SetIntRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetIntRequest.Merge(m, src)
}
func (m *SetIntRequest) XXX_Size() int {
	return xxx_messageInfo_SetIntRequest.Size(m)
}
func (m *SetIntRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetIntRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetIntRequest proto.InternalMessageInfo

func (m *SetIntRequest) GetPool() string {
	if m != nil {
		return m.Pool
	}
	return ""
}

func (m *SetIntRequest) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *SetIntRequest) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

type DeallocateIntRequest struct {
	Pool  string `protobuf:"bytes,1,opt,name=Pool,proto3" json:"Pool,omitempty"`
	Value int64  `protobuf:"varint,2,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (m *DeallocateIntRequest) Reset()      { *m = DeallocateIntRequest{} }
func (*DeallocateIntRequest) ProtoMessage() {}
func (*DeallocateIntRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_61cad665b59d22e5, []int{7}
}
func (m *DeallocateIntRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeallocateIntRequest.Unmarshal(m, b)
}
func (m *DeallocateIntRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeallocateIntRequest.Marshal(b, m, deterministic)
}
func (m *DeallocateIntRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeallocateIntRequest.Merge(m, src)
}
func (m *DeallocateIntRequest) XXX_Size() int {
	return xxx_messageInfo_DeallocateIntRequest.Size(m)
}
func (m *DeallocateIntRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeallocateIntRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeallocateIntRequest proto.InternalMessageInfo

func (m *DeallocateIntRequest) GetPool() string {
	if m != nil {
		return m.Pool
	}
	return ""
}

func (m *DeallocateIntRequest) GetValue() int64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func init() {
	proto.RegisterType((*GetIntOwnerRequest)(nil), "github.com.Juniper.asf.pkg.intpool.GetIntOwnerRequest")
	proto.RegisterType((*GetIntOwnerResponse)(nil), "github.com.Juniper.asf.pkg.intpool.GetIntOwnerResponse")
	proto.RegisterType((*CreateIntPoolRequest)(nil), "github.com.Juniper.asf.pkg.intpool.CreateIntPoolRequest")
	proto.RegisterType((*DeleteIntPoolRequest)(nil), "github.com.Juniper.asf.pkg.intpool.DeleteIntPoolRequest")
	proto.RegisterType((*AllocateIntRequest)(nil), "github.com.Juniper.asf.pkg.intpool.AllocateIntRequest")
	proto.RegisterType((*AllocateIntResponse)(nil), "github.com.Juniper.asf.pkg.intpool.AllocateIntResponse")
	proto.RegisterType((*SetIntRequest)(nil), "github.com.Juniper.asf.pkg.intpool.SetIntRequest")
	proto.RegisterType((*DeallocateIntRequest)(nil), "github.com.Juniper.asf.pkg.intpool.DeallocateIntRequest")
}

func init() { proto.RegisterFile("int_pool.proto", fileDescriptor_61cad665b59d22e5) }

var fileDescriptor_61cad665b59d22e5 = []byte{
	// 549 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0xbf, 0x6f, 0xd3, 0x40,
	0x14, 0x3e, 0xd7, 0x4d, 0xa1, 0x87, 0x52, 0xa1, 0x6b, 0x84, 0xa2, 0x80, 0xce, 0x91, 0xc5, 0x90,
	0xe9, 0x22, 0x40, 0x2a, 0x0c, 0x48, 0xa8, 0x81, 0x08, 0x05, 0x09, 0x51, 0x39, 0x82, 0x01, 0x21,
	0x21, 0xa7, 0xb9, 0x9a, 0x08, 0xd7, 0x67, 0xec, 0x33, 0x3f, 0x16, 0xc4, 0xc0, 0xc0, 0xc8, 0x9f,
	0xc0, 0xc8, 0x9f, 0xc1, 0xc8, 0x98, 0xb1, 0x93, 0x55, 0x5f, 0xb6, 0x4c, 0x8c, 0x8c, 0xe8, 0xee,
	0x62, 0x1a, 0x2b, 0x29, 0x71, 0xd8, 0xee, 0xbd, 0x7b, 0xef, 0x7d, 0xdf, 0x7b, 0xef, 0x7b, 0x70,
	0x67, 0x14, 0xf0, 0x97, 0x21, 0x63, 0x3e, 0x09, 0x23, 0xc6, 0x19, 0xb2, 0xbd, 0x11, 0x7f, 0x95,
	0x0c, 0xc8, 0x21, 0x3b, 0x26, 0x8f, 0x92, 0x60, 0x14, 0xd2, 0x88, 0xb8, 0xf1, 0x11, 0x09, 0x5f,
	0x7b, 0x64, 0x14, 0x70, 0x19, 0xd9, 0xa8, 0x79, 0xcc, 0x63, 0x2a, 0xbc, 0x2d, 0x5f, 0x3a, 0xb3,
	0x71, 0xd5, 0x63, 0xcc, 0xf3, 0x69, 0x5b, 0x59, 0x83, 0xe4, 0xa8, 0x4d, 0x8f, 0x43, 0xfe, 0x41,
	0x7f, 0xda, 0x43, 0x88, 0x1e, 0x52, 0xde, 0x0b, 0xf8, 0x93, 0x77, 0x01, 0x8d, 0x1c, 0xfa, 0x26,
	0xa1, 0x31, 0x47, 0xd7, 0xe1, 0xe6, 0x01, 0x63, 0x7e, 0xdd, 0x68, 0x1a, 0xad, 0xed, 0xce, 0x65,
	0x91, 0x5a, 0xca, 0x9e, 0xa6, 0xd6, 0xa6, 0x04, 0x72, 0x94, 0x85, 0x5a, 0xb0, 0xf2, 0xcc, 0xf5,
	0x13, 0x5a, 0xdf, 0x68, 0x1a, 0x2d, 0xb3, 0x83, 0x44, 0x6a, 0x69, 0xc7, 0x34, 0xb5, 0x2a, 0x6f,
	0xe5, 0xc3, 0xd1, 0xb6, 0x7d, 0x0f, 0xee, 0x16, 0x50, 0xe2, 0x90, 0x05, 0x31, 0x95, 0x05, 0x94,
	0x63, 0x86, 0xa3, 0x0a, 0x28, 0x87, 0x2c, 0xc0, 0x54, 0xa8, 0xb6, 0xed, 0x2f, 0x06, 0xac, 0xdd,
	0x8f, 0xa8, 0xcb, 0x69, 0x2f, 0xe0, 0x12, 0x7c, 0x6d, 0xa6, 0x7d, 0xee, 0x46, 0x7c, 0x9e, 0xa9,
	0x72, 0x48, 0xa0, 0x58, 0x3e, 0x1c, 0x6d, 0xa3, 0x26, 0x34, 0xbb, 0xc1, 0xb0, 0x6e, 0xaa, 0xb8,
	0x1d, 0x91, 0x5a, 0xd2, 0x9c, 0xa6, 0x96, 0x49, 0x83, 0xa1, 0x23, 0xdf, 0xf6, 0x5d, 0x58, 0x7b,
	0x40, 0x7d, 0xfa, 0x7f, 0x4c, 0xec, 0x17, 0x10, 0xed, 0xfb, 0x3e, 0x3b, 0xd4, 0x9d, 0xe4, 0xb9,
	0xd7, 0x0a, 0xb9, 0x17, 0xf3, 0xdc, 0x33, 0xf6, 0x7a, 0x4c, 0x1b, 0xab, 0xc6, 0xb4, 0x07, 0x77,
	0x0b, 0xd5, 0x67, 0x73, 0xb6, 0xf2, 0x45, 0x19, 0xaa, 0xad, 0xed, 0xbf, 0x8b, 0xca, 0xf7, 0xf3,
	0x1e, 0x56, 0xfb, 0x6a, 0x3f, 0xe5, 0x08, 0x59, 0xc5, 0xc5, 0x2f, 0xd4, 0x3b, 0x63, 0x6c, 0xae,
	0x62, 0xfc, 0x54, 0x4e, 0xd3, 0x5d, 0x77, 0x22, 0xab, 0x08, 0xdc, 0xfc, 0x5c, 0x81, 0x9b, 0xbd,
	0x83, 0xfd, 0xc7, 0xc8, 0x85, 0xd5, 0x82, 0x6e, 0xd0, 0x1d, 0xb2, 0xfa, 0x90, 0xc8, 0x32, 0xa9,
	0x35, 0xae, 0x10, 0x7d, 0x48, 0x24, 0x3f, 0x24, 0xd2, 0x95, 0x87, 0x84, 0x3e, 0xc2, 0x4b, 0x73,
	0xe2, 0x46, 0x7b, 0x65, 0x00, 0x16, 0x6f, 0xae, 0x71, 0x7b, 0xed, 0xbc, 0xd9, 0x76, 0x5d, 0x58,
	0x2d, 0x08, 0xb2, 0x5c, 0x8b, 0xcb, 0x34, 0xfc, 0xaf, 0x16, 0xe7, 0x74, 0x55, 0xae, 0xc5, 0x45,
	0x99, 0x97, 0x6b, 0x71, 0x99, 0x80, 0xfb, 0x70, 0x4b, 0xeb, 0x13, 0xdd, 0x28, 0x53, 0xa2, 0xa0,
	0xe5, 0x73, 0x9b, 0x52, 0x73, 0x9b, 0x93, 0x5e, 0xd9, 0xb9, 0x2d, 0xaa, 0xf5, 0x3c, 0x88, 0x4e,
	0x77, 0x9c, 0x61, 0x70, 0x92, 0x61, 0x70, 0x9a, 0x61, 0xf0, 0x2b, 0xc3, 0xe0, 0x77, 0x86, 0xc1,
	0x27, 0x81, 0x8d, 0xef, 0x02, 0x83, 0x1f, 0x02, 0x83, 0x9f, 0x02, 0x83, 0xb1, 0xc0, 0xe0, 0x54,
	0x60, 0xe3, 0xeb, 0x04, 0x83, 0x6f, 0x13, 0x0c, 0xc6, 0x13, 0x0c, 0x4e, 0x26, 0x18, 0x3c, 0xbf,
	0x30, 0xc3, 0x1c, 0x6c, 0xa9, 0xb2, 0xb7, 0xfe, 0x04, 0x00, 0x00, 0xff, 0xff, 0xd0, 0x42, 0xff,
	0x59, 0x14, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// IPAMClient is the client API for IPAM service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IPAMClient interface {
	CreateIntPool(ctx context.Context, in *CreateIntPoolRequest, opts ...grpc.CallOption) (*types.Empty, error)
	GetIntOwner(ctx context.Context, in *GetIntOwnerRequest, opts ...grpc.CallOption) (*GetIntOwnerResponse, error)
	DeleteIntPool(ctx context.Context, in *DeleteIntPoolRequest, opts ...grpc.CallOption) (*types.Empty, error)
	AllocateInt(ctx context.Context, in *AllocateIntRequest, opts ...grpc.CallOption) (*AllocateIntResponse, error)
	SetInt(ctx context.Context, in *SetIntRequest, opts ...grpc.CallOption) (*types.Empty, error)
	DeallocateInt(ctx context.Context, in *DeallocateIntRequest, opts ...grpc.CallOption) (*types.Empty, error)
}

type iPAMClient struct {
	cc *grpc.ClientConn
}

func NewIPAMClient(cc *grpc.ClientConn) IPAMClient {
	return &iPAMClient{cc}
}

func (c *iPAMClient) CreateIntPool(ctx context.Context, in *CreateIntPoolRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/github.com.Juniper.asf.pkg.intpool.IPAM/CreateIntPool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iPAMClient) GetIntOwner(ctx context.Context, in *GetIntOwnerRequest, opts ...grpc.CallOption) (*GetIntOwnerResponse, error) {
	out := new(GetIntOwnerResponse)
	err := c.cc.Invoke(ctx, "/github.com.Juniper.asf.pkg.intpool.IPAM/GetIntOwner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iPAMClient) DeleteIntPool(ctx context.Context, in *DeleteIntPoolRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/github.com.Juniper.asf.pkg.intpool.IPAM/DeleteIntPool", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iPAMClient) AllocateInt(ctx context.Context, in *AllocateIntRequest, opts ...grpc.CallOption) (*AllocateIntResponse, error) {
	out := new(AllocateIntResponse)
	err := c.cc.Invoke(ctx, "/github.com.Juniper.asf.pkg.intpool.IPAM/AllocateInt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iPAMClient) SetInt(ctx context.Context, in *SetIntRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/github.com.Juniper.asf.pkg.intpool.IPAM/SetInt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *iPAMClient) DeallocateInt(ctx context.Context, in *DeallocateIntRequest, opts ...grpc.CallOption) (*types.Empty, error) {
	out := new(types.Empty)
	err := c.cc.Invoke(ctx, "/github.com.Juniper.asf.pkg.intpool.IPAM/DeallocateInt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IPAMServer is the server API for IPAM service.
type IPAMServer interface {
	CreateIntPool(context.Context, *CreateIntPoolRequest) (*types.Empty, error)
	GetIntOwner(context.Context, *GetIntOwnerRequest) (*GetIntOwnerResponse, error)
	DeleteIntPool(context.Context, *DeleteIntPoolRequest) (*types.Empty, error)
	AllocateInt(context.Context, *AllocateIntRequest) (*AllocateIntResponse, error)
	SetInt(context.Context, *SetIntRequest) (*types.Empty, error)
	DeallocateInt(context.Context, *DeallocateIntRequest) (*types.Empty, error)
}

func RegisterIPAMServer(s *grpc.Server, srv IPAMServer) {
	s.RegisterService(&_IPAM_serviceDesc, srv)
}

func _IPAM_CreateIntPool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateIntPoolRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IPAMServer).CreateIntPool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.Juniper.asf.pkg.intpool.IPAM/CreateIntPool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IPAMServer).CreateIntPool(ctx, req.(*CreateIntPoolRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IPAM_GetIntOwner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetIntOwnerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IPAMServer).GetIntOwner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.Juniper.asf.pkg.intpool.IPAM/GetIntOwner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IPAMServer).GetIntOwner(ctx, req.(*GetIntOwnerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IPAM_DeleteIntPool_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteIntPoolRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IPAMServer).DeleteIntPool(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.Juniper.asf.pkg.intpool.IPAM/DeleteIntPool",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IPAMServer).DeleteIntPool(ctx, req.(*DeleteIntPoolRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IPAM_AllocateInt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AllocateIntRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IPAMServer).AllocateInt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.Juniper.asf.pkg.intpool.IPAM/AllocateInt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IPAMServer).AllocateInt(ctx, req.(*AllocateIntRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IPAM_SetInt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetIntRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IPAMServer).SetInt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.Juniper.asf.pkg.intpool.IPAM/SetInt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IPAMServer).SetInt(ctx, req.(*SetIntRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IPAM_DeallocateInt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeallocateIntRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IPAMServer).DeallocateInt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.Juniper.asf.pkg.intpool.IPAM/DeallocateInt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IPAMServer).DeallocateInt(ctx, req.(*DeallocateIntRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _IPAM_serviceDesc = grpc.ServiceDesc{
	ServiceName: "github.com.Juniper.asf.pkg.intpool.IPAM",
	HandlerType: (*IPAMServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateIntPool",
			Handler:    _IPAM_CreateIntPool_Handler,
		},
		{
			MethodName: "GetIntOwner",
			Handler:    _IPAM_GetIntOwner_Handler,
		},
		{
			MethodName: "DeleteIntPool",
			Handler:    _IPAM_DeleteIntPool_Handler,
		},
		{
			MethodName: "AllocateInt",
			Handler:    _IPAM_AllocateInt_Handler,
		},
		{
			MethodName: "SetInt",
			Handler:    _IPAM_SetInt_Handler,
		},
		{
			MethodName: "DeallocateInt",
			Handler:    _IPAM_DeallocateInt_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "int_pool.proto",
}

func (m *GetIntOwnerRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Pool)
	if l > 0 {
		n += 1 + l + sovIntPool(uint64(l))
	}
	if m.Value != 0 {
		n += 1 + sovIntPool(uint64(m.Value))
	}
	return n
}

func (m *GetIntOwnerResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Owner)
	if l > 0 {
		n += 1 + l + sovIntPool(uint64(l))
	}
	return n
}

func (m *CreateIntPoolRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Pool)
	if l > 0 {
		n += 1 + l + sovIntPool(uint64(l))
	}
	if m.Start != 0 {
		n += 1 + sovIntPool(uint64(m.Start))
	}
	if m.End != 0 {
		n += 1 + sovIntPool(uint64(m.End))
	}
	return n
}

func (m *DeleteIntPoolRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Pool)
	if l > 0 {
		n += 1 + l + sovIntPool(uint64(l))
	}
	return n
}

func (m *AllocateIntRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Pool)
	if l > 0 {
		n += 1 + l + sovIntPool(uint64(l))
	}
	l = len(m.Owner)
	if l > 0 {
		n += 1 + l + sovIntPool(uint64(l))
	}
	return n
}

func (m *AllocateIntResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Value != 0 {
		n += 1 + sovIntPool(uint64(m.Value))
	}
	return n
}

func (m *SetIntRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Pool)
	if l > 0 {
		n += 1 + l + sovIntPool(uint64(l))
	}
	if m.Value != 0 {
		n += 1 + sovIntPool(uint64(m.Value))
	}
	l = len(m.Owner)
	if l > 0 {
		n += 1 + l + sovIntPool(uint64(l))
	}
	return n
}

func (m *DeallocateIntRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Pool)
	if l > 0 {
		n += 1 + l + sovIntPool(uint64(l))
	}
	if m.Value != 0 {
		n += 1 + sovIntPool(uint64(m.Value))
	}
	return n
}

func sovIntPool(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozIntPool(x uint64) (n int) {
	return sovIntPool(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (this *GetIntOwnerRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetIntOwnerRequest{`,
		`Pool:` + fmt.Sprintf("%v", this.Pool) + `,`,
		`Value:` + fmt.Sprintf("%v", this.Value) + `,`,
		`}`,
	}, "")
	return s
}
func (this *GetIntOwnerResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&GetIntOwnerResponse{`,
		`Owner:` + fmt.Sprintf("%v", this.Owner) + `,`,
		`}`,
	}, "")
	return s
}
func (this *CreateIntPoolRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&CreateIntPoolRequest{`,
		`Pool:` + fmt.Sprintf("%v", this.Pool) + `,`,
		`Start:` + fmt.Sprintf("%v", this.Start) + `,`,
		`End:` + fmt.Sprintf("%v", this.End) + `,`,
		`}`,
	}, "")
	return s
}
func (this *DeleteIntPoolRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&DeleteIntPoolRequest{`,
		`Pool:` + fmt.Sprintf("%v", this.Pool) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AllocateIntRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AllocateIntRequest{`,
		`Pool:` + fmt.Sprintf("%v", this.Pool) + `,`,
		`Owner:` + fmt.Sprintf("%v", this.Owner) + `,`,
		`}`,
	}, "")
	return s
}
func (this *AllocateIntResponse) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&AllocateIntResponse{`,
		`Value:` + fmt.Sprintf("%v", this.Value) + `,`,
		`}`,
	}, "")
	return s
}
func (this *SetIntRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&SetIntRequest{`,
		`Pool:` + fmt.Sprintf("%v", this.Pool) + `,`,
		`Value:` + fmt.Sprintf("%v", this.Value) + `,`,
		`Owner:` + fmt.Sprintf("%v", this.Owner) + `,`,
		`}`,
	}, "")
	return s
}
func (this *DeallocateIntRequest) String() string {
	if this == nil {
		return "nil"
	}
	s := strings.Join([]string{`&DeallocateIntRequest{`,
		`Pool:` + fmt.Sprintf("%v", this.Pool) + `,`,
		`Value:` + fmt.Sprintf("%v", this.Value) + `,`,
		`}`,
	}, "")
	return s
}
func valueToStringIntPool(v interface{}) string {
	rv := reflect.ValueOf(v)
	if rv.IsNil() {
		return "nil"
	}
	pv := reflect.Indirect(rv).Interface()
	return fmt.Sprintf("*%v", pv)
}
