{
  "comments": [
    {
      "key": {
        "uuid": "d8892807_bb156697",
        "filename": "vendor/github.com/Juniper/asf/pkg/apisrv/baseapisrv/server.go",
        "patchSetId": 43
      },
      "lineNbr": 43,
      "author": {
        "id": 565
      },
      "writtenOn": "2020-01-17T10:59:03Z",
      "side": 1,
      "message": "Do we have TODO for removing them?",
      "range": {
        "startLine": 41,
        "startChar": 1,
        "endLine": 43,
        "endChar": 25
      },
      "revId": "35bde083b052ea6a5bc1b6fb712f6d639ba4e6dd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "feeba0c0_cffd335f",
        "filename": "vendor/github.com/Juniper/asf/pkg/apisrv/baseapisrv/server.go",
        "patchSetId": 43
      },
      "lineNbr": 43,
      "author": {
        "id": 618
      },
      "writtenOn": "2020-01-17T11:11:45Z",
      "side": 1,
      "message": "Add() can be removed now.\nAs for the others, I\u0027m not sure we want to delete them:\n- Group() is needed for the dynamic and static proxies, and I haven\u0027t found a way to use anything else than Group() there. Is it intended to be merged into baseapisrv.Server?\n- Use() is used in analytics.BodyDumpPlugin, which, as far as I understand, is not going to be moved into ASF. I suppose that having the ability to use custom middleware is useful in a framework like ASF.",
      "parentUuid": "d8892807_bb156697",
      "range": {
        "startLine": 41,
        "startChar": 1,
        "endLine": 43,
        "endChar": 25
      },
      "revId": "35bde083b052ea6a5bc1b6fb712f6d639ba4e6dd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8b21d11_11d851e6",
        "filename": "vendor/github.com/Juniper/asf/pkg/apisrv/baseapisrv/server.go",
        "patchSetId": 43
      },
      "lineNbr": 43,
      "author": {
        "id": 558
      },
      "writtenOn": "2020-01-17T12:04:35Z",
      "side": 1,
      "message": "1. Add() should be removed (now or in future).\n2. Group() and Use() are nice features regardless if CCAPI needs them, so I would leave them.\n3. dynamicProxyMiddleware heavily depends on X-Cluster-ID and X-Service-Token headers logic. It assumes path contains clusterID. So I think we should just move it to contrail/pkg/proxy package (in funture CRs).",
      "parentUuid": "feeba0c0_cffd335f",
      "range": {
        "startLine": 41,
        "startChar": 1,
        "endLine": 43,
        "endChar": 25
      },
      "revId": "35bde083b052ea6a5bc1b6fb712f6d639ba4e6dd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e368857c_e6666c84",
        "filename": "vendor/github.com/Juniper/asf/pkg/apisrv/baseapisrv/server.go",
        "patchSetId": 43
      },
      "lineNbr": 43,
      "author": {
        "id": 618
      },
      "writtenOn": "2020-01-17T12:38:58Z",
      "side": 1,
      "message": "1. I\u0027ve removed Add from the interface (but kept the method).\n3. I have a stash where this is partially done.",
      "parentUuid": "b8b21d11_11d851e6",
      "range": {
        "startLine": 41,
        "startChar": 1,
        "endLine": 43,
        "endChar": 25
      },
      "revId": "35bde083b052ea6a5bc1b6fb712f6d639ba4e6dd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5bd399e4_cf8aa51d",
        "filename": "vendor/github.com/Juniper/asf/pkg/apisrv/baseapisrv/server.go",
        "patchSetId": 43
      },
      "lineNbr": 43,
      "author": {
        "id": 565
      },
      "writtenOn": "2020-01-21T10:22:46Z",
      "side": 1,
      "message": "\u003e 2. Group() and Use() are nice features regardless if CCAPI needs them, so I would leave them.\n\nI agree with the first part but disagree with the second one. The feautres are nice, but is it a reason to couple plugin registration with middleware registration? IMO those two are separate entities and should be registered as such. Even in our code our plugins are either pure service plugins or standalone middlewares disguised as plugins.\n\nMy second argument is Use looks like a special case of Group and I see no point of having both at once. I checked echo implementation and those functions differ, however I think we should simplify this and have only one method with eg. opts.\n\n@Witaut: You can leave TODO if you don\u0027t want to impede this particular review, however I still feel that we don\u0027t want those methods in the Plugin interface.",
      "parentUuid": "e368857c_e6666c84",
      "range": {
        "startLine": 41,
        "startChar": 1,
        "endLine": 43,
        "endChar": 25
      },
      "revId": "35bde083b052ea6a5bc1b6fb712f6d639ba4e6dd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44377389_f8c34f78",
        "filename": "vendor/github.com/Juniper/asf/pkg/apisrv/baseapisrv/server.go",
        "patchSetId": 43
      },
      "lineNbr": 56,
      "author": {
        "id": 558
      },
      "writtenOn": "2020-01-17T12:04:35Z",
      "side": 1,
      "message": "How about having RouteOptionsFunc (for function) and RouteOptions (for struct) types?\nWe have HandlerFunc, MiddlewareFunc, stdlib\u0027s http.HandlerFunc after all.",
      "range": {
        "startLine": 56,
        "startChar": 5,
        "endLine": 56,
        "endChar": 16
      },
      "revId": "35bde083b052ea6a5bc1b6fb712f6d639ba4e6dd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ab1cfe9_f8998db2",
        "filename": "vendor/github.com/Juniper/asf/pkg/apisrv/baseapisrv/server.go",
        "patchSetId": 43
      },
      "lineNbr": 56,
      "author": {
        "id": 618
      },
      "writtenOn": "2020-01-17T12:38:58Z",
      "side": 1,
      "message": "It\u0027s not quite the same as http.Handler vs http.HandlerFunc - RouteParameters has all the fields unexported, so it\u0027s unusable outside baseapisrv.\nThis name change makes the code clearer, though, so I\u0027ve done it.",
      "parentUuid": "44377389_f8c34f78",
      "range": {
        "startLine": 56,
        "startChar": 5,
        "endLine": 56,
        "endChar": 16
      },
      "revId": "35bde083b052ea6a5bc1b6fb712f6d639ba4e6dd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    }
  ]
}