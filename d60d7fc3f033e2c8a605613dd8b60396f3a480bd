{
  "comments": [
    {
      "key": {
        "uuid": "37d26ac8_4872205c",
        "filename": "pkg/apisrv/test_data/test_sync.yml",
        "patchSetId": 13
      },
      "lineNbr": 5,
      "author": {
        "id": 618
      },
      "writtenOn": "2019-11-20T13:14:41Z",
      "side": 1,
      "message": "Keep the current formatting convention: lists should not be indented more than necessary (\"- \" counts as indentation in YAML).",
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce749fad_8c54037a",
        "filename": "pkg/apisrv/test_data/test_sync.yml",
        "patchSetId": 13
      },
      "lineNbr": 5,
      "author": {
        "id": 822
      },
      "writtenOn": "2019-11-21T00:20:51Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "37d26ac8_4872205c",
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ae6c72e_4aff6f10",
        "filename": "pkg/apisrv/test_data/test_sync.yml",
        "patchSetId": 13
      },
      "lineNbr": 10,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-11-20T11:51:36Z",
      "side": 1,
      "message": "I guess this is redundant.",
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2eb70f8c_73fdd6c7",
        "filename": "pkg/apisrv/test_data/test_sync.yml",
        "patchSetId": 13
      },
      "lineNbr": 10,
      "author": {
        "id": 822
      },
      "writtenOn": "2019-11-21T00:01:11Z",
      "side": 1,
      "message": "I don\u0027t trust the cleanup logic.  I should be able to remove this whole cleanup block, but if I do, I get test errors.  For now, I think it\u0027s safer to follow the convention I see in this test code.",
      "parentUuid": "9ae6c72e_4aff6f10",
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ac71fce_a2bf23d2",
        "filename": "pkg/apisrv/test_data/test_sync.yml",
        "patchSetId": 13
      },
      "lineNbr": 10,
      "author": {
        "id": 822
      },
      "writtenOn": "2019-11-21T00:20:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2eb70f8c_73fdd6c7",
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "443b4847_0ef555fa",
        "filename": "pkg/apisrv/test_data/test_sync.yml",
        "patchSetId": 13
      },
      "lineNbr": 95,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-11-20T11:51:36Z",
      "side": 1,
      "message": "I think it would be nice to move the `contrail_version` definition in the test step. That would make it clearly visible in the test step. You can use yaml extend notation for that (`\u003c\u003c`).\nExample:\n\n resources:\n  - kind: contrail_cluster\n    data:\n     \u003c\u003c: *version_string_cluster\n     contrail_version: \"1911.10\"\n    operation: CREATE\n\nAfter that we could merge version_string_cluster and version_float_cluster objects, simplifying the test setup.",
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff7e9ead_0450921d",
        "filename": "pkg/apisrv/test_data/test_sync.yml",
        "patchSetId": 13
      },
      "lineNbr": 95,
      "author": {
        "id": 822
      },
      "writtenOn": "2019-11-21T00:01:11Z",
      "side": 1,
      "message": "I will try this.  I was not aware of the intention of this syntax since I don\u0027t think it\u0027s documented.  I will try to rectify that by starting some documentation.  (I\u0027m thinking a TEST.md).",
      "parentUuid": "443b4847_0ef555fa",
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d075ac4_0758ac05",
        "filename": "pkg/apisrv/test_data/test_sync.yml",
        "patchSetId": 13
      },
      "lineNbr": 95,
      "author": {
        "id": 822
      },
      "writtenOn": "2019-11-21T00:20:51Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ff7e9ead_0450921d",
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "60b9dd0d_25817094",
        "filename": "pkg/apisrv/test_data/test_sync.yml",
        "patchSetId": 13
      },
      "lineNbr": 369,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-11-20T11:51:36Z",
      "side": 1,
      "message": "Optional: This step fails, so it does not produce any side effects. Because of this, we could reorder those test steps to use only one object uuid.",
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4b75ec5_653bd277",
        "filename": "pkg/apisrv/test_data/test_sync.yml",
        "patchSetId": 13
      },
      "lineNbr": 369,
      "author": {
        "id": 822
      },
      "writtenOn": "2019-11-21T00:01:11Z",
      "side": 1,
      "message": "That presumes that the test succeeds.  I used TDD, so I wrote the test to handle the expected failure, and such that it can be rerun reliably.",
      "parentUuid": "60b9dd0d_25817094",
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9f7c67e_862f6baf",
        "filename": "pkg/apisrv/test_data/test_sync.yml",
        "patchSetId": 13
      },
      "lineNbr": 369,
      "author": {
        "id": 822
      },
      "writtenOn": "2019-11-21T00:20:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f4b75ec5_653bd277",
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b1d3ebbd_c8e8d393",
        "filename": "pkg/apisrv/test_data/test_validation.yml",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-11-20T11:51:36Z",
      "side": 1,
      "message": "Ditto, please take a look at test_sync.yaml comments.",
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26c2db8b_b09391a2",
        "filename": "pkg/apisrv/test_data/test_validation.yml",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 822
      },
      "writtenOn": "2019-11-21T00:01:11Z",
      "side": 1,
      "message": "Ditto my reply as well... ;)",
      "parentUuid": "b1d3ebbd_c8e8d393",
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f10b0eab_052cbe87",
        "filename": "pkg/apisrv/test_data/test_validation.yml",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 822
      },
      "writtenOn": "2019-11-21T00:20:51Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "26c2db8b_b09391a2",
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "993013f0_b7dadc72",
        "filename": "pkg/db/basedb/db_share.go",
        "patchSetId": 13
      },
      "lineNbr": 38,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-11-20T11:51:36Z",
      "side": 1,
      "message": "Please use `:\u003d` notation instead of `var x \u003d`",
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5e34dbb_cbdcd566",
        "filename": "pkg/db/basedb/db_share.go",
        "patchSetId": 13
      },
      "lineNbr": 38,
      "author": {
        "id": 618
      },
      "writtenOn": "2019-11-20T13:14:41Z",
      "side": 1,
      "message": "`tenant`",
      "range": {
        "startLine": 38,
        "startChar": 6,
        "endLine": 38,
        "endChar": 9
      },
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e279eeb_4d2fda76",
        "filename": "pkg/db/basedb/db_share.go",
        "patchSetId": 13
      },
      "lineNbr": 38,
      "author": {
        "id": 822
      },
      "writtenOn": "2019-11-21T00:01:11Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a5e34dbb_cbdcd566",
      "range": {
        "startLine": 38,
        "startChar": 6,
        "endLine": 38,
        "endChar": 9
      },
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6cdce4d8_011ae039",
        "filename": "pkg/db/basedb/db_share.go",
        "patchSetId": 13
      },
      "lineNbr": 38,
      "author": {
        "id": 822
      },
      "writtenOn": "2019-11-21T00:01:11Z",
      "side": 1,
      "message": "Ok, though I think this is a bit pedantic.  I will not wage a holy war though... ;)",
      "parentUuid": "993013f0_b7dadc72",
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "26c9635e_b02cff9f",
        "filename": "pkg/db/basedb/db_share.go",
        "patchSetId": 13
      },
      "lineNbr": 43,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-11-20T11:51:36Z",
      "side": 1,
      "message": "You can use `:\u003d` notation here. That way you could remove L42 because it allows err redeclaration.",
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef878ec0_3831b517",
        "filename": "pkg/db/basedb/db_share.go",
        "patchSetId": 13
      },
      "lineNbr": 43,
      "author": {
        "id": 618
      },
      "writtenOn": "2019-11-20T13:14:41Z",
      "side": 1,
      "message": "`tenantAccess`",
      "range": {
        "startLine": 43,
        "startChar": 2,
        "endLine": 43,
        "endChar": 3
      },
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3b046f2_8047eb82",
        "filename": "pkg/db/basedb/db_share.go",
        "patchSetId": 13
      },
      "lineNbr": 43,
      "author": {
        "id": 822
      },
      "writtenOn": "2019-11-21T00:01:11Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ef878ec0_3831b517",
      "range": {
        "startLine": 43,
        "startChar": 2,
        "endLine": 43,
        "endChar": 3
      },
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "049c021b_46379739",
        "filename": "pkg/db/basedb/db_share.go",
        "patchSetId": 13
      },
      "lineNbr": 43,
      "author": {
        "id": 822
      },
      "writtenOn": "2019-11-21T00:01:11Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "26c9635e_b02cff9f",
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f4181c7_124279fc",
        "filename": "pkg/db/basedb/query_builder.go",
        "patchSetId": 13
      },
      "lineNbr": 627,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-11-20T11:51:36Z",
      "side": 1,
      "message": "Why not `stringValue, err :\u003d`? Our codebase mostly sticks to rules:\n\n\u003e - When declaring a variable without initialisation, use the var syntax.\n\u003e - When declaring and explicitly initialising a variable, use :\u003d.\n\nPlease refer to https://dave.cheney.net/practical-go/presentations/qcon-china.html#_use_a_consistent_declaration_style for explanation.",
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e64e0da_cb613df3",
        "filename": "pkg/db/basedb/query_builder.go",
        "patchSetId": 13
      },
      "lineNbr": 627,
      "author": {
        "id": 822
      },
      "writtenOn": "2019-11-21T00:01:11Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "0f4181c7_124279fc",
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6811abe3_5879570b",
        "filename": "pkg/format/cast.go",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-11-20T11:51:36Z",
      "side": 1,
      "message": "Please don\u0027t use `var x \u003d` notation. Please keep the `:\u003d`, that way we avoid unnecessary `var` block at the beginning of each function.\nMore info in pkg/db/basedb/query_builder.go:L627 comment.",
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "155426d4_4243ddd7",
        "filename": "pkg/format/cast.go",
        "patchSetId": 13
      },
      "lineNbr": 0,
      "author": {
        "id": 822
      },
      "writtenOn": "2019-11-21T00:01:11Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "6811abe3_5879570b",
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "058ec9e3_db101fd3",
        "filename": "pkg/format/cast.go",
        "patchSetId": 13
      },
      "lineNbr": 14,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-11-20T11:51:36Z",
      "side": 1,
      "message": "Ditto, pkg/db/basedb/query_builder.go:L627",
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9cc284e_8d62490d",
        "filename": "pkg/format/cast.go",
        "patchSetId": 13
      },
      "lineNbr": 14,
      "author": {
        "id": 822
      },
      "writtenOn": "2019-11-21T00:01:11Z",
      "side": 1,
      "message": "Ack, though I hate having to add //nolint:errcheck\nThat feels like cheating.",
      "parentUuid": "058ec9e3_db101fd3",
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "92fbe348_94057c66",
        "filename": "pkg/format/map.go",
        "patchSetId": 13
      },
      "lineNbr": 80,
      "author": {
        "id": 618
      },
      "writtenOn": "2019-11-20T13:14:41Z",
      "side": 1,
      "message": "The convention is to have the error flow indented: https://github.com/golang/go/wiki/CodeReviewComments#indent-error-flow\nI\u0027d make this\n\nif err !\u003d nil {\n        return err\n}\nv.SetInt(i64)\n\n\u003cat the end of the function:\u003e\nreturn nil",
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf1dc090_001cd03f",
        "filename": "pkg/format/map.go",
        "patchSetId": 13
      },
      "lineNbr": 80,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-11-20T14:02:47Z",
      "side": 1,
      "message": "I think this should be rewritten as:\n\n if i64, err :\u003d InterfaceToInt64E(i); err \u003d\u003d nil {\n  v.SetInt(i64)\n }\n\nThe indent-error-flow makes the code more complex here and for me it isn\u0027t clear if it applies here.",
      "parentUuid": "92fbe348_94057c66",
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31aa636c_68d50e09",
        "filename": "pkg/format/map.go",
        "patchSetId": 13
      },
      "lineNbr": 80,
      "author": {
        "id": 822
      },
      "writtenOn": "2019-11-21T00:01:11Z",
      "side": 1,
      "message": "I will follow Witaut\u0027s suggestion.  If I use Michal\u0027s suggestion, I have to declare the err in a wider scope so I can return it later.  Then I have to declare the i64 at a wider scope.  I\u0027m required to chose whether I want my variables at a wider scope which feels more complex, or to have everything close by with simple redundant logic... or to abstract further to avoid repetition, which can also add complexity.  Witaut\u0027s suggestion seems simpler.",
      "parentUuid": "cf1dc090_001cd03f",
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25a55519_c2c7be72",
        "filename": "pkg/models/codec.go",
        "patchSetId": 13
      },
      "lineNbr": 92,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-11-20T11:51:36Z",
      "side": 1,
      "message": "You can use if+initialization notation:\n\n if err :\u003d output.ApplyMap(updateData); err !\u003d nil {",
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1619953e_5e5d3228",
        "filename": "pkg/models/codec.go",
        "patchSetId": 13
      },
      "lineNbr": 92,
      "author": {
        "id": 822
      },
      "writtenOn": "2019-11-21T00:01:11Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "25a55519_c2c7be72",
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dd32905a_719dfde3",
        "filename": "pkg/models/json_test.go",
        "patchSetId": 13
      },
      "lineNbr": 125,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-11-20T11:51:36Z",
      "side": 1,
      "message": "Ditto, pkg/models/codec.go:L92",
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2cefab4_278d146d",
        "filename": "pkg/models/json_test.go",
        "patchSetId": 13
      },
      "lineNbr": 125,
      "author": {
        "id": 822
      },
      "writtenOn": "2019-11-21T00:01:11Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "dd32905a_719dfde3",
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "41cfc1b4_478498be",
        "filename": "pkg/models/model.go.tmpl",
        "patchSetId": 13
      },
      "lineNbr": 146,
      "author": {
        "id": 618
      },
      "writtenOn": "2019-11-20T13:14:41Z",
      "side": 1,
      "message": "Returning `nil` explicitly would be clearer.",
      "range": {
        "startLine": 146,
        "startChar": 12,
        "endLine": 146,
        "endChar": 15
      },
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "037a34d4_b501e071",
        "filename": "pkg/models/model.go.tmpl",
        "patchSetId": 13
      },
      "lineNbr": 146,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-11-20T14:02:47Z",
      "side": 1,
      "message": "+1, IMO the err is declared too early. It can be initialized using `:\u003d` whenever it\u0027s required.",
      "parentUuid": "41cfc1b4_478498be",
      "range": {
        "startLine": 146,
        "startChar": 12,
        "endLine": 146,
        "endChar": 15
      },
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0576b99b_c6675119",
        "filename": "pkg/models/model.go.tmpl",
        "patchSetId": 13
      },
      "lineNbr": 146,
      "author": {
        "id": 822
      },
      "writtenOn": "2019-11-21T00:01:11Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "037a34d4_b501e071",
      "range": {
        "startLine": 146,
        "startChar": 12,
        "endLine": 146,
        "endChar": 15
      },
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a72cbfea_c9191f67",
        "filename": "pkg/models/virtual_machine_interface_test.go",
        "patchSetId": 13
      },
      "lineNbr": 120,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-11-20T11:51:36Z",
      "side": 1,
      "message": "Please use `:\u003d`",
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c006c8b1_ba5a3339",
        "filename": "pkg/models/virtual_machine_interface_test.go",
        "patchSetId": 13
      },
      "lineNbr": 120,
      "author": {
        "id": 822
      },
      "writtenOn": "2019-11-21T00:01:11Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a72cbfea_c9191f67",
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d9564baf_05d9c0cc",
        "filename": "pkg/services/event_encoding.go",
        "patchSetId": 13
      },
      "lineNbr": 408,
      "author": {
        "id": 618
      },
      "writtenOn": "2019-11-20T13:14:41Z",
      "side": 1,
      "message": "Returning a result AND an error makes code hard to understand and is usually avoided.\nI understand that you\u0027re trying to preserve the current behavior (e.g. of usages that don\u0027t check the error), so add a TODO to `return nil, err` on error instead.",
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c97571d5_63353852",
        "filename": "pkg/services/event_encoding.go",
        "patchSetId": 13
      },
      "lineNbr": 408,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-11-20T14:02:47Z",
      "side": 1,
      "message": "\u003e Returning a result AND an error makes code hard to understand and is usually avoided.\n\nI disagree with this statement. If the only possible flow after getting the error is return, then we could return err immediately. However I agree that we should add if statement here, because we will call r.SetFielMask on an object, even if we got an error.",
      "parentUuid": "d9564baf_05d9c0cc",
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4208fa56_73a0cdbe",
        "filename": "pkg/services/event_encoding.go",
        "patchSetId": 13
      },
      "lineNbr": 408,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-11-20T15:06:39Z",
      "side": 1,
      "message": "After talking with Witaut, I understood what he meant and I agree that constructing an object (`\u0026Event{...}`) even if we receive error can be troublesome.",
      "parentUuid": "c97571d5_63353852",
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38c4b07c_0f94efa2",
        "filename": "pkg/services/event_encoding.go",
        "patchSetId": 13
      },
      "lineNbr": 408,
      "author": {
        "id": 822
      },
      "writtenOn": "2019-11-21T00:01:11Z",
      "side": 1,
      "message": "OK, I will return a nil Event on ApplyMap failure.",
      "parentUuid": "4208fa56_73a0cdbe",
      "revId": "d60d7fc3f033e2c8a605613dd8b60396f3a480bd",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    }
  ]
}