{
  "comments": [
    {
      "key": {
        "uuid": "35ec998e_61659c61",
        "filename": "pkg/cloud/cloud_test.go",
        "patchSetId": 5
      },
      "lineNbr": 430,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-11-20T11:26:27Z",
      "side": 1,
      "message": "Optional: there is a require package that does the same as assert, but also stops the test from executing. You can replace this if with:\n\n err :\u003d fileutil.LoadFile(...)\n require.NoError(err)\n\nOr even\n\n require.NoError(fileutil.LoadFile(...))",
      "revId": "9baff621b5f7ccf0a952c0491855eb6444e7c4ff",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db04fce6_2d8ed864",
        "filename": "pkg/cloud/cloud_test.go",
        "patchSetId": 5
      },
      "lineNbr": 430,
      "author": {
        "id": 863
      },
      "writtenOn": "2019-11-20T13:04:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "35ec998e_61659c61",
      "revId": "9baff621b5f7ccf0a952c0491855eb6444e7c4ff",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f261aa87_044354e2",
        "filename": "pkg/cloud/cloud_test.go",
        "patchSetId": 5
      },
      "lineNbr": 435,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-11-20T11:26:27Z",
      "side": 1,
      "message": "testutil.AssertEqual already does the assertion - there is no need this Fail.",
      "revId": "9baff621b5f7ccf0a952c0491855eb6444e7c4ff",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7cd880ab_4e34a3c7",
        "filename": "pkg/cloud/cloud_test.go",
        "patchSetId": 5
      },
      "lineNbr": 435,
      "author": {
        "id": 863
      },
      "writtenOn": "2019-11-20T12:33:34Z",
      "side": 1,
      "message": "assert.Fail is intentional as it provides additional context of why this check failed:\n- information that compared yaml files are not equal\n- add message provided by the caller of that assertYAMLFileEqual to add context\n\nAdditionally, I wanted to this assert function looks like asserts functions from testify/assert and be as verbose in case of fail as it is possible.",
      "parentUuid": "f261aa87_044354e2",
      "revId": "9baff621b5f7ccf0a952c0491855eb6444e7c4ff",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7cea30b4_d1f2ea72",
        "filename": "pkg/cloud/cloud_test.go",
        "patchSetId": 5
      },
      "lineNbr": 435,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-11-20T12:40:49Z",
      "side": 1,
      "message": "AFAIK \"information that compared yaml files are not equal\" is already in testutil.AssertEqual (https://github.com/Juniper/contrail/blob/master/pkg/testutil/assert.go#L120). If you feel that is not sufficient for any reason then please fix it there.\n\n\"add message provided by the caller of that assertYAMLFileEqual to add context\" is also supported by testutil.AssertEqual because it accepts final msg parameter. This should be used for caller provided message.\n\nIn my opinion, if you wanted to make this look like testify func, you shouldn\u0027t rely on testutil.AssertEqual. Above code causes 2 assertion fails that describe the same problem. I don\u0027t see a point for such redundancy.",
      "parentUuid": "7cd880ab_4e34a3c7",
      "revId": "9baff621b5f7ccf0a952c0491855eb6444e7c4ff",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "997f400c_1d6996dd",
        "filename": "pkg/cloud/cloud_test.go",
        "patchSetId": 5
      },
      "lineNbr": 435,
      "author": {
        "id": 863
      },
      "writtenOn": "2019-11-20T13:04:55Z",
      "side": 1,
      "message": "Yes, you are right. What about the version in patchset 6?",
      "parentUuid": "7cea30b4_d1f2ea72",
      "revId": "9baff621b5f7ccf0a952c0491855eb6444e7c4ff",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    }
  ]
}