api_style: contrail
extends:
- base
id: virtual_machine_interface
parents:
  project:
    description: Virtual machine interface represent a interface(port) into virtual
      network. It may or may not have corresponding virtual machine. A virtual machine
      interface has atleast a MAC address and Ip address.
    operations: CRUD
    presence: optional
  virtual_machine:
    description: References to child interfaces this virtual machine has, this is
      DEPRECATED.
    operations: CRUD
    presence: optional
  virtual_router:
    description: An interface on a virtual-router, e.g. vhost0
    operations: CRUD
    presence: optional
plural: virtual_machine_interfaces
prefix: /
references:
  bgp_router:
    description: Reference to bgp-router from the virtual machine interface.
    operations: CRUD
    presence: required
  bridge_domain:
    $ref: types.json#/definitions/BridgeDomainMembershipType
    description: Virtual Machine interface maps to a bridge-domain by defaultor based
      on in coming 802.1Q vlan tag
    operations: CRUD
    presence: optional
  interface_route_table:
    description: Reference to the interface route table attached to this interface.
    operations: CRUD
    presence: optional
  physical_interface:
    description: Reference to the physical interface of service appliance this service
      interface represents.
    operations: CRUD
    presence: system-only
  port_tuple:
    description: ''
    operations: CRUD
    presence: optional
  qos_config:
    description: Reference to QoS config for this virtual machine interface.
    operations: CRUD
    presence: optional
  routing_instance:
    $ref: types.json#/definitions/PolicyBasedForwardingRuleType
    description: Automatically generated Forwarding policy. This will be deprecated
      in future in favour of VRF assign rules.
    operations: CRUD
    presence: system-only
  security_group:
    description: Interface ACL, Automatically generated by system based on security
      groups attached to this interface.
    operations: CRUD
    presence: optional
  security_logging_object:
    description: Reference to security logging object for this virtual machine interface
    operations: CRUD
    presence: optional
  service_endpoint:
    description: Links the access endpoint i.e virtual-machine-interface to service
      endpoint.
    operations: CRUD
    presence: optional
  service_health_check:
    description: Reference to health check object attached to this interface.
    operations: CRUD
    presence: optional
  virtual_machine:
    description: This interface belongs to the referenced virtual machine.
    operations: CRUD
    presence: optional
  virtual_machine_interface:
    description: List of references to the sub interfaces of this interface.
    operations: CRUD
    presence: optional
  virtual_network:
    description: This interface is member of the referenced virtual network.
    operations: CRUD
    presence: required
schema:
  properties:
    ecmp_hashing_include_fields:
      $ref: types.json#/definitions/EcmpHashingIncludeFields
      description: ECMP hashing config at global level.
      operations: CRUD
      presence: optional
    igmp_enable:
      default: false
      description: IGMP mode at Global level.
      operations: CRUD
      presence: optional
      type: boolean
    port_security_enabled:
      default: true
      description: Port security status on the network
      operations: CRUD
      presence: optional
      type: boolean
    virtual_machine_interface_allowed_address_pairs:
      $ref: types.json#/definitions/AllowedAddressPairs
      description: List of (IP address, MAC) other than instance ip on this interface.
      operations: CRUD
      presence: optional
    virtual_machine_interface_bindings:
      $ref: types.json#/definitions/KeyValuePairs
      collectionType: map
      description: Dictionary of arbitrary (key, value) for this interface. Neutron
        port bindings use this.
      mapKey: key
      operations: CRUD
      presence: optional
      wrapper: true
    virtual_machine_interface_device_owner:
      description: For openstack compatibility, not used by system.
      operations: CRUD
      presence: optional
      type: string
    virtual_machine_interface_dhcp_option_list:
      $ref: types.json#/definitions/DhcpOptionsListType
      description: DHCP options configuration specific to this interface.
      operations: CRUD
      presence: optional
    virtual_machine_interface_disable_policy:
      default: false
      description: When True all policy checks for ingress and egress traffic from
        this interface are disabled. Flow table entries are not created. Features
        that require policy will not work on this interface, these include security
        group, floating IP, service chain, linklocal services.
      operations: CRUD
      presence: optional
      type: boolean
    virtual_machine_interface_fat_flow_protocols:
      $ref: types.json#/definitions/FatFlowProtocols
      collectionType: list
      description: List of (protocol, port number), for flows to interface with (protocol,
        destination port number), vrouter will ignore source port while setting up
        flow and ignore it as source port in reverse flow. Hence many flows will map
        to single flow.
      operations: CRUD
      presence: optional
      wrapper: true
    virtual_machine_interface_host_routes:
      $ref: types.json#/definitions/RouteTableType
      description: List of host routes(prefixes, nexthop) that are passed to VM via
        DHCP.
      operations: CRUD
      presence: optional
    virtual_machine_interface_mac_addresses:
      $ref: types.json#/definitions/MacAddressesType
      description: MAC address of the virtual machine interface, automatically assigned
        by system if not provided.
      operations: CRUD
      presence: required
    virtual_machine_interface_properties:
      $ref: types.json#/definitions/VirtualMachineInterfacePropertiesType
      description: Virtual Machine Interface miscellaneous configurations.
      operations: CRUD
      presence: optional
    vlan_tag_based_bridge_domain:
      default: false
      description: Enable VLAN tag based bridge domain classification on the port
      operations: CRUD
      presence: optional
      type: boolean
    vrf_assign_table:
      $ref: types.json#/definitions/VrfAssignTableType
      description: VRF assignment policy for this interface, automatically generated
        by system.
      operations: CRUD
      presence: system-only
  required:
  - virtual_machine_interface_mac_addresses
  type: object
