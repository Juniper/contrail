{
  "comments": [
    {
      "key": {
        "uuid": "d4c66440_72d4a466",
        "filename": "pkg/cloud/manager.go",
        "patchSetId": 15
      },
      "lineNbr": 165,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-12-16T11:37:57Z",
      "side": 1,
      "message": "Optional: Shouldn\u0027t that be deferred?",
      "revId": "989a4b596deb5cd40b8fc71e9d8776f9ac27d8e8",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d98d1425_36bf6729",
        "filename": "pkg/cloud/manager.go",
        "patchSetId": 15
      },
      "lineNbr": 165,
      "author": {
        "id": 633
      },
      "writtenOn": "2019-12-16T12:34:38Z",
      "side": 1,
      "message": "Why should that be deferred?",
      "parentUuid": "d4c66440_72d4a466",
      "revId": "989a4b596deb5cd40b8fc71e9d8776f9ac27d8e8",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9fbd6e0_b7380eaa",
        "filename": "pkg/cloud/manager.go",
        "patchSetId": 15
      },
      "lineNbr": 165,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-12-16T12:45:26Z",
      "side": 1,
      "message": "Because if the handleCloudRequest panics, then vulnerable files won\u0027t be deleted.",
      "parentUuid": "d98d1425_36bf6729",
      "revId": "989a4b596deb5cd40b8fc71e9d8776f9ac27d8e8",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0bf12828_b998cc3d",
        "filename": "pkg/cloud/manager.go",
        "patchSetId": 15
      },
      "lineNbr": 165,
      "author": {
        "id": 633
      },
      "writtenOn": "2019-12-17T10:56:11Z",
      "side": 1,
      "message": "I would go with this way. The code may be a bit hard for now but it will be refactored in the future. Unfortunately data variable needs to be resolved before handling Cloud request because delete operation removes the crucial information from the DB so getting Data after this request is impossible.",
      "parentUuid": "c9fbd6e0_b7380eaa",
      "revId": "989a4b596deb5cd40b8fc71e9d8776f9ac27d8e8",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53c4a971_b49b42b5",
        "filename": "pkg/cloud/manager.go",
        "patchSetId": 15
      },
      "lineNbr": 165,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-12-18T08:00:52Z",
      "side": 1,
      "message": "You both disagreed and changed it. I am confused now",
      "parentUuid": "0bf12828_b998cc3d",
      "revId": "989a4b596deb5cd40b8fc71e9d8776f9ac27d8e8",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c6b3f6c_d6b6d267",
        "filename": "pkg/cloud/manager.go",
        "patchSetId": 15
      },
      "lineNbr": 165,
      "author": {
        "id": 633
      },
      "writtenOn": "2019-12-19T09:11:21Z",
      "side": 1,
      "message": "I agree that this needs to be deferred but this function should be written much more clear. As we discussed before this defer is a bit complicated.",
      "parentUuid": "53c4a971_b49b42b5",
      "revId": "989a4b596deb5cd40b8fc71e9d8776f9ac27d8e8",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e4fbd64_2afe35a7",
        "filename": "pkg/cloud/manager.go",
        "patchSetId": 15
      },
      "lineNbr": 177,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-12-16T11:37:57Z",
      "side": 1,
      "message": "I think using the object despite the error state is bad. I saw your response for comment in L459 and I can agree with that but only if you choose one of the following:\n\n1. Return half done objects together with error, like in L459 (the contract is that user won\u0027t use the object because of the error value)\n2. Use objects despite even if the error value is not nil, like here (the contract is that the object is zero value every time when the error is returned)\n\nWhat you have now is both of those approaches, which is inconsistent and in my opinion can lead to hard to spot bugs. I know that the above code works, but it\u0027s about having some rules.\n\nTo fix this you can revert error handling in L459 or add error handling here before accessing the cloudObject value (which I prefer).",
      "range": {
        "startLine": 177,
        "startChar": 8,
        "endLine": 177,
        "endChar": 59
      },
      "revId": "989a4b596deb5cd40b8fc71e9d8776f9ac27d8e8",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95dc794c_846d0bf7",
        "filename": "pkg/cloud/manager.go",
        "patchSetId": 15
      },
      "lineNbr": 177,
      "author": {
        "id": 633
      },
      "writtenOn": "2019-12-16T12:34:38Z",
      "side": 1,
      "message": "I agree. I will go with the first option and do not use objects that may be invalid.",
      "parentUuid": "7e4fbd64_2afe35a7",
      "range": {
        "startLine": 177,
        "startChar": 8,
        "endLine": 177,
        "endChar": 59
      },
      "revId": "989a4b596deb5cd40b8fc71e9d8776f9ac27d8e8",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    }
  ]
}