{
  "comments": [
    {
      "key": {
        "uuid": "c438900a_36591d3e",
        "filename": "pkg/apisrv/proxy_test.go",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-10-23T20:35:20Z",
      "side": 1,
      "message": "How about moving this to an proxy_integration_test.go or something similar? I tried adding a unit test recently and for the proxy and I stumbled upon the fact that it is a external test. On the other hand this is clearly not a simple unit test file. What do you think?",
      "revId": "dfa352a7f956bccaebcf0f4108b6a0b60ede6fb1",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38c37f51_9d381562",
        "filename": "pkg/apisrv/proxy_test.go",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 558
      },
      "writtenOn": "2019-10-29T11:22:27Z",
      "side": 1,
      "message": "We could do it in separate CR. We have multiple tests without integration_test.go suffix that use spawned API Server (server_test.go, homepage_test.go, ...). So we could rename them all without code change in separate CR.\n\nNow I want to focus on fixing proxy bug and moving on to ASF",
      "parentUuid": "c438900a_36591d3e",
      "revId": "dfa352a7f956bccaebcf0f4108b6a0b60ede6fb1",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1feec43_77a55a9b",
        "filename": "pkg/apisrv/proxy_test.go",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-10-29T15:22:30Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "38c37f51_9d381562",
      "revId": "dfa352a7f956bccaebcf0f4108b6a0b60ede6fb1",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d7cd843_2465e5a9",
        "filename": "pkg/apisrv/proxy_test.go",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-10-23T20:35:20Z",
      "side": 1,
      "message": "Redundant newline",
      "revId": "dfa352a7f956bccaebcf0f4108b6a0b60ede6fb1",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01ba346e_09f59c41",
        "filename": "pkg/apisrv/proxy_test.go",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 558
      },
      "writtenOn": "2019-10-29T11:22:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0d7cd843_2465e5a9",
      "revId": "dfa352a7f956bccaebcf0f4108b6a0b60ede6fb1",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b8d6b30_f51222fe",
        "filename": "pkg/apisrv/proxy_test.go",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-10-29T15:22:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "01ba346e_09f59c41",
      "revId": "dfa352a7f956bccaebcf0f4108b6a0b60ede6fb1",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96d55656_139f2d90",
        "filename": "pkg/apisrv/proxy_test.go",
        "patchSetId": 3
      },
      "lineNbr": 442,
      "author": {
        "id": 558
      },
      "writtenOn": "2019-10-23T17:29:22Z",
      "side": 1,
      "message": "Previous version of this test used Alice (admin) client for requests: https://review.opencontrail.org/c/Juniper/contrail/+/54683/3/pkg/apisrv/proxy_test.go#b610 So it did not verify if request was proxied to remote Keystone or handled by local Keystone.\n\nIt looks like requests are not proxied to remote Keystone, even if proxy endpoint is created.\n\nI\u0027ll take a look at it tommorow and create a bug if necessary.",
      "revId": "dfa352a7f956bccaebcf0f4108b6a0b60ede6fb1",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8c1edd2_646d1a96",
        "filename": "pkg/apisrv/proxy_test.go",
        "patchSetId": 3
      },
      "lineNbr": 442,
      "author": {
        "id": 558
      },
      "writtenOn": "2019-10-29T11:22:27Z",
      "side": 1,
      "message": "Test removed, because it did not test proxy at all.",
      "parentUuid": "96d55656_139f2d90",
      "revId": "dfa352a7f956bccaebcf0f4108b6a0b60ede6fb1",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe5b2c47_1a8cf57b",
        "filename": "pkg/apisrv/proxy_test.go",
        "patchSetId": 3
      },
      "lineNbr": 442,
      "author": {
        "id": 56
      },
      "writtenOn": "2019-10-29T17:30:32Z",
      "side": 1,
      "message": "Requests will be proxied to remote/cluster keystone only if the X-Cluster-ID is sent in the request header. \nhttps://github.com/Juniper/contrail/blob/master/pkg/apisrv/keystone/api.go#L249",
      "parentUuid": "96d55656_139f2d90",
      "revId": "dfa352a7f956bccaebcf0f4108b6a0b60ede6fb1",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90189d60_58169ad6",
        "filename": "pkg/testutil/integration/keystone_fake.go",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-10-23T20:35:20Z",
      "side": 1,
      "message": "I would opt for similar error handling approach like in production code - pass errs everywhere and handle them in top level.\n\nI know that NewKeystoneServerFake is meant to be a testing function, so let\u0027s keep it like it is, but here `withKeystoneUser` can return (*ketstone.Keystone, error) and this can be handled in NewKeystoneServerFake. That makes the signature less polluted and easier to reuse in other code (I know that this func has low reuse probability, but I would try to stick to this). The resulting code handles errors like any other code.",
      "revId": "dfa352a7f956bccaebcf0f4108b6a0b60ede6fb1",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca0169aa_548c009e",
        "filename": "pkg/testutil/integration/keystone_fake.go",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 558
      },
      "writtenOn": "2019-10-29T11:22:27Z",
      "side": 1,
      "message": "Good idea. For this example I\u0027d like to keep NewKeystoneServerFake as place for assertion.\n\nGenerally I\u0027d like not to pollute integration tests\u0027 code with bare assertions, to make them shorter and arguably more readable, so I do assertions on lower levels. But this solution is optimal.",
      "parentUuid": "90189d60_58169ad6",
      "revId": "dfa352a7f956bccaebcf0f4108b6a0b60ede6fb1",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0e80c37_4ece28e8",
        "filename": "pkg/testutil/integration/keystone_fake.go",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 565
      },
      "writtenOn": "2019-10-29T15:22:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ca0169aa_548c009e",
      "revId": "dfa352a7f956bccaebcf0f4108b6a0b60ede6fb1",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    }
  ]
}