name: Test Neutron Router
description: |
  Integration test for neutron router endpoint.

cleanup:
- path: /logical-router/85e05429-aebc-4d37-be73-a2a4f689c1f1
- path: /virtual-machine-interface/cbd7abe4-f21c-4e30-964d-cab629cbe657
- path: /virtual-network/eeee7a2e-94f2-44a7-a879-e812e072feef
- path: /virtual-network/a29cd288-12be-4b95-b56e-a564f86d5722
- path: /network-ipam/64f88144-42ae-42d5-b515-53bd0e9ef949
- path: /project/fc73d84f-b578-44d8-9cea-3e76f0493e81

clients:
  default:
    id: alice
    password: alice_password
    insecure: true
    scope:
      project:
        name: admin

test_data:
  project_uuid: &project_uuid fc73d84f-b578-44d8-9cea-3e76f0493e81
  tenant_id: &tenant_id fc73d84fb57844d89cea3e76f0493e81
  ipam_uuid: &ipam_uuid 64f88144-42ae-42d5-b515-53bd0e9ef949
  vn_uuid: &vn_uuid eeee7a2e-94f2-44a7-a879-e812e072feef
  vn_blue_uuid: &vn_blue_uuid a29cd288-12be-4b95-b56e-a564f86d5722
  subnet_uuid: &subnet_uuid 471b32d0-4e6d-4a6c-979b-39ac8aaab4b8
  port_uuid: &port_uuid cbd7abe4-f21c-4e30-964d-cab629cbe657
  router_uuid: &router_uuid 85e05429-aebc-4d37-be73-a2a4f689c1f1

  project: &project
    uuid: *project_uuid
    name: neutron_router_admin_project
    parent_type: domain
    parent_uuid: beefbeef-beef-beef-beef-beefbeef0002
    quota: {}

  context: &context
    user_id: 9bd9578b25844d1ea74ddf59d2c6de8a
    roles:
    - admin
    tenant_id: *tenant_id
    is_admin: true
    tenant: *tenant_id

  create_router_request_resource: &create_router_request_resource
    # Note: id is not passed in the sanity test.
    id: *router_uuid
    external_gateway_info:
    description: ''
    admin_state_up: true
    tenant_id: *tenant_id
    project_id: *tenant_id
    name: ctest-router1-27286582

  router_response: &router_response
    status: ACTIVE
    external_gateway_info:
    fq_name:
    - default-domain
    - neutron_router_admin_project
    - ctest-router1-27286582
    name: ctest-router1-27286582
    gw_port_id:
    admin_state_up: true
    tenant_id: *tenant_id
    # TODO: IDPerms.{Created,LastModified} aren't filled on creation.
    #created_at: $datetime_iso
    #updated_at: $datetime_iso
    shared: false
    id: *router_uuid
    description: ''

  expected_logical_router: &expected_logical_router
    uuid: *router_uuid
    parent_uuid: *project_uuid
    parent_type: project
    name: ctest-router1-27286582
    display_name: ctest-router1-27286582
    fq_name:
    - default-domain
    - neutron_router_admin_project
    - ctest-router1-27286582
    id_perms:
      enable: true

  ipam_blue: &ipam_blue
    uuid: *ipam_uuid
    display_name: ipam_blue
    ipam_subnet_method: "user-defined-subnet"
    parent_type: project
    fq_name:
      - default-domain
      - neutron_router_admin_project
      - ipam_blue

  vn_blue: &vn_blue
    fq_name:
      - default-domain
      - neutron_router_admin_project
      - vn_blue
    uuid: *vn_blue_uuid
    display_name: blue
    parent_type: project
    address_allocation_mode: user-defined-subnet-only
    network_ipam_refs:
      - uuid: *ipam_uuid
        to:
          - default-domain
          - neutron_router_admin_project
          - ipam_blue
        attr:
          ipam_subnets:
            - subnet_uuid: *subnet_uuid
              subnet:
                ip_prefix: "10.0.0.0"
                ip_prefix_len: 24
              default_gateway: "10.0.0.1"

  port_blue: &port_blue
    id: *port_uuid
    network_id: *vn_blue_uuid
    tenant_id: *tenant_id
    # project_id: *tenant_id


workflow:
#Set up
- name: Create project
  request:
    path: /projects
    method: POST
    expected: [200]
    data:
      project: *project
  expect:
    project: *project

- name: Create ipam
  request:
    path: /network-ipams
    method: POST
    expected: [200]
    data:
      network-ipam: *ipam_blue
  expect:
    network-ipam: *ipam_blue

- name: Create virtual network with subnet
  request:
    path: /virtual-networks
    method: POST
    expected: [200]
    data:
      virtual-network: *vn_blue
  expect:
    virtual-network: *vn_blue

- name: Create vmi
  request:
    path: /neutron/port
    method: POST
    expected: [200]
    data:
      data:
        fields:
        resource:
          <<: *port_blue
          admin_state_up: true
        filters:
      context:
        <<: *context
        roles:
          - heat_stack_owner
          - admin
        type: port
        operation: CREATE
  expect:
    <<: *port_blue
    fixed_ips:
      - subnet_id: *subnet_uuid
        ip_address: $ip_address

# Router tests
- name: Router read all
  request:
    path: /neutron/router
    method: POST
    expected: [200]
    data:
      data:
        fields: []
        filters:
          tenant_id:
          - *tenant_id
      context:
        <<: *context
        roles:
        - heat_stack_owner
        - admin
        request_id: req-4de97c6b-9db7-4ada-9008-7083ec6f3ded
        operation: READALL
        type: router
  expect: []

- name: Create router
  request:
    path: /neutron/router
    method: POST
    expected: [200]
    data:
      data:
        fields:
        resource:
          *create_router_request_resource
        filters:
      context:
        <<: *context
        request_id: req-509281de-2e5f-4ce9-a682-06cb05916a70
        operation: CREATE
        type: router
  expect:
    *router_response

- name: Check the created logical router
  request:
    path: /logical-router/85e05429-aebc-4d37-be73-a2a4f689c1f1
    method: GET
    expected: [200]
  expect:
    logical-router:
      *expected_logical_router

- name: Read router, specifying all the fields
  request:
    path: /neutron/router
    method: POST
    expected: [200]
    data:
      data:
        fields:
        - status
        - fq_name
        - tenant_id
        - tags
        - project_id
        - id
        id: *router_uuid
        filters:
      context:
        <<: *context
        request_id: req-a948a397-a7b9-46a4-893f-ab64f4486f35
        operation: READ
        type: router
  expect:
    *router_response

- name: Create network
  request:
    path: /neutron/network
    method: POST
    expected: [200]
    data:
      data:
        fields:
        resource:
          # Note: id is not passed in the sanity test.
          id: *vn_uuid
          router:external: true
          description: ''
          tenant_id: *tenant_id
          admin_state_up: true
          policys: ''
          vpc:route_table: ''
          shared: false
          port_security_enabled: true
          project_id: *tenant_id
          name: ctest-ext_vn-18679439
        filters:
      context:
        <<: *context
        request_id: req-e745949a-064b-4611-b99e-d1fe8932223d
        operation: CREATE
        type: network
  expect:
    status: ACTIVE
    router:external: true
    subnets: []
    fq_name:
    - default-domain
    - neutron_router_admin_project
    - ctest-ext_vn-18679439
    name: ctest-ext_vn-18679439
    admin_state_up: true
    tenant_id: *tenant_id
    created_at:
    updated_at:
    port_security_enabled: true
    shared: false
    project_id: *tenant_id
    id: *vn_uuid
    description: ''

- name: Update router external gateway
  request:
    path: /neutron/router
    method: POST
    expected: [200]
    data:
      data:
        fields:
        resource:
          external_gateway_info:
            network_id: *vn_uuid
        id: *router_uuid
        filters:
      context:
        <<: *context
        request_id: req-d8becf44-d071-44ae-a3ee-7ba1502dafaf
        operation: UPDATE
        type: router
  expect:
    <<: *router_response
    external_gateway_info:
      network_id: *vn_uuid
      enable_snat: true

- name: Check the updated logical router
  request:
    path: /logical-router/85e05429-aebc-4d37-be73-a2a4f689c1f1
    method: GET
    expected: [200]
  expect:
    logical-router:
      <<: *expected_logical_router
      virtual_network_refs:
      - uuid: *vn_uuid

- name: Read router without specifying fields
  request:
    path: /neutron/router
    method: POST
    expected: [200]
    data:
      data:
        fields:
        id: *router_uuid
        filters:
      context:
        <<: *context
        request_id: req-a948a397-a7b9-46a4-893f-ab64f4486f35
        operation: READ
        type: router
  expect:
    <<: *router_response
    external_gateway_info:
      network_id: *vn_uuid
      enable_snat: true

- name: Router add interface with subnet
  request:
    path: /neutron/router
    method: POST
    expected: [200]
    data:
      data:
        fields:
        resource:
          subnet_id: *subnet_uuid
        id: *router_uuid
        filters:
      context:
        <<: *context
        request_id: req-79d7b75c-a990-4a79-b8e9-5e6d05b058dd
        operation: ADDINTERFACE
        type: router
  expect:
    subnet_id: *subnet_uuid
    tenant_id: *tenant_id
    port_id: $uuid
    id: *router_uuid

- name: Router delete interface with subnet
  request:
    path: /neutron/router
    method: POST
    expected: [200]
    data:
      data:
        fields:
        resource:
          subnet_id: *subnet_uuid
        id: *router_uuid
        filters:
      context:
        <<: *context
        request_id: req-f93a8cea-28d0-410c-9763-e13816104992
        operation: DELINTERFACE
        type: router
  expect:
    subnet_id: *subnet_uuid
    tenant_id: *tenant_id
    port_id: $uuid
    id: *router_uuid

- name: Router add interface with port
  request:
    path: /neutron/router
    method: POST
    expected: [200]
    data:
      data:
        fields:
        resource:
          port_id: *port_uuid
        id: *router_uuid
        filters:
      context:
        <<: *context
        request_id: req-6d97ee33-3729-4191-ba61-c8bdf49d233f
        operation: ADDINTERFACE
        type: router
  expect:
    subnet_id: $uuid
    tenant_id: *tenant_id
    port_id: *port_uuid
    id: *router_uuid

- name: Router delete interface with port
  request:
    path: /neutron/router
    method: POST
    expected: [200]
    data:
      data:
        fields:
        resource:
          port_id: *port_uuid
        id: *router_uuid
        filters:
      context:
        <<: *context
        request_id: req-476a621e-ce9a-48b6-aa4e-d77be48e1cb2
        operation: DELINTERFACE
        type: router
  expect:
    subnet_id: $uuid
    tenant_id: *tenant_id
    port_id: *port_uuid
    id: *router_uuid

- name: Router add interface without parameters
  request:
    path: /neutron/router
    method: POST
    expected: [400]
    data:
      data:
        field:
        resource:
        id: *router_uuid
        filters:
      context:
        <<: *context
        request_id: req-790ca559-1d2c-4996-a73a-237ff8659f75
        operation: ADDINTERFACE
        type: router

# TODO: ADDINTERFACE with invalid port
# TODO: ADDINTERFACE with invalid subnet

# TODO: ADDINTERFACE with duplicate subnet

- name: Delete router
  request:
    path: /neutron/router
    method: POST
    expected: [200]
    data:
      data:
        fields:
        id: *router_uuid
        filters:
      context:
        <<: *context
        request_id: req-bb7afe67-8806-4e47-ad5c-ee1a63416f5c
        operation: DELETE
        type: router
  expect: null

- name: Check that the logical-router has been deleted
  request:
    path: /logical-router/85e05429-aebc-4d37-be73-a2a4f689c1f1
    method: GET
    expected: [404]

- name: Create router with external gateway
  request:
    path: /neutron/router
    method: POST
    expected: [200]
    data:
      data:
        fields:
        resource:
          <<: *create_router_request_resource
          external_gateway_info:
            network_id: *vn_uuid
            enable_snat: true
        filters:
      context:
        <<: *context
        request_id: req-1bed8c5b-9971-48c7-914f-bc9e2056dc72
        operation: CREATE
        type: router
  expect:
    <<: *router_response
    external_gateway_info:
      network_id: *vn_uuid
      enable_snat: true

- name: Check the created logical router's virtual network refs
  request:
    path: /logical-router/85e05429-aebc-4d37-be73-a2a4f689c1f1
    method: GET
    expected: [200]
  expect:
    logical-router:
      <<: *expected_logical_router
      virtual_network_refs:
      - uuid: *vn_uuid

- name: Delete router (again)
  request:
    path: /neutron/router
    method: POST
    expected: [200]
    data:
      data:
        fields:
        id: *router_uuid
        filters:
      context:
        <<: *context
        request_id: req-9f455d95-f336-4125-be48-42b603051f43
        operation: DELETE
        type: router
  expect: null

- name: Check that the logical-router has been deleted (again)
  request:
    path: /logical-router/85e05429-aebc-4d37-be73-a2a4f689c1f1
    method: GET
    expected: [404]

- name: Delete network
  request:
    path: /neutron/network
    method: POST
    expected: [200]
    data:
      data:
        fields:
        id: *vn_uuid
        filters:
      context:
        <<: *context
        request_id: req-36c2ed1d-9fe5-4b21-b647-8dd6039f60e0
        operation: DELETE
        type: network
  expect: null

- name: Delete virtual network
  request:
    path: /virtual-network/a29cd288-12be-4b95-b56e-a564f86d5722
    method: DELETE
    expected: [200]

- name: Delete ipam
  request:
    path: /network-ipam/64f88144-42ae-42d5-b515-53bd0e9ef949
    method: DELETE
    expected: [200]

- name: Delete project
  request:
    path: /project/fc73d84f-b578-44d8-9cea-3e76f0493e81
    method: DELETE
    expected: [200]
