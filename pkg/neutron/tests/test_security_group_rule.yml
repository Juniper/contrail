name: Security Group Rules Test
description: security group rules test
cleanup:
- path: /security-group/703ebf8e-c8cd-4d4e-bbc1-d1e059cf73a4
- path: /project/bee123ef-b2ad-4a15-896b-4011cb4d00b3

test_data:
  project: &project
    uuid: bee123ef-b2ad-4a15-896b-4011cb4d00b3
    name: neutron_security_group_rule_admin_project
    parent_type: domain
    parent_uuid: beefbeef-beef-beef-beef-beefbeef0002
    quota: {}

  sg: &sg
    uuid: 703ebf8e-c8cd-4d4e-bbc1-d1e059cf73a4
    name: ctest-test_sec_group-41776334
    parent_uuid: bee123ef-b2ad-4a15-896b-4011cb4d00b3

  sgr_create_request: &sgr_create_request
    data:
      fields:
      resource:
        id: 32ad456e-16ae-44c9-b93e-e4cf9708a3d2
        remote_group_id:
        direction: egress
        protocol: udp
        remote_ip_prefix: 83.44.189.0/24
        port_range_max: 9000
        security_group_id: 703ebf8e-c8cd-4d4e-bbc1-d1e059cf73a4
        tenant_id: bee123efb2ad4a15896b4011cb4d00b3
        port_range_min: 9000
        ethertype: IPv4
        project_id: bee123efb2ad4a15896b4011cb4d00b3
      filters:
    context:
      user_id: a31e0ebced7e41879141c3969bab6647
      roles:
        - admin
      tenant_id: bee123efb2ad4a15896b4011cb4d00b3
      is_admin: true
      request_id: req-0a3d96b4-d3bb-4763-a242-7612e03c5963
      operation: CREATE
      type: security_group_rule
      tenant: bee123efb2ad4a15896b4011cb4d00b3

  sgr_create_response: &sgr_create_response
    remote_group_id:
    direction: egress
    remote_ip_prefix: 83.44.189.0/24
    protocol: udp
    ethertype: IPv4
    port_range_max: 9000
    security_group_id: 703ebf8e-c8cd-4d4e-bbc1-d1e059cf73a4
    port_range_min: 9000
    tenant_id: bee123efb2ad4a15896b4011cb4d00b3
    id: 32ad456e-16ae-44c9-b93e-e4cf9708a3d2

  default_security_group_rules: &default_security_group_rules
    - created_at: ""
      direction: ingress
      ethertype: IPv4
      id: $uuid
      port_range_max: 65535
      port_range_min: 0
      protocol: any
      remote_group_id: $uuid
      remote_ip_prefix: ""
      security_group_id: $uuid
      tenant_id: bee123efb2ad4a15896b4011cb4d00b3
      updated_at: ""
    - created_at: ""
      direction: ingress
      ethertype: IPv6
      id: $uuid
      port_range_max: 65535
      port_range_min: 0
      protocol: any
      remote_group_id: $uuid
      remote_ip_prefix: ""
      security_group_id: $uuid
      tenant_id: bee123efb2ad4a15896b4011cb4d00b3
      updated_at: ""
    - created_at: ""
      direction: egress
      ethertype: IPv4
      id: $uuid
      port_range_max: 65535
      port_range_min: 0
      protocol: any
      remote_group_id: ""
      remote_ip_prefix: 0.0.0.0/0
      security_group_id: $uuid
      tenant_id: bee123efb2ad4a15896b4011cb4d00b3
      updated_at: ""
    - created_at: ""
      direction: egress
      ethertype: IPv6
      id: $uuid
      port_range_max: 65535
      port_range_min: 0
      protocol: any
      remote_group_id: ""
      remote_ip_prefix: ::/0
      security_group_id: $uuid
      tenant_id: bee123efb2ad4a15896b4011cb4d00b3
      updated_at: ""

  custom_sg_rule: &custom_sg_rule
    # first four rules are default. Here We care about custom newly created rule.
    - $any
    - $any
    - $any
    - $any
    - created_at: $datetime_iso
      direction: egress
      ethertype: IPv4
      id: 32ad456e-16ae-44c9-b93e-e4cf9708a3d2
      port_range_max: 9000
      port_range_min: 9000
      protocol: udp
      remote_group_id: ""
      remote_ip_prefix: 83.44.189.0/24
      security_group_id: 703ebf8e-c8cd-4d4e-bbc1-d1e059cf73a4
      tenant_id: bee123efb2ad4a15896b4011cb4d00b3
      updated_at: $datetime_iso

  bare_minimum_readall_request: &bare_minimum_readall_request
    data:
      fields: []
      filters:
        tenant_id:
          - bee123efb2ad4a15896b4011cb4d00b3
    context:
      roles:
        - admin
      is_admin: true
      operation: READALL
      type: security_group_rule

  non_admin_readall_request: &non_admin_readall_request
    data:
      fields: []
      filters:
        tenant_id:
          - bee123efb2ad4a15896b4011cb4d00b3
    context:
      operation: READALL
      type: security_group_rule

  sgr_readall_request: &sgr_readall_request
    data:
      fields: []
      filters:
        tenant_id:
          - bee123efb2ad4a15896b4011cb4d00b3
    context:
      user_id: 87e9e49b21e547baac78b6d81430aa9b
      roles:
        - admin
      tenant_id: bee123efb2ad4a15896b4011cb4d00b3
      is_admin: true
      request_id: req-bf656685-7960-4f7c-9239-5d2f20d3fb4b
      operation: READALL
      type: security_group_rule
      tenant: bee123efb2ad4a15896b4011cb4d00b3

clients:
  default:
    id: alice
    password: alice_password
    insecure: true
    scope:
      project:
        name: admin

workflow:
- name: create project
  request:
    path: /projects
    method: POST
    expected: [200]
    data:
      project: *project
  expect:
    project: *project

- name: create security group
  request:
    path: /security-groups
    method: POST
    expected: [200]
    data:
      security-group: *sg
  expect:
    security-group: *sg

- name: readall security group rules with minimal parameter set
  request:
    path: /neutron/security_group_rule
    method: POST
    expected: [200]
    data: *bare_minimum_readall_request
  expect: *default_security_group_rules

- name: readall security group rules for non admin user
  request:
    path: /neutron/security_group_rule
    method: POST
    expected: [200]
    data: *non_admin_readall_request
  expect: []

- name: read default security group rules using request from sanity tests
  request:
    path: /neutron/security_group_rule
    method: POST
    expected: [200]
    data: *sgr_readall_request
  expect: *default_security_group_rules

- name: create security group rule
  request:
    path: /neutron/security_group_rule
    method: POST
    expected: [200]
    data: *sgr_create_request
  expect: *sgr_create_response

- name: create again should fail with already exists error
  request:
    path: /neutron/security_group_rule
    method: POST
    expected: [400]
    data: *sgr_create_request
  expect:
    exception: SecurityGroupRuleExists

- name: read all with new security group rule
  request:
    path: /neutron/security_group_rule
    method: POST
    expected: [200]
    data: *sgr_readall_request
  expect: *custom_sg_rule

- name: Delete security group
  request:
    path: /security-group/703ebf8e-c8cd-4d4e-bbc1-d1e059cf73a4
    method: DELETE
    expected: [200]
  expect: null

- name: Delete project
  request:
    path: /project/bee123ef-b2ad-4a15-896b-4011cb4d00b3
    method: DELETE
    expected: [200]
  expect: null
