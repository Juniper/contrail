name: Test Neutron Floating IP
description: |
  Integration test for neutron floating ip endpoint.
cleanup:
  - path: /logical-router/beefbeef-beef-beef-beef-beefbeef1005
  - path: /virtual-machine-interfaces/6ad55ed6-f8b6-4d9d-bff8-3078ad6812ba
  - path: /virtual-network/vn_floating_blue
  - path: /network-ipam/test_ipam_floating_blue
# TODO: make sure that everything is cleaned

test_data:
  admin_project: &admin_project_floating_ip
    uuid: admin_floating_project_uuid
    name: admin_floating_proj
    parent_type: domain
    parent_uuid: beefbeef-beef-beef-beef-beefbeef0002
    quota: {}

  network_ipam_blue: &network_ipam_blue
    network_ipam_mgmt:
      host_routes:
        route:
          - prefix: "test_prefix"
            next_hop: "1.2.3.5"
    uuid: test_ipam_floating_blue
    display_name: test_ipam_floating_blue
    ipam_subnet_method: "user-defined-subnet"
    parent_type: project
    parent_uuid: admin_floating_project_uuid
    fq_name: ["default-domain","admin","test_ipam_floating_blue"]

  vn_floating_blue: &vn_floating_blue
    fq_name: ["default-domain", "admin_floating_proj", "vn_floating_blue"]
    uuid: vn_floating_blue
    display_name: blue
    parent_type: project
    parent_uuid: admin_floating_project_uuid
    address_allocation_mode: user-defined-subnet-only
    route_target_list:
      route_target: ["100:200"]
    network_ipam_refs:
      - uuid: test_ipam_floating_blue
        attr:
          ipam_subnets:
            - subnet_uuid: "054ca01e-cef3-444e-b4d5-4ac16554ac3d"
              subnet:
                ip_prefix: "10.0.0.0"
                ip_prefix_len: 24
              allocation_pools:
                - start: "10.0.0.0"
                  end: "10.0.0.255"

  logical_router: &logical_router
    uuid: d8eea6bd-9d02-4411-8e72-8f06b4e5fc27
    name: logical_router_1
    fq_name: ["default-domain", "admin_floating_proj", "logical_router_1"]
    parent_type: project
    virtual_machine_interface_refs:
    - to: ["default-domain", "admin_floating_proj", "vmi_lrouter"]
    id_perms:
      enable: true

  vmi_floating: &vmi_floating
    uuid: 6ad55ed6-f8b6-4d9d-bff8-3078ad6812ba
    parent_type: project
    parent_uuid: admin_floating_project_uuid
    fq_name: ["default-domain", "admin_floating_proj", "vmi_floating"]
    virtual_network_refs:
    - to: ["default-domain", "admin_floating_proj", "vn_floating_blue"]

  vmi_lrouter: &vmi_lrouter
    uuid: e26e3339-a672-4da0-ba83-0c384ed41987
    parent_type: project
    parent_uuid: admin_floating_project_uuid
    fq_name: ["default-domain", "admin_floating_proj", "vmi_lrouter"]
    virtual_network_refs:
    - to: ["default-domain", "admin_floating_proj", "vn_floating_blue"]

  floating_ip_pool: &floating_ip_pool
    fq_name: ["default-domain", "admin_floating_proj", "vn_floating_blue", "test_floating_ip_pool"]
    uuid: "test_floating_ip_pool"
    display_name: "test_floating_ip_pool"
    parent_type: "virtual-network"
    parent_uuid: "vn_floating_blue"
    floating_ip_pool_subnets:
      subnet_uuid:
        - "054ca01e-cef3-444e-b4d5-4ac16554ac3d"

  floating_ip: &floating_ip
    fq_name: ["default-domain", "admin_floating_proj", "vn_floating_blue", "test_floating_ip_pool", "aaaaaaaa-beef-1dad-aaaa-beefbeefbeef"]
    uuid: "aaaaaaaa-beef-1dad-aaaa-beefbeefbeef"
    display_name: "aaaaaaaa-beef-1dad-aaaa-beefbeefbeef"
    parent_type: "floating-ip-pool"
    parent_uuid: "test_floating_ip_pool"
    floating_ip_address: "10.0.0.1"
    project_refs:
      - uuid: admin_floating_project_uuid

  floating_ip_active_status: &floating_ip_active_status
    fq_name: ["default-domain", "admin_floating_proj", "vn_floating_blue", "test_floating_ip_pool", "floating_ip_ACTIVE"]
    uuid: "7c9e5e65-3993-47cc-903f-a1e748c62bb5"
    display_name: "floating_ip_ACTIVE"
    parent_type: floating-ip-pool # TODO: make sure if that resource name is valid
    parent_uuid: "test_floating_ip_pool"
    floating_ip_address: "10.0.0.2"
    project_refs:
    - uuid: admin_floating_project_uuid
    virtual_machine_interface_refs:
      - to: ["default-domain", "admin_floating_proj", "vmi_floating"]

clients:
  default:
    id: alice
    password: alice_password
    insecure: true
    scope:
      project:
        name: admin

workflow:
- name: create project
  request:
    path: /projects
    method: POST
    expected:
    - 200
    data:
      project: *admin_project_floating_ip
  expect:
    project: *admin_project_floating_ip

- name: create network ipam blue
  request:
    path: /network-ipams
    method: POST
    expected:
    - 200
    data:
      network-ipam: *network_ipam_blue
  expect:
    network-ipam: *network_ipam_blue

- name: create virtual network blue
  request:
    path: /virtual-networks
    method: POST
    expected:
    - 200
    data:
      virtual-network: *vn_floating_blue
  expect:
    virtual-network: *vn_floating_blue

- name: create floating ip pool
  request:
    path: /floating-ip-pools
    method: POST
    expected:
    - 200
    data:
      floating-ip-pool: *floating_ip_pool
  expect: null

- name: create virtual machine interface of floating ip
  request:
    path: /virtual-machine-interfaces
    method: POST
    expected:
    - 200
    data:
      virtual-machine-interface: *vmi_floating
  expect:
    virtual-machine-interface: *vmi_floating

- name: create virtual machine interface for logical router
  request:
    path: /virtual-machine-interfaces
    method: POST
    expected:
    - 200
    data:
      virtual-machine-interface: *vmi_lrouter
  expect:
    virtual-machine-interface: *vmi_lrouter

- name: create floating ip
  request:
    path: /floating-ips
    method: POST
    expected:
    - 200
    data:
      floating-ip: *floating_ip
  expect:
    floating-ip: *floating_ip

- name: create logical router
  request:
    path: /logical-routers
    method: POST
    expected:
    - 200
    data:
      logical-router: *logical_router
  expect:
    logical-router: *logical_router

- name: READ floating ip via vnc_openstack
  request:
    path: /neutron/floatingip
    method: POST
    expected: [200]
    data:
      data:
        fields: []
        id: aaaaaaaa-beef-1dad-aaaa-beefbeefbeef
        filters:
      context:
        user_id: 06be3763c8224dd5a343e3d95d87c1d2
        roles:
          - admin
        tenant_id: 8cdb5412f5974b38a69f2f9d1ae969b7
        is_admin: true
        request_id: req-bdde67ed-1a62-42ee-9c27-142645d09be7
        operation: READ
        type: floatingip
        tenant: 8cdb5412f5974b38a69f2f9d1ae969b7
  expect:
    status: DOWN
    description: ""
    tenant_id: admin_floating_project_uuid
    floating_network_id: vn_floating_blue
    fixed_ip_address: ""
    floating_ip_address: "10.0.0.1"
    port_id: ""
    router_id: ""
    id: "aaaaaaaabeef1dadaaaabeefbeefbeef"

- name: delete floating ip
  request:
    path: /floating-ip/aaaaaaaa-beef-1dad-aaaa-beefbeefbeef
    method: DELETE
    expected:
    - 200
  expect: null

- name: Floating IP read all
  request:
    path: /neutron/floatingip
    method: POST
    expected: [200]
    data:
      data:
        fields: []
        filters:
          tenant_id:
          - 8cdb5412f5974b38a69f2f9d1ae969b7
      context:
        user_id: 06be3763c8224dd5a343e3d95d87c1d2
        roles:
        - heat_stack_owner
        - admin
        tenant_id: 8cdb5412f5974b38a69f2f9d1ae969b7
        is_admin: true
        request_id: req-c4fcfcc2-7437-45f0-ad86-16561905617b
        operation: READALL
        type: floatingip
        tenant: 8cdb5412f5974b38a69f2f9d1ae969b7
  expect: []

- name: Create floating ip with ACTIVE status
  request:
    path: /floating-ips
    method: POST
    expected: [200]
    data:
      floating-ip: *floating_ip_active_status
  expect:
    floating-ip: *floating_ip_active_status

- name: Read floating ip with vmi assigend and assert that status is ACTIVE
  request:
    path: /neutron/floatingip
    method: POST
    expected: [200]
    data:
      data:
        fields: []
        id: 7c9e5e65-3993-47cc-903f-a1e748c62bb5
        filters:
      context:
        user_id: 06be3763c8224dd5a343e3d95d87c1d2
        roles:
        - admin
        tenant_id: 8cdb5412f5974b38a69f2f9d1ae969b7
        is_admin: true
        operation: READ
        type: floatingip
        tenant: 8cdb5412f5974b38a69f2f9d1ae969b7
  expect:
    status: ACTIVE
    # TODO assert routerID and another parameters of objects that appeared in Refs

- name: Delete floating ip with ACTIVE status
  request:
    path: /floating-ip/7c9e5e65-3993-47cc-903f-a1e748c62bb5
    method: DELETE
    expected: [200]
  expect: null
