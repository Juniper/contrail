global_configuration:
  CONTAINER_REGISTRY: {%if cluster.ContainerRegistry %}{{ cluster.ContainerRegistry }}{%else%}opencontrailnightly{%endif%}
  REGISTRY_PRIVATE_INSECURE: {%if cluster.RegistryPrivateInsecure %}{{cluster.RegistryPrivateInsecure}}{%else%}false{%endif%}
  {%if cluster.ContainerRegistryUsername %}CONTAINER_REGISTRY_USERNAME: {{ cluster.ContainerRegistryUsername }}{%endif%}
  {%if cluster.ContainerRegistryPassword %}CONTAINER_REGISTRY_PASSWORD: {{ cluster.ContainerRegistryPassword }}{%endif%}
provider_config:
  bms:
    ssh_user: {%if defaultSSHUser %}{{defaultSSHUser}}{%else%}root{%endif%}
    ssh_pwd: {%if defaultSSHPassword %}{{defaultSSHPassword}}{%else%}c0ntrail123{%endif%}
    {%if defaultSSHKey %}ssh_public_key: {{ defaultSSHKey }}{%endif%}
    ntpserver: {{ cluster.NTPServer }}
    {%if cluster.DomainSuffix %}domainsuffix: {{ cluster.DomainSuffix }}{%endif%}
instances:
    {% for node in nodes %}
  {{ node.Hostname }}:
    ip: {{ node.IPAddress }}
    {% for cred in credentials %}{% for cred_ref in node.CredentialRefs %}{%if cred_ref.UUID == cred.UUID %}
    ssh_user: {{ cred.SSHUser }}
    ssh_pwd: {{ cred.SSHPassword }}
    {% for key in keypairs %}{% for key_ref in cred.KeypairRefs %}{%if key_ref.UUID == key.UUID %}
    ssh_public_key: {{ key.SSHPublicKey }}
    {%endif%}{%endfor%}{%endfor%}
    {%endif%}{%endfor%}{%endfor%}
    provider: bms
    {%if node.Type == "esxi" %}esxi_host: {{ node.EsxiInfo.EsxiName }}{%endif%}
    roles:
      {% for config_node in cluster.ContrailConfigNodes %}{% for node_ref in config_node.NodeRefs %}{%if node_ref.UUID == node.UUID %}config:
      {%if cluster.EnableZTP && cluster.Orchestrator == "openstack"%}dhcp:{%endif%}{%endif%}{%endfor%}{%endfor%}
      {% for configdb_node in cluster.ContrailConfigDatabaseNodes %}{% for node_ref in configdb_node.NodeRefs %}{%if node_ref.UUID == node.UUID %}config_database:{%endif%}{%endfor%}{%endfor%}
      {% for control_node in cluster.ContrailControlNodes %}{% for node_ref in control_node.NodeRefs %}{%if node_ref.UUID == node.UUID %}control:{%endif%}{%endfor%}{%endfor%}
      {% for webui_node in cluster.ContrailWebuiNodes %}{% for node_ref in webui_node.NodeRefs %}{%if node_ref.UUID == node.UUID %}webui:{%endif%}{%endfor%}{%endfor%}
      {% for analytics_node in cluster.ContrailAnalyticsNodes %}{% for node_ref in analytics_node.NodeRefs %}{%if node_ref.UUID == node.UUID %}analytics:{%endif%}{%endfor%}{%endfor%}
      {% for analyticsdb_node in cluster.ContrailAnalyticsDatabaseNodes %}{% for node_ref in analyticsdb_node.NodeRefs %}{%if node_ref.UUID == node.UUID %}analytics_database:{%endif%}{%endfor%}{%endfor%}
      {% for analytics_alarm_node in cluster.ContrailAnalyticsAlarmNodes %}{% for node_ref in analytics_alarm_node.NodeRefs %}{%if node_ref.UUID == node.UUID %}analytics_alarm:{%endif%}{%endfor%}{%endfor%}
      {% for analytics_snmp_node in cluster.ContrailAnalyticsSNMPNodes %}{% for node_ref in analytics_snmp_node.NodeRefs %}{%if node_ref.UUID == node.UUID %}analytics_snmp:{%endif%}{%endfor%}{%endfor%}
      {% for vrouter_node in cluster.ContrailVrouterNodes %}{% for node_ref in vrouter_node.NodeRefs %}{%if node_ref.UUID == node.UUID %}vrouter:
        {%if vrouter_node.DefaultGateway != "" %}VROUTER_GATEWAY: {{ vrouter_node.DefaultGateway }}{%endif%}
        {%if vrouter_node.Type == "dpdk" %}
        CPU_CORE_MASK: {{ vrouter_node.DPDKInfo.CPUCoreMask }}
        DPDK_UIO_DRIVER: {{ vrouter_node.DPDKInfo.DPDKUioDriver }}
        HUGE_PAGES: {{ vrouter_node.DPDKInfo.HugePages }}
        AGENT_MODE: dpdk
        {%elif vrouter_node.Type == "sriov" %}
        SRIOV: true
        SRIOV_VF: {{ vrouter_node.SriovInfo.SriovVF }}
        SRIOV_PHYSICAL_INTERFACE: {{ vrouter_node.SriovInfo.SriovPhysicalInterface }}
        SRIOV_PHYS_NET: {{ vrouter_node.SriovInfo.SriovPhysicalNet }}
        {%endif%}
        {%endif%}{%endfor %}{%endfor%}
      {% for vcenter_fabric_manager_node in cluster.ContrailVcenterFabricManagerNodes %}{% for node_ref in vcenter_fabric_manager_node.NodeRefs %}{%if node_ref.UUID == node.UUID %}vcenter_fabric_manager:{%endif%}{%endfor%}{%endfor%}
      {% for vcenter_plugin_node in vcenter.VCenterPluginNodes %}{% for node_ref in vcenter_plugin_node.NodeRefs %}{%if node_ref.UUID == node.UUID %}vcenter_plugin:{%endif%}{%endfor%}{%endfor%}
      {% for vcenter_manager_node in vcenter.VCenterManagerNodes %}{% for node_ref in vcenter_manager_node.NodeRefs %}{%if node_ref.UUID == node.UUID %}vcenter_manager:
        ESXI_USERNAME: {{ node.EsxiInfo.Username }}
        ESXI_PASSWORD: {{ node.EsxiInfo.Password }}
        {%endif%}{%endfor%}{%endfor%}
      {% for csn_node in cluster.ContrailServiceNodes %}{% for node_ref in csn_node.NodeRefs %}{%if node_ref.UUID == node.UUID %}vrouter:
        TSN_EVPN_MODE: true
        {%if csn_node.DefaultGateway != "" %}VROUTER_GATEWAY: {{ csn_node.DefaultGateway }}{%endif%}
        {%endif%}{%endfor %}{%endfor%}
      {% for dhcp_node in cluster.ContrailZTPDHCPNodes %}{% for node_ref in dhcp_node.NodeRefs %}{%if node_ref.UUID == node.UUID %}dhcp:{%endif%}{%endfor%}{%endfor%}
      {% for tftp_node in cluster.ContrailZTPTFTPNodes %}{% for node_ref in tftp_node.NodeRefs %}{%if node_ref.UUID == node.UUID %}tftp:{%endif%}{%endfor%}{%endfor%}
      {% for k8s_master_node in k8sCluster.KubernetesMasterNodes %}{% for node_ref in k8s_master_node.NodeRefs %}{%if node_ref.UUID == node.UUID %}k8s_master:{%endif%}{%endfor%}{%endfor%}
      {% for k8s_node in k8sCluster.KubernetesNodes %}{% for node_ref in k8s_node.NodeRefs %}{%if node_ref.UUID == node.UUID %}k8s_node:{%endif%}{%endfor%}{%endfor%}
      {% for k8s_kubemanager_node in k8sCluster.KubernetesKubemanagerNodes %}{% for node_ref in k8s_kubemanager_node.NodeRefs %}{%if node_ref.UUID == node.UUID %}kubemanager:{%endif%}{%endfor%}{%endfor%}
      {% for openstack_control_node in openstackCluster.OpenstackControlNodes %}{% for node_ref in openstack_control_node.NodeRefs %}{%if node_ref.UUID == node.UUID %}openstack_control:{%endif%}{%endfor %}{%endfor%}
      {% for openstack_network_node in openstackCluster.OpenstackNetworkNodes %}{% for node_ref in openstack_network_node.NodeRefs %}{%if node_ref.UUID == node.UUID %}openstack_network:{%endif%}{%endfor%}{%endfor%}
      {% for openstack_storage_node in openstackCluster.OpenstackStorageNodes %}{% for node_ref in openstack_storage_node.NodeRefs %}{%if node_ref.UUID == node.UUID %}openstack_storage:
        {%if node.DiskPartition != "" %}disk_partition: {{ node.DiskPartition }}{%endif%}{%endif%}{%endfor%}{%endfor%}
      {% for openstack_monitoring_node in openstackCluster.OpenstackMonitoringNodes %}{% for node_ref in openstack_monitoring_node.NodeRefs %}{%if node_ref.UUID == node.UUID %}openstack_monitoring:{%endif%}{%endfor%}{%endfor%}
      {% for openstack_compute_node in openstackCluster.OpenstackComputeNodes %}{% for node_ref in openstack_compute_node.NodeRefs %}{%if node_ref.UUID == node.UUID %}openstack_compute:{%endif%}{%endfor%}{%endfor%}
      {% if appformixCluster %}
      {% for appformix_controller_node in appformixCluster.AppformixControllerNodes %}{% for node_ref in appformix_controller_node.NodeRefs %}{%if node_ref.UUID == node.UUID %}appformix_controller:
          {% if appformixCluster.AppformixVip %}
          keepalived_vrrp_interface: {{ appformix_controller_node.KeepalivedVRRPInterface }}
          {%endif%}
          {%if appformix_controller_node.AnsibleConnection %} connection: {{ appformix_controller_node.AnsibleConnection }} {%endif%}
      {%endif%}{%endfor%}{%endfor%}
      {% for appformix_bare_host_node in appformixCluster.AppformixBareHostNodes %}{% for node_ref in appformix_bare_host_node.NodeRefs %}{%if node_ref.UUID == node.UUID %}appformix_bare_host:
          {%if appformix_bare_host_node.AnsibleConnection %} connection: {{ appformix_bare_host_node.AnsibleConnection }} {%endif%}
      {%endif%}{%endfor%}{%endfor%}
      {% for openstack_control_node in openstackCluster.OpenstackControlNodes %}{% for node_ref in openstack_control_node.NodeRefs %}{%if node_ref.UUID == node.UUID %}appformix_openstack_controller:
          {%if openstack_control_node.AnsibleConnection %} connection: {{ openstack_control_node.AnsibleConnection }} {%endif%}
      {%endif%}{%endfor %}{%endfor%}
      {% for openstack_compute_node in openstackCluster.OpenstackComputeNodes %}{% for node_ref in openstack_compute_node.NodeRefs %}{%if node_ref.UUID == node.UUID %}appformix_compute:
          {%if openstack_compute_node.AnsibleConnection %} connection: {{ openstack_compute_node.AnsibleConnection }} {%endif%}
      {%endif%}{%endfor%}{%endfor%}
      {% for appformix_network_agents_node in appformixCluster.AppformixNetworkAgentsNodes %}{% for node_ref in appformix_network_agents_node.NodeRefs %}{%if node_ref.UUID == node.UUID %}appformix_network_agents:
          {%if appformix_network_agents_node.AnsibleConnection %} connection: {{ appformix_network_agents_node.AnsibleConnection }} {%endif%}
      {%endif%}{%endfor%}{%endfor%}
      {%endif%}
      {% if appformixCluster %}
      {% if monitoredNodes %}
      {% for monitoredNode in monitoredNodes %} 
      {%if monitoredNode.UUID == node.UUID %}appformix_bare_host:
      {%endif%}
      {%endfor%}
      {%endif%}
      {%endif%}
{% for xflow_node in xflowCluster.ClusterInfo.AppformixFlowsNodes %}{% for node_ref in xflow_node.NodeRefs %}{%if node_ref.UUID == node.UUID %}
      appformix_flows:
{%if xflow_node.TelemetryInBandInterfaceName != "" %}
        telemetry_in_band_interface_name: {{ xflow_node.TelemetryInBandInterfaceName }}
{%endif%}
{%endif%}{%endfor%}{%endfor%}
    {%endfor%}

contrail_configuration:
  CONTRAIL_VERSION: {%if cluster.ContrailVersion %}"{{ cluster.ContrailVersion }}"{%else%}latest{%endif%}
  CLOUD_ORCHESTRATOR: {%if cluster.Orchestrator %}{{ cluster.Orchestrator }}{%else%}openstack{%endif%}
  RABBITMQ_NODE_PORT: {%if cluster.RabbitMQPort %}{{ cluster.RabbitMQPort }}{%else%}5673{%endif%}
  {%if cluster.DefaultGateway != "" %}VROUTER_GATEWAY: {{ cluster.DefaultGateway }}{%endif%}
{% if cluster.Orchestrator != "vcenter" %}
  ENCAP_PRIORITY: {%if cluster.EncapPriority %}{{cluster.EncapPriority}}{%else%}MPLSoGRE,MPLSoUDP,VXLAN{%endif%}
  {%endif%}
{% if cluster.Orchestrator == "openstack" %}
  {%if openstackCluster.OpenstackRelease %}OPENSTACK_VERSION: {{openstackCluster.OpenstackRelease}}{%endif%}
  AUTH_MODE: keystone
  KEYSTONE_AUTH_HOST: {%if openstackCluster.OpenstackInternalVip %}{{openstackCluster.OpenstackInternalVip}}{%else%}{% for node in nodes %}{%if openstackCluster.OpenstackControlNodes.0.NodeRefs.0.UUID == node.UUID %}{{node.IPAddress}}{%endif%}{%endfor%}{%endif%}
  KEYSTONE_AUTH_URL_VERSION: {%if cluster.KeystoneVersion %}/{{cluster.KeystoneVersion}}{%else%}/v3{%endif%}
  {% for key_value in cluster.ContrailConfiguration.KeyValuePair %}
  {% if key_value.Key && key_value.Value%}
  {% if key_value.Key == "CONTRAIL_CONTAINER_TAG" %}
  {{key_value.Key}}: "{{key_value.Value}}"
  {%else%}
  {{key_value.Key}}: {{key_value.Value}}
  {%endif%}
  {%endif%}
  {%endfor%}
  {%if cluster.EnableZTP %}
  GENERATE_SSH: True
  USE_OPENSTACK_TFTP: True
  {%endif%}
{% if cluster.ContrailVcenterFabricManagerNodes|length > 0 %}
  VCENTER_SERVER: {%if vcenter.Server %}{{vcenter.Server}}{%endif%}
  VCENTER_DATACENTER: {%if vcenter.Datacenter %}{{vcenter.Datacenter}}{%endif%}
  VCENTER_USERNAME: {%if vcenter.Username %}{{vcenter.Username}}{%endif%}
  VCENTER_PASSWORD: {%if vcenter.Password %}{{vcenter.Password}}{%endif%}
  {%endif%}

kolla_config:
  kolla_globals:
    enable_haproxy: {{openstack.enableHaproxy}}
    {%if openstackCluster.OpenstackInternalVip %}kolla_internal_vip_address: {{openstackCluster.OpenstackInternalVip}}{%endif%}
    {% if openstackCluster.OpenstackRegistry && openstackCluster.OpenstackRegistry != "default" %}docker_registry: {{ openstackCluster.OpenstackRegistry }}{%endif%}
    {%if openstackCluster.OpenstackExternalVip %}kolla_external_vip_address: {{openstackCluster.OpenstackExternalVip}}{%endif%}
    {% for key_value in openstackCluster.KollaGlobals.KeyValuePair %}
    {% if key_value.Key && key_value.Value%}
    {{key_value.Key}}: {{key_value.Value}}
    {%endif%}
    {%endfor%}
  kolla_passwords:
    keystone_admin_password: contrail123
    {% for key_value in openstackCluster.KollaPasswords.KeyValuePair %}
    {% if key_value.Key && key_value.Value%}
    {{key_value.Key}}: {{key_value.Value}}
    {%endif%}
    {%endfor%}
  customize:
    swift-proxy-server/proxy-server.conf: |
      [filter:authtoken]
      service_token_roles_required = True
      service_token_roles = admin
    {% if openstackCluster.Customize %}
    {{ openstackCluster.Customize }}
    {%endif%}
{% if appformixCluster %}
appformix_configuration:
    {% if appformixCluster.AppformixVip %}
    appformix_vip: {{ appformixCluster.AppformixVip }}
    {%endif%}
    appformix_license:  {{ appformixCluster.AppformixLicense }}
    {% for key_value in appformixCluster.AppformixConfiguration.KeyValuePair %}
    {{ key_value.Key }}: {{ key_value.Value }}
    {%endfor%}
{%endif%}
{%endif%}
{% if cluster.Orchestrator == "vcenter" or cluster.Orchestrator == "kubernetes"%}
{% for key_value in cluster.ContrailConfiguration.KeyValuePair %}
  {% if key_value.Key && key_value.Value%}
  {% if key_value.Key == "KUBERNETES_PUBLIC_FIP_POOL" or key_value.Key == "KUBERNETES_CLUSTER_NETWORK" or key_value.Key == "KUBERNETES_CLUSTER_PROJECT"%}
  {{key_value.Key}}: {% autoescape off %}{{key_value.Value}}{% endautoescape %}
  {% elif key_value.Key == "CONTRAIL_CONTAINER_TAG" %}
  {{key_value.Key}}: "{{key_value.Value}}"
  {%else%}
  {{key_value.Key}}: {{key_value.Value}}
  {%endif%}
  {%endif%}
  {%endfor%}
{%endif%}
{% if cluster.Orchestrator == "vcenter" %}
  VCENTER_SERVER: {%if vcenter.Server %}{{vcenter.Server}}{%endif%}
  VCENTER_USERNAME: {%if vcenter.Username %}{{vcenter.Username}}{%endif%}
  VCENTER_PASSWORD: {%if vcenter.Password %}{{vcenter.Password}}{%endif%}
  VCENTER_DATACENTER: {% for vcenter_compute in vcenter.VCenterComputes %}{%if vcenter_compute %}{{vcenter_compute.Datacenter}}{%endif%}{%endfor%}
  VCENTER_DVSWITCH: {% for vcenter_compute in vcenter.VCenterComputes %}{%if vcenter_compute %}{{vcenter_compute.Dvsswitch}}{%endif%}{%endfor%}
  VCENTER_WSDL_PATH: {%if vcenter.WSDLPath %}{{vcenter.WSDLPath}}{%endif%}
  VCENTER_AUTH_PROTOCOL: {%if vcenter.AuthProtocol %}{{vcenter.AuthProtocol}}{%endif%}
{%endif%}

{% if xflowCluster %}
{% with x=xflowCluster.ClusterInfo %}
xflow_configuration:
  {% if x.Clickhouse.RetentionPeriodSecs %}clickhouse_retention_period_secs: {{ x.Clickhouse.RetentionPeriodSecs }}{% endif %}
  {% if x.Clickhouse.RetentionSizeBytes %}clickhouse_retention_size_bytes: {{ x.Clickhouse.RetentionSizeBytes }}{% endif %}
  {% if x.KeepalivedSharedIP %}loadbalancer_collector_vip: {{ x.KeepalivedSharedIP }}{% endif %}
  {% if x.TelemetryInBandCidr %}telemetry_in_band_cidr: {{ x.TelemetryInBandCidr }}{% endif %}
  {% if x.TelemetryInBandManagementVip %}loadbalancer_management_vip: {{ x.TelemetryInBandManagementVip }}{% endif %}
  {% if x.TelemetryInBandVlanID %}telemetry_in_band_vlan_id: {{ x.TelemetryInBandVlanID }}{% endif %}
  {% for kv in x.AppformixFlowsConfiguration.KeyValuePair %}
  {{ kv.Key }}: {% autoescape off %}{{ kv.Value }}{% endautoescape %}
  {% endfor %}
{% endwith %}
{% endif %}
