// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/services/fqname_to_id.go

// Package servicesmock is a generated GoMock package.
package servicesmock

import (
	context "context"
	services "github.com/Juniper/contrail/pkg/services"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockFQNameToIDService is a mock of FQNameToIDService interface
type MockFQNameToIDService struct {
	ctrl     *gomock.Controller
	recorder *MockFQNameToIDServiceMockRecorder
}

// MockFQNameToIDServiceMockRecorder is the mock recorder for MockFQNameToIDService
type MockFQNameToIDServiceMockRecorder struct {
	mock *MockFQNameToIDService
}

// NewMockFQNameToIDService creates a new mock instance
func NewMockFQNameToIDService(ctrl *gomock.Controller) *MockFQNameToIDService {
	mock := &MockFQNameToIDService{ctrl: ctrl}
	mock.recorder = &MockFQNameToIDServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockFQNameToIDService) EXPECT() *MockFQNameToIDServiceMockRecorder {
	return m.recorder
}

// FQNameToID mocks base method
func (m *MockFQNameToIDService) FQNameToID(arg0 context.Context, arg1 *services.FQNameToIDRequest) (*services.FQNameToIDResponse, error) {
	ret := m.ctrl.Call(m, "FQNameToID", arg0, arg1)
	ret0, _ := ret[0].(*services.FQNameToIDResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FQNameToID indicates an expected call of FQNameToID
func (mr *MockFQNameToIDServiceMockRecorder) FQNameToID(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FQNameToID", reflect.TypeOf((*MockFQNameToIDService)(nil).FQNameToID), arg0, arg1)
}
