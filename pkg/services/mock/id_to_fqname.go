// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/services/id_to_fqname.go

// Package servicesmock is a generated GoMock package.
package servicesmock

import (
	context "context"
	services "github.com/Juniper/contrail/pkg/services"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIDToFQNameService is a mock of IDToFQNameService interface
type MockIDToFQNameService struct {
	ctrl     *gomock.Controller
	recorder *MockIDToFQNameServiceMockRecorder
}

// MockIDToFQNameServiceMockRecorder is the mock recorder for MockIDToFQNameService
type MockIDToFQNameServiceMockRecorder struct {
	mock *MockIDToFQNameService
}

// NewMockIDToFQNameService creates a new mock instance
func NewMockIDToFQNameService(ctrl *gomock.Controller) *MockIDToFQNameService {
	mock := &MockIDToFQNameService{ctrl: ctrl}
	mock.recorder = &MockIDToFQNameServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIDToFQNameService) EXPECT() *MockIDToFQNameServiceMockRecorder {
	return m.recorder
}

// IDToFQName mocks base method
func (m *MockIDToFQNameService) IDToFQName(arg0 context.Context, arg1 *services.IDToFQNameRequest) (*services.IDToFQNameResponse, error) {
	ret := m.ctrl.Call(m, "IDToFQName", arg0, arg1)
	ret0, _ := ret[0].(*services.IDToFQNameResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// IDToFQName indicates an expected call of IDToFQName
func (mr *MockIDToFQNameServiceMockRecorder) IDToFQName(arg0, arg1 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IDToFQName", reflect.TypeOf((*MockIDToFQNameService)(nil).IDToFQName), arg0, arg1)
}
