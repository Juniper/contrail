name: Instance IP Test
description:  basic instance ip test
cleanup:
- path: /virtual-network/vn_instance_ip
- path: /network-ipam/test_ipam_instance_ip
- path: /instance-ip/test_instance_ip
test_data:

  admin_project: &admin_project_instance_ip
    uuid: admin_instance_ip_project_uuid
    name: admin_instance_ip_project
    parent_type: domain
    parent_uuid: beefbeef-beef-beef-beef-beefbeef0002
    quota: {}

  network_ipam: &network_ipam
    network_ipam_mgmt:
      host_routes:
        route:
          - prefix: "test_prefix"
            next_hop: "1.2.3.5"
    uuid: test_ipam_instance_ip
    display_name: test_ipam_instance_ip
    parent_type: project
    parent_uuid: admin_instance_ip_project_uuid
    fq_name: ["domain","admin","test_ipam_instance_ip"]

  vn_instance_ip: &vn_instance_ip
    fq_name: ["default", "admin_instance_ip", "vn_instance_ip"]
    uuid: vn_instance_ip
    parent_type: project
    parent_uuid: admin_instance_ip_project_uuid
    route_target_list:
      route_target: ["100:200"]
    network_ipam_refs:
      - uuid: test_ipam_instance_ip
        attr:
          ipam_subnets:
            - subnet_uuid: "054ca01e-cef3-444e-b4d5-4ac16554ac3d"
              subnet:
                ip_prefix: "10.0.0.0"
                ip_prefix_len: 24
            - subnet_uuid: "e76ab7ff-c47d-4faf-aec4-80dcc3658f0b"
              subnet:
                ip_prefix: "20.0.0.0"
                ip_prefix_len: 24

  virtual_router: &virtual_router
    fq_name: ["default-global-system-config", "test_virtual_router"]
    uuid: test_virtual_router 
    parent_type: global_system_config
    parent_uuid: beefbeef-beef-beef-beef-beefbeef0001         

clients:
  default:
    id: alice
    password: alice_password
    domain: default
    insecure: true
    scope:
      project:
        name: admin

workflow:
- name: create project
  request:
    path: /projects
    method: POST
    expected:
    - 201
    data:
      project: *admin_project_instance_ip
  expect:
    project: *admin_project_instance_ip

- name: create network ipam
  request:
    path: /network-ipams
    method: POST
    expected:
    - 201
    data:
      network-ipam: *network_ipam
  expect:
    network-ipam: *network_ipam

- name: create virtual network
  request:
    path: /virtual-networks
    method: POST
    expected:
    - 201
    data:
      virtual-network: *vn_instance_ip
  expect:
    virtual-network: *vn_instance_ip

- name: create instance ip
  request:
    path: /instance-ips
    method: POST
    expected:
    - 201
    data:
      instance-ip: 
        fq_name: ["test_instance_ip"]
        uuid: "test_instance_ip"
        subnet_uuid: "e76ab7ff-c47d-4faf-aec4-80dcc3658f0b"
        instance_ip_address: "10.10.10.10"
        network_ipam_refs: 
        - uuid: test_ipam_instance_ip
        virtual_network_refs:
        - uuid: vn_instance_ip
  expect:
    instance-ip: 
      fq_name: ["test_instance_ip"]
      uuid: "test_instance_ip"
      instance_ip_address: "10.10.10.10"
      network_ipam_refs: 
      - uuid: test_ipam_instance_ip
      virtual_network_refs:
      - uuid: vn_instance_ip

- name: update instance ip
  request:
    path: /instance-ip/test_instance_ip
    method: PUT
    expected:
    - 200
    data:
      instance-ip: 
        uuid: "test_instance_ip"

- name: delete instance ip
  request:
    path: /instance-ip/test_instance_ip
    method: DELETE
    expected:
    - 204
  expect: null

- name: delete virtual network
  request:
    path: /virtual-network/vn_instance_ip
    method: DELETE
    expected:
    - 204
  expect: null

- name: delete network ipam
  request:
    path: /network-ipam/test_ipam_instance_ip
    method: DELETE
    expected:
    - 204
  expect: null
