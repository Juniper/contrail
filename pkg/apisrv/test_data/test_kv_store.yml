name: Test KV store
description: |
    Integration test for the useragent key value store.

clients:
  default:
    id: alice
    password: alice_password
    domain: default
    insecure: true
    scope:
      project:
        name: admin

workflow:
- name: store key value 1
  request:
    path: /useragent-kv
    method: POST
    expected: [200]
    data:
      operation: "STORE"
      key: "key1"
      value: "value1"
  expect: null
- name: store key value 2
  request:
    path: /useragent-kv
    method: POST
    expected: [200]
    data:
      operation: "STORE"
      key: "key2"
      value: "value2"
  expect: null
- name: store key value 3
  request:
    path: /useragent-kv
    method: POST
    expected: [200]
    data:
      operation: "STORE"
      key: "key3"
      value: "value3"
  expect: null
- name: retrieve store with three keys (using empty string)
  request:
    path: /useragent-kv
    method: POST
    expected: [200]
    data:
      operation: "RETRIEVE"
      key: ""
  expect:
    value:
    - key: "key1"
      value: "value1"
    - key: "key2"
      value: "value2"
    - key: "key3"
      value: "value3"
- name: retrieve store with three keys (using empty list)
  request:
    path: /useragent-kv
    method: POST
    expected: [200]
    data:
      operation: "RETRIEVE"
      key: []
  expect:
    value:
    - key: "key1"
      value: "value1"
    - key: "key2"
      value: "value2"
    - key: "key3"
      value: "value3"
- name: retrieve key 1
  request:
    path: /useragent-kv
    method: POST
    expected: [200]
    data:
      operation: "RETRIEVE"
      key: "key1"
  expect:
    value: "value1"
- name: update value
  request:
    path: /useragent-kv
    method: POST
    expected: [200]
    data:
      operation: "STORE"
      key: "key1"
      value: "value"
  expect: null
- name: retrieve updated key
  request:
    path: /useragent-kv
    method: POST
    expected: [200]
    data:
      operation: "RETRIEVE"
      key: "key1"
  expect:
    value: "value"
- name: retrieve multiple keys
  request:
    path: /useragent-kv
    method: POST
    expected: [200]
    data:
      operation: "RETRIEVE"
      key:
      - "key2"
      - "key1"
  expect:
    value:
    - "value2"
    - "value"
- name: delete key 1
  request:
    path: /useragent-kv
    method: POST
    expected: [200]
    data:
      operation: "DELETE"
      key: "key1"
  expect: null
- name: try to retrieve nonexisting key
  request:
    path: /useragent-kv
    method: POST
    expected: [404]
    data:
      operation: "RETRIEVE"
      key: "key1"
- name: delete nonexisting key
  request:
    path: /useragent-kv
    method: POST
    expected: [200]
    data:
      operation: "DELETE"
      key: "key1"
  expect: null
- name: retrieve key after deleting different key
  request:
    path: /useragent-kv
    method: POST
    expected: [200]
    data:
      operation: "RETRIEVE"
      key: "key2"
  expect:
    value: "value2"
- name: delete key 2
  request:
    path: /useragent-kv
    method: POST
    expected: [200]
    data:
      operation: "DELETE"
      key: "key2"
  expect: null
- name: delete key 3
  request:
    path: /useragent-kv
    method: POST
    expected: [200]
    data:
      operation: "DELETE"
      key: "key3"
  expect: null
- name: retrieve empty store
  request:
    path: /useragent-kv
    method: POST
    expected: [200]
    data:
      operation: "RETRIEVE"
      key: ""
  expect:
    value: []
- name: try to use the store with wrong operation
  request:
    path: /useragent-kv
    method: POST
    expected: [404]
    data:
      operation: "retrieve"
      key: "key1"
- name: try to use the store with no key
  request:
    path: /useragent-kv
    method: POST
    expected: [400]
    data:
      operation: "RETRIEVE"
- name: try to store empty key
  request:
    path: /useragent-kv
    method: POST
    expected: [400]
    data:
      operation: "STORE"
      key: ""
- name: try to delete empty key
  request:
    path: /useragent-kv
    method: POST
    expected: [400]
    data:
      operation: "DELETE"
      key: ""
