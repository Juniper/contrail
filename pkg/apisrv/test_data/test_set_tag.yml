name: Test set-tag endpoint
description: basic set-tag test

cleanup:
- path: /project/admin_project_uuid
- path: /network-ipams/test_ipam_blue
- path: /virtual_network/vn_blue
- path: /tag/tag_uuid

test_data:
# SetUp resources
  admin_project: &admin_project
    fq_name: ["default", "admin_project_uuid"]
    uuid: admin_project_uuid
    parent_type: domain
    parent_uuid: beefbeef-beef-beef-beef-beefbeef0002
    quota: {}

  network_ipam_blue: &network_ipam_blue
    network_ipam_mgmt:
      host_routes:
        route:
        - prefix: "test_prefix"
          next_hop: "1.2.3.5"
    uuid: test_ipam_blue
    display_name: test_ipam_blue
    parent_type: project
    parent_uuid: admin_project_uuid
    fq_name: ["domain","admin_project_uuid","test_ipam_blue"]

  vn_blue: &vn_blue
    fq_name: ["default", "admin_project_uuid", "vn_blue"]
    uuid: vn_blue
    display_name: blue
    parent_type: project
    parent_uuid: admin_project_uuid
    route_target_list:
      route_target: ["100:200"]
    network_ipam_refs:
    - uuid: test_ipam_blue

  tag: &tag
    uuid: tag_uuid
    fq_name: ["namespace=kube-system"]
    tag_value: kube-system
    tag_type_name: namespace

# Test resources
  set_tag_correct: &set_tag_correct
    obj_uuid: admin_project_uuid
    obj_type: project
    application:
      is_global: true
      value: k8s
    namespace:
      is_global: true
      value: kube-system

  set_tag_without_uuid: &set_tag_without_uuid
    obj_uuid: ""
    obj_type: project
    application:
      is_global: true
      value: k8s

  set_tag_without_type: &set_tag_without_type
    obj_uuid: admin_project_uuid
    obj_type: ""
    application:
      is_global: true
      value: k8s

  set_not_existing_tag: &set_not_existing_tag
    obj_uuid: vn_blue
    obj_type: virtual_network
    fake:
      is_global: false
      value: fake

clients:
  default:
    id: alice
    password: alice_password
    domain: default
    insecure: true
    scope:
      project:
        name: admin

workflow:
# SetUp test
- name: create project admin
  request:
    path: /projects
    method: POST
    expected: [200]
    data:
      project: *admin_project
  expect:
    project: *admin_project

- name: create network ipam blue
  request:
    path: /network-ipams
    method: POST
    expected: [200]
    data:
      network-ipam: *network_ipam_blue
  expect:
    network-ipam: *network_ipam_blue

- name: create virtual network
  request:
    path: /virtual-networks
    method: POST
    expected: [200]
    data:
      virtual-network: *vn_blue
  expect:
    virtual-network: *vn_blue

- name: create tag
  request:
    path: /tags
    method: POST
    expected: [200]
    data:
      tag: *tag
  expected: *tag

# Test set-tag
- name: check correctly filled set-tag
  request:
    path: /set-tag
    method: POST
    expected: [200]
    data: *set_tag_correct
  expect: null

- name: check set-tag without obj_uuid
  request:
    path: /set-tag
    method: POST
    expected: [400]
    data: *set_tag_without_uuid
  expect: null

- name: check set-tag without obj_type
  request:
    path: /set-tag
    method: POST
    expected: [400]
    data: *set_tag_without_type
  expect: null

- name: check set-tag when tag not exist
  request:
    path: /set-tag
    method: POST
    expected: [404]
    data: *set_not_existing_tag
  expect: null

# TearDown
- name: delete virtual network
  request:
    path: /virtual_network/vn_blue
    method: DELETE
    expected: [200]
  expect: null

- name: delete network ipam
  request:
    path: /network-ipam/test_ipam_blue
    method: DELETE
    expected: [200]
  expect: null

- name: delete project
  request:
    path: /project/admin_project_uuid
    method: DELETE
    expected: [200]
  expect: null

- name: delete tag
  request:
    path: /tag/tag_uuid
    method: DELETE
    expected: [200]
  expect: null
