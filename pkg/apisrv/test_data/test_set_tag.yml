name: Test set-tag endpoint
description: basic set-tag test

cleanup:
- path: /virtual_network/virtual_network_uuid
- path: /project/admin_project_test_set_tag
- path: /tag/tag_namespace_uuid
- path: /tag/tag_namespace_uuid_kube
- path: /tag/tag_application_uuid
- path: /tag/tag_label_k8s_uuid
- path: /tag/tag_label_ctest_uuid

test_data:
  admin_project: &admin_project
    fq_name: ["default", "admin_project_test_set_tag"]
    uuid: admin_project_test_set_tag
    parent_type: domain
    parent_uuid: beefbeef-beef-beef-beef-beefbeef0002
    quota: {}

  virtual_network: &virtual_network
    fq_name: ["default", "admin", "virtual_network"]
    uuid: virtual_network_uuid
    display_name: virtual_network
    parent_type: project
    parent_uuid: admin_project_test_set_tag
    virtual_network_properties:
      forwarding_mode: "l3"
      vxlan_network_identifier: 5
    route_target_list:
      route_target: ["100:200"]

  tag_namespace: &tag_namespace
    uuid: tag_namespace_uuid
    fq_name: ["namespace=default"]
    tag_value: default
    tag_type_name: namespace

  tag_namespace_kube: &tag_namespace_kube
    uuid: tag_namespace_kube_uuid
    fq_name: ["namespace=kube-system"]
    tag_value: kube-system
    tag_type_name: namespace

  tag_application: &tag_application
    uuid: tag_application_uuid
    fq_name: ["application=k8s"]
    tag_value: k8s
    tag_type_name: application

  tag_label_k8s: &tag_label_k8s
    uuid: tag_label_k8s_uuid
    fq_name: ["label=k8s"]
    tag_value: k8s
    tag_type_name: label

  tag_label_ctest: &tag_label_ctest
    uuid: tag_label_ctest_uuid
    fq_name: ["label=ctest"]
    tag_value: ctest
    tag_type_name: label

  set_tag_project: &set_tag_project
    obj_uuid: admin_project_test_set_tag
    obj_type: project

  set_tag_correct: &set_tag_correct
    application:
      is_global: true
      value: k8s

  set_tag_virtual_network: &set_tag_virtual_network
    obj_uuid: virtual_network_uuid
    obj_type: virtual_network

clients:
  default:
    id: alice
    password: alice_password
    insecure: true
    scope:
      project:
        name: admin

workflow:
# SetUp test
- name: create project admin
  request:
    path: /projects
    method: POST
    expected: [200]
    data:
      project: *admin_project
  expect:
    project: *admin_project
  watchers:
    /contrail/project/admin_project_test_set_tag:
      - data: *admin_project

- name: create virtual network
  request:
    path: /virtual-networks
    method: POST
    expected: [200]
    data:
      virtual-network: *virtual_network
  expect: null

- name: create tag namespace
  request:
    path: /tags
    method: POST
    expected: [200]
    data:
      tag: *tag_namespace
  expect:
    tag: *tag_namespace

- name: create tag namespace kube
  request:
    path: /tags
    method: POST
    expected: [200]
    data:
      tag: *tag_namespace_kube
  expect:
    tag: *tag_namespace_kube

- name: create tag application
  request:
    path: /tags
    method: POST
    expected: [200]
    data:
      tag: *tag_application
  expect:
    tag: *tag_application

- name: create tag label k8s
  request:
    path: /tags
    method: POST
    expected: [200]
    data:
      tag: *tag_label_k8s
  expect:
    tag: *tag_label_k8s

- name: create tag label ctest
  request:
    path: /tags
    method: POST
    expected: [200]
    data:
      tag: *tag_label_ctest
  expect:
    tag: *tag_label_ctest
# \SetUp END

- name: correctly filled set-tag
  request:
    path: /set-tag
    method: POST
    expected: [200]
    data:
      <<: *set_tag_correct
      obj_uuid: admin_project_test_set_tag
      obj_type: project
      namespace:
        is_global: true
        value: default
  expect: null

- name: check added tags
  request:
    path: /project/admin_project_test_set_tag
    method: GET
    expected: [200]
  expect:
    project:
      <<: *admin_project
      tag_refs:
        - uuid: tag_application_uuid
        - uuid: tag_namespace_uuid

- name: change namespace to kube
  request:
    path: /set-tag
    method: POST
    expected: [200]
    data:
      <<: *set_tag_correct
      obj_uuid: admin_project_test_set_tag
      obj_type: project
      namespace:
        is_global: true
        value: kube-system
  expect: null

- name: check changed tag
  request:
    path: /project/admin_project_test_set_tag
    method: GET
    expected: [200]
  expect:
    project:
      <<: *admin_project
      tag_refs:
        - uuid: tag_application_uuid
        - uuid: tag_namespace_kube_uuid

- name: unset tag correctly
  request:
    path: /set-tag
    method: POST
    expected: [200]
    data:
      <<: *set_tag_project
      namespace:
        is_global: true
        value: null
  expect: null

- name: check if tag was unset
  request:
    path: /project/admin_project_test_set_tag
    method: GET
    expected: [200]
  expect:
    project:
      <<: *admin_project
      tag_refs:
        - uuid: tag_application_uuid

- name: add labels value
  request:
    path: /set-tag
    method: POST
    expected: [200]
    data:
      <<: *set_tag_project
      label:
        is_global: true
        add_values:
        - k8s
        - ctest
  expect: null

- name: check added label tags
  request:
    path: /project/admin_project_test_set_tag
    method: GET
    expected: [200]
  expect:
    project:
      <<: *admin_project
      tag_refs:
        - uuid: tag_application_uuid
        - uuid: tag_label_ctest_uuid
        - uuid: tag_label_k8s_uuid

- name: remove tags
  request:
    path: /set-tag
    method: POST
    expected: [200]
    data:
      <<: *set_tag_project
      label:
        is_global: true
        delete_values:
        - k8s
        - ctest
      application:
        value: null
        is_global: true
  expect: null

- name: check removed tags
  request:
    path: /project/admin_project_test_set_tag
    method: GET
    expected: [200]
  expect:
    project:
      <<: *admin_project
      tag_refs: $null

- name: set-tag without obj_uuid
  request:
    path: /set-tag
    method: POST
    expected: [400]
    data:
      <<: *set_tag_correct
      namespace:
        is_global: true
        value: default
      obj_uuid: ""
      obj_type: project
  expect: null

- name: set-tag without obj_type
  request:
    path: /set-tag
    method: POST
    expected: [400]
    data:
      <<: *set_tag_correct
      namespace:
        is_global: true
        value: default
      obj_uuid: admin_project_test_set_tag
      obj_type: ""
  expect: null

- name: set-tag with non existing tag
  request:
    path: /set-tag
    method: POST
    expected: [404]
    data:
      <<: *set_tag_virtual_network
      fake:
        is_global: false
        value: fake
  expect: null

- name: add_values with unique tag
  request:
    path: /set-tag
    method: POST
    expected: [400]
    data:
      <<: *set_tag_virtual_network
      namespace:
        is_global: false
        add_values: [default]
  expect: null

# TearDown
- name: delete virtual network
  request:
    path: /virtual-network/virtual_network_uuid
    method: DELETE
    expected: [200]
  expect: null

- name: delete project admin
  request:
    path: /project/admin_project_test_set_tag
    method: DELETE
    expected: [200]
  expect: null

- name: delete tag namespace
  request:
    path: /tag/tag_namespace_uuid
    method: DELETE
    expected: [200]
  expect: null

- name: ensure tag namespace was deleted
  request:
    path: /tag/tag_namespace_uuid
    method: GET
    expected: [404]
  expect: null

- name: delete tag namespace kube
  request:
    path: /tag/tag_namespace_kube_uuid
    method: DELETE
    expected: [200]
  expect: null

- name: delete tag application
  request:
    path: /tag/tag_application_uuid
    method: DELETE
    expected: [200]
  expect: null

- name: delete tag label k8s
  request:
    path: /tag/tag_label_k8s_uuid
    method: DELETE
    expected: [200]
  expect: null

- name: ensure tag label k8s was deleted
  request:
    path: /tag/tag_label_k8s_uuid
    method: GET
    expected: [404]
  expect: null

- name: delete tag label ctest
  request:
    path: /tag/tag_label_ctest_uuid
    method: DELETE
    expected: [200]
  expect: null
# \TearDown END
