name: Service Template Test
description: |
  Basic Service Template Test
cleanup:
  - path: /service-template/5a121ac8-9bf2-11e9-806a-23708815e454
  - path: /service-template/610e977a-9bf2-11e9-81f5-cfd968bee391
  - path: /service-template/67af4b92-9bf2-11e9-b4c9-3b04ac9848ec
test_data:
  service_template: &st_correct_svc_template
    uuid: 5a121ac8-9bf2-11e9-806a-23708815e454
    parent_type: domain
    fq_name:
      - default-domain
      - correct-template
    service_template_properties: *template_properties

  service_template: &st_bad_domain
    parent_type: domain
    fq_name:
      - bad-domain
      - with-bad-domain
    service_template_properties: *template_properties

  service_template: &st_without_fqname
    parent_type: domain
    service_template_properties: *template_properties

  service_template: &st_with_parent_uuid
    parent_uuid: beefbeef-beef-beef-beef-beefbeef0002
    uuid: 610e977a-9bf2-11e9-81f5-cfd968bee391
    name: with-parent-uuid
    parent_type: domain
    service_template_properties: *template_properties

  service_template: &st_from_dump
    uuid: 67af4b92-9bf2-11e9-b4c9-3b04ac9848ec
    name: service_template_test_1
    fq_name:
      - default-domain
      - service_template_test_1
    display_name: service_template_test_1
    parent_type: domain
    service_template_properties:
      service_virtualization_type: virtual-machine
      service_mode: in-network
      service_type: firewall
      version: 2
      interface_type:
        - service_interface_type: left
        - service_interface_type: right
        - service_interface_type: management

  service_template_properties: &template_properties
    version: 2
    service_virtualization_type: virtual-machine
    service_mode: transparent
    service_type: firewall
    interface_type:
      - service_interface_type: left

clients:
  default:
    id: alice
    password: alice_password
    insecure: true
    scope:
      project:
        name: admin

workflow:
- name: create service template v2 with virtual machine
  request:
    path: /service-templates
    method: POST
    expected: [200]
    data:
      service-template: *st_correct_svc_template
  expect:
    service-template: *st_correct_svc_template

- name: create service template with duplicate uuid
  request:
    path: /service-templates
    method: POST
    expected: [409]
    data:
      service-template: *st_correct_svc_template

- name: create service template with incorrect domain in fq name
  request:
    path: /service-templates
    method: POST
    expected: [400]
    data:
      service-template: *st_bad_domain

- name: create service template with no fqname
  request:
    path: /service-templates
    method: POST
    expected: [400]
    data:
      service-template: *st_without_fqname

- name: create service template with parent uuid
  request:
    path: /service-templates
    method: POST
    expected: [200]
    data:
      service-template: *st_with_parent_uuid
  expect:
    service-template: *st_with_parent_uuid

- name: create service template with parameters from dump
  request:
    path: /service-templates
    method: POST
    expected: [200]
    data:
      service-template: *st_from_dump
  expect:
    service-template: *st_from_dump

- name: delete service template v2 VM
  request:
    path: /service-template/5a121ac8-9bf2-11e9-806a-23708815e454
    method: DELETE
    expected: [200]

- name: delete service template with parent uuid
  request:
    path: /service-template/610e977a-9bf2-11e9-81f5-cfd968bee391
    method: DELETE
    expected: [200]

- name: delete service template with parent uuid
  request:
    path: /service-template/67af4b92-9bf2-11e9-b4c9-3b04ac9848ec
    method: DELETE
    expected: [200]
