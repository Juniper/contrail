name: Quota checking test
description: Checking for quota overflow for all resources managed by QuotaTye
cleanup:
  - path: /loadbalancer-healthmonitor/uuid_lb_hm_blue1
  - path: /loadbalancer-healthmonitor/uuid_lb_hm_blue2
  - path: /loadbalancer-pool/uuid_lb_p_blue1
  - path: /loadbalancer-pool/uuid_lb_p_blue2
  - path: /logical-router/uuid_logrout_blue1
  - path: /logical-router/uuid_logrout_blue2
  - path: /network-ipam/uuid_ipam_magic
  - path: /network-ipam/uuid_ipam_magic_blue1
  - path: /network-ipam/uuid_ipam_magic_blue2
  - path: /network-policy/uuid_netpol_blue1
  - path: /network-policy/uuid_netpol_blue2
  - path: /project/uuid_proj_blue
  - path: /project/uuid_proj_green
  - path: /route-tables/uuid_rtab_blue1
  - path: /route-tables/uuid_rtab_blue2
  - path: /security-group/uuid_secgrp_blue1
  - path: /security-group/uuid_secgrp_blue2
  - path: /security-group/uuid_secgrp_green
  - path: /security-logging-object/uuid_seclogobj_blue1
  - path: /security-logging-object/uuid_seclogobj_blue2
# TODO: Disabled because ServiceTemplate cannot be created yet (JBE-439)
#  - path: /service-instance/uuid_servinst_blue1
#  - path: /service-instance/uuid_servinst_blue2
#  - path: /service-template/uuid_servtmpl
  - path: /virtual-network/uuid_vn_blue_spock1
  - path: /virtual-network/uuid_vn_blue_spock2
  - path: /virtual-network/uuid_vn_blue_spock3
  - path: /virtual-network/uuid_vn_green_spock

test_data:
  loadbalancer_healthmonitor_blue1: &loadbalancer_healthmonitor_blue1
    uuid: uuid_lb_hm_blue1
    name: uuid_lb_hm_blue1
    parent_type: project
    parent_uuid: uuid_proj_blue
    loadbalancer_healthmonitor_properties:
      delay: 1
      expected_codes: "test"
      max_retries: 1
      http_method: "test"
      admin_state: true
      timeout: 1
      url_path: "test"
      monitor_type: "PING"
  loadbalancer_healthmonitor_blue2: &loadbalancer_healthmonitor_blue2
    uuid: uuid_lb_hm_blue2
    name: uuid_lb_hm_blue2
    parent_type: project
    parent_uuid: uuid_proj_blue
    loadbalancer_healthmonitor_properties:
      delay: 1
      expected_codes: "test"
      max_retries: 1
      http_method: "test"
      admin_state: true
      timeout: 1
      url_path: "test"
      monitor_type: "PING"
  loadbalancer_pool_blue1: &loadbalancer_pool_blue1
    uuid: uuid_lb_p_blue1
    name: uuid_lb_p_blue1
    parent_type: project
    parent_uuid: uuid_proj_blue
    loadbalancer_pool_properties:
      status: "test"
      protocol: "UDP"
      subnet_id: "test"
      session_persistence: "SOURCE_IP"
      admin_state: true
      persistence_cookie_name: "test"
      status_description: "test"
      loadbalancer_method: "SOURCE_IP"
  loadbalancer_pool_blue2: &loadbalancer_pool_blue2
    uuid: uuid_lb_p_blue2
    name: uuid_lb_p_blue2
    parent_type: project
    parent_uuid: uuid_proj_blue
    loadbalancer_pool_properties:
      status: "test"
      protocol: "UDP"
      subnet_id: "test"
      session_persistence: "SOURCE_IP"
      admin_state: true
      persistence_cookie_name: "test"
      status_description: "test"
      loadbalancer_method: "SOURCE_IP"
  logical_router_blue1: &logical_router_blue1
    uuid: uuid_logrout_blue1
    name: uuid_logrout_blue1
    parent_type: project
    parent_uuid: uuid_proj_blue
  logical_router_blue2: &logical_router_blue2
    uuid: uuid_logrout_blue2
    name: uuid_logrout_blue2
    parent_type: project
    parent_uuid: uuid_proj_blue
  network_ipam_magic_blue1: &network_ipam_magic_blue1
    uuid: uuid_ipam_magic_blue1
    name: uuid_ipam_magic_blue1
    parent_type: project
    parent_uuid: uuid_proj_blue
  network_ipam_magic_blue2: &network_ipam_magic_blue2
    uuid: uuid_ipam_magic_blue2
    name: uuid_ipam_magic_blue2
    parent_type: project
    parent_uuid: uuid_proj_blue
  network_ipam_magic_green: &network_ipam_magic_green
    uuid: uuid_ipam_magic_green
    name: uuid_ipam_magic_green
    parent_type: project
    parent_uuid: uuid_proj_green
  network_policy_blue1: &network_policy_blue1
    uuid: uuid_netpol_blue1
    name: uuid_netpol_blue1
    parent_type: project
    parent_uuid: uuid_proj_blue
    network_policy_entries:
      policy_rule:
        - direction: "\u003e"
          protocol: "test"
          dst_addresses: [{}]
          action_list:
            simple_action: pass
          rule_uuid: "test"
          dst_ports: [{}]
          ethertype: "IPv4"
          src_addresses: [{}]
          rule_sequence:
            major: 4
            minor: 1
          src_ports: [{}]
  network_policy_blue2: &network_policy_blue2
    uuid: uuid_netpol_blue2
    name: uuid_netpol_blue2
    parent_type: project
    parent_uuid: uuid_proj_blue
    network_policy_entries:
      policy_rule:
        - direction: "\u003e"
          protocol: "test"
          dst_addresses: [{}]
          action_list:
            simple_action: pass
          rule_uuid: "test"
          dst_ports: [{}]
          ethertype: "IPv4"
          src_addresses: [{}]
          rule_sequence:
            major: 4
            minor: 1
          src_ports: [{}]
  project_blue: &project_blue
    uuid: uuid_proj_blue
    name: project_blue
    parent_type: domain
    parent_uuid: beefbeef-beef-beef-beef-beefbeef0002
    quota: {}
  proj_green: &proj_green
    uuid: uuid_proj_green
    name: project_green
    parent_type: domain
    parent_uuid: beefbeef-beef-beef-beef-beefbeef0002
    quota: {}
  route_table_blue1: &route_table_blue1
    uuid: uuid_rtab_blue1
    name: uuid_rtab_blue1
    parent_type: project
    parent_uuid: uuid_proj_blue
    routes:
      route: [{}]
  route_table_blue2: &route_table_blue2
    uuid: uuid_rtab_blue2
    name: uuid_rtab_blue2
    parent_type: project
    parent_uuid: uuid_proj_blue
    routes:
      route: [{}]
  spocknet_blue1: &spocknet_blue1
    uuid: uuid_vn_blue_spock1
    name: uuid_vn_blue_spock1
    parent_type: project
    parent_uuid: uuid_proj_blue
    network_ipam_refs:
      - uuid: uuid_ipam_magic_blue1
  spocknet_blue2: &spocknet_blue2
    uuid: uuid_vn_blue_spock2
    name: uuid_vn_blue_spock2
    parent_type: project
    parent_uuid: uuid_proj_blue
    network_ipam_refs:
      - uuid: uuid_ipam_magic_blue1
  spocknet_blue3: &spocknet_blue3
    uuid: uuid_vn_blue_spock3
    name: uuid_vn_blue_spock3
    parent_type: project
    parent_uuid: uuid_proj_blue
    network_ipam_refs:
      - uuid: uuid_ipam_magic_blue1
  spocknet_green: &spocknet_green
    uuid: uuid_vn_green_spock
    name: uuid_vn_green_spock
    parent_type: project
    parent_uuid: uuid_proj_green
    network_ipam_refs:
      - uuid: uuid_ipam_magic_green
  secgrp_blue1: &secgrp_blue1
    uuid: uuid_secgrp_blue1
    name: uuid_secgrp_blue1
    parent_type: project
    parent_uuid: uuid_proj_blue
    perms2:
      owner: admin
    security_group_entries:
      policy_rule:
        - direction: ">"
          protocol: tcp
          rule_sequence:
            major: 4
            minor: 1
          src_ports: [{}]
          dst_ports: [{}]
          ethertype: IPv4
          src_addresses: [{}]
          dst_addresses: [{}]
          action_list:
            simple_action: pass
  secgrp_blue2: &secgrp_blue2
    uuid: uuid_secgrp_blue2
    name: uuid_secgrp_blue2
    parent_type: project
    parent_uuid: uuid_proj_blue
    perms2:
      owner: admin
    security_group_entries:
      policy_rule:
        - direction: ">"
          protocol: tcp
          rule_sequence:
            major: 4
            minor: 1
          src_ports: [{}]
          dst_ports: [{}]
          ethertype: IPv4
          src_addresses: [{}]
          dst_addresses: [{}]
          action_list:
            simple_action: pass
  secgrp_blue3: &secgrp_blue3
    uuid: uuid_secgrp_blue3
    name: uuid_secgrp_blue3
    parent_type: project
    parent_uuid: uuid_proj_blue
    perms2:
      owner: admin
    security_group_entries: {}
  secgrp_green: &secgrp_green
    uuid: uuid_secgrp_green
    name: uuid_secgrp_green
    parent_type: project
    parent_uuid: uuid_proj_green
    perms2:
      owner: admin
    security_group_entries: {}
  security_logging_object_blue1: &security_logging_object_blue1
    uuid: uuid_seclogobj_blue1
    name: uuid_seclogobj_blue1
    parent_type: project
    parent_uuid: uuid_proj_blue
  security_logging_object_blue2: &security_logging_object_blue2
    uuid: uuid_seclogobj_blue2
    name: uuid_seclogobj_blue2
    parent_type: project
    parent_uuid: uuid_proj_blue
# TODO: Disabled because ServiceTemplate cannot be created yet (JBE-439)
#  service_template: &service_template
#    uuid: uuid_servtmpl
#    name: uuid_servtmpl
#    parent_type: domain
#    parent_uuid: beefbeef-beef-beef-beef-beefbeef0002
#    service_template_properties:
#      interface_type:
#        - service_interface_type: "left"
#      service_mode: "transparent"
#      service_type: "firewall"
#  service_instance_blue1: &service_instance_blue1
#    uuid: uuid_servinst_blue1
#    name: uuid_servinst_blue1
#    parent_type: project
#    parent_uuid: uuid_proj_blue
#    service_instance_properties:
#      interface_list:
#        - virtual_network: "test"
#      auto_policy: true
#    service_template_refs: [*service_template]
#  service_instance_blue2: &service_instance_blue2
#    uuid: uuid_servinst_blue2
#    uuid: uuid_servinst_blue2
#    parent_type: project
#    parent_uuid: uuid_proj_blue
#    service_instance_properties:
#      interface_list:
#        - virtual_network: "test"
#      auto_policy: true
#    service_template_refs: [*service_template]
clients:
  default:
    id: alice
    password: alice_password
    domain: default
    insecure: true
    scope:
      project:
        name: admin

workflow:

# First create all necessary object for single project and most simple test case (quota should be 0)
  - name: create Project blue
    request:
      path: /projects
      method: POST
      expected:
        - 200
      data:
        project: *project_blue
    expect:
      project: *project_blue
      
# Check quota for network_ipam
  - name: Create network_ipam blue 1
    request:
      path: /network-ipams
      method: POST
      expected:
        - 200
      data:
        network-ipam: *network_ipam_magic_blue1
    expect:
      network-ipam: *network_ipam_magic_blue1

  - name: Set quota for network_ipam to disallow second
    request:
      path: /project/uuid_proj_blue
      method: PUT
      expected:
        - 200
      data:
        project:
          uuid: uuid_proj_blue
          quota:
            network_ipam: 1
    expect: null
      
  - name: Create network_ipam blue 2
    request:
      path: /network-ipams
      method: POST
      expected:
        - 400
        - 406
      data:
        network-ipam: *network_ipam_magic_blue2
    expect: null

  - name: Re-verify network_ipam blue 2 is not created
    request:
      path: /network-ipam/uuid_ipam_magic_blue2
      method: GET
      expected:
       - 404
    expect: null
    
  - name: Set quota for network_ipam to allow second
    request:
      path: /project/uuid_proj_blue
      method: PUT
      expected:
        - 200
      data:
        project:
          uuid: uuid_proj_blue
          quota:
            network_ipam: 2
    expect: null

  - name: Create network_ipam blue 2 (again)
    request:
      path: /network-ipams
      method: POST
      expected:
        - 200
      data:
        network-ipam: *network_ipam_magic_blue2
    expect:
      network-ipam: *network_ipam_magic_blue2

  - name: Delete network_ipam blue 2
    request:
      path: /network-ipam/uuid_ipam_magic_blue2
      method: DELETE
      expected:
        - 200
    expect: null

  - name: Delete network_ipam blue 1
    request:
      path: /network-ipam/uuid_ipam_magic_blue1
      method: DELETE
      expected:
        - 200
    expect: null

# Check quota for virtual_network
  - name: Create network_ipam blue 1 for virtual_networks
    request:
      path: /network-ipams
      method: POST
      expected:
        - 200
      data:
        network-ipam: *network_ipam_magic_blue1
    expect:
      network-ipam: *network_ipam_magic_blue1

  - name: Create virtual_network blue 1
    request:
      path: /virtual-networks
      method: POST
      expected:
        - 200
      data:
        virtual-network: *spocknet_blue1
    expect:
      virtual-network: *spocknet_blue1

  - name: Set quota for virtual_network to disallow second
    request:
      path: /project/uuid_proj_blue
      method: PUT
      expected:
        - 200
      data:
        project:
          uuid: uuid_proj_blue
          quota:
            virtual_network: 1
    expect: null

  - name: Create virtual_network blue 2
    request:
      path: /virtual-networks
      method: POST
      expected:
        - 400
        - 406
      data:
        virtual-network: *spocknet_blue2
    expect: null

  - name: Re-verify virtal_network blue2 is not created
    request:
      path: /virtual-network/uuid_vn_blue_spock2
      method: GET
      expected:
       - 404
    expect: null

  - name: Set quota for virtual_network to allow second
    request:
      path: /project/uuid_proj_blue
      method: PUT
      expected:
        - 200
      data:
        project:
          uuid: uuid_proj_blue
          quota:
            virtual_network: 2
    expect: null

  - name: Create virtual_network blue 2 (again)
    request:
      path: /virtual-networks
      method: POST
      expected:
        - 200
      data:
        virtual-network: *spocknet_blue2
    expect:
      virtual-network: *spocknet_blue2

  - name: Delete virtual_network blue 2
    request:
      path: /virtual-network/uuid_vn_blue_spock2
      method: DELETE
      expected:
        - 200
    expect: null

  - name: Delete virtual_network blue 1
    request:
      path: /virtual-network/uuid_vn_blue_spock1
      method: DELETE
      expected:
        - 200
    expect: null

  - name: Delete network_ipam blue 1
    request:
      path: /network-ipam/uuid_ipam_magic_blue1
      method: DELETE
      expected:
        - 200
    expect: null

# Check quota for Security Group
  - name: Create security_group blue 1
    request:
      path: /security-groups
      method: POST
      expected:
        - 200
      data:
        security-group: *secgrp_blue1
    expect:
      security-group: *secgrp_blue1

  - name: Update quota for security_group to disallow second
    request:
      path: /project/uuid_proj_blue
      method: PUT
      expected:
        - 200
      data:
        project:
          uuid: uuid_proj_blue
          quota:
            security_group: 1
    expect: null

  - name: Create security_group blue 2
    request:
      path: /security-groups
      method: POST
      expected:
        - 400
        - 406
      data:
        security-group: *secgrp_blue2
    expect: null

  - name: Re-verify security_group blue 2 is not created
    request:
      path: /security-group/uuid_secgrp_blue2
      method: GET
      expected:
       - 404
    expect: null

  - name: Set quota for security_group to allow second
    request:
      path: /project/uuid_proj_blue
      method: PUT
      expected:
        - 200
      data:
        project:
          uuid: uuid_proj_blue
          quota:
            security_group: 2
    expect: null

  - name: Create security_group blue 2 (again)
    request:
      path: /security-groups
      method: POST
      expected:
        - 200
      data:
        security-group: *secgrp_blue2
    expect:
      security-group: *secgrp_blue2

# IPAM green not used yet
#  - name: create ipam green
#    request:
#      path: /network-ipams
#      method: POST
#      expected:
#        - 200
#      data:
#        network-ipam: *network_ipam_magic_green
#    expect:
#      network-ipam: *network_ipam_magic_green

  - name: Delete security_group blue 2
    request:
      path: /security-group/uuid_secgrp_blue2
      method: DELETE
      expected:
        - 200
    expect: null

  - name: Delete security_group blue 1
    request:
      path: /security-group/uuid_secgrp_blue1
      method: DELETE
      expected:
        - 200
    expect: null

# Check Quota for Logical Routers
  - name: Create logical_router blue 1
    request:
      path: /logical-routers
      method: POST
      expected:
        - 200
      data:
        logical-router: *logical_router_blue1
    expect:
      logical-router: *logical_router_blue1

  - name: Set quota for logical_router to disallow second router
    request:
      path: /project/uuid_proj_blue
      method: PUT
      expected:
        - 200
      data:
        project:
          uuid: uuid_proj_blue
          quota:
            logical_router: 1
    expect: null

  - name: Create logical_router blue 2  
    request:
      path: /logical-routers
      method: POST
      expected:
        - 400
        - 406
      data:
        logical-router: *logical_router_blue2
    expect: null

  - name: Re-verify logical_router blue 2 is not created
    request:
      path: /logical-router/uuid_logrout_blue2
      method: GET
      expected:
       - 404
    expect: null

  - name: Set quota for logical_router to allow second router
    request:
      path: /project/uuid_proj_blue
      method: PUT
      expected:
        - 200
      data:
        project:
          uuid: uuid_proj_blue
          quota:
            logical_router: 2
    expect: null

  - name: Create logical_router blue 2
    request:
      path: /logical-routers
      method: POST
      expected:
        - 200
      data:
        logical-router: *logical_router_blue2
    expect:
      logical-router: *logical_router_blue2

  - name: Delete logical_router blue 2
    request:
      path: /logical-router/uuid_logrout_blue2
      method: DELETE
      expected:
        - 200
    expect: null

  - name: Delete logical_router blue 1
    request:
      path: /logical-router/uuid_logrout_blue1
      method: DELETE
      expected:
        - 200
    expect: null

# Check quota for Loadbalancer Healthmonitor

  - name: Create loadbalancer_healthmonitor blue 1
    request:
      path: /loadbalancer-healthmonitors
      method: POST
      expected:
        - 200
      data:
        loadbalancer-healthmonitor: *loadbalancer_healthmonitor_blue1
    expect:
      loadbalancer-healthmonitor: *loadbalancer_healthmonitor_blue1

  - name: Set quota for loadbalancer_healthmonitor to disallow second
    request:
      path: /project/uuid_proj_blue
      method: PUT
      expected:
        - 200
      data:
        project:
          uuid: uuid_proj_blue
          quota:
            loadbalancer_healthmonitor: 1
    expect: null

  - name: Create loadbalancer_healthmonitor blue 2
    request:
      path: /loadbalancer-healthmonitors
      method: POST
      expected:
        - 400
        - 406
      data:
        loadbalancer-healthmonitor: *loadbalancer_healthmonitor_blue2
    expect: null

  - name: Re-verify loadbalancer_healthmonitor blue 2 is not created
    request:
      path: /loadbalancer-healthmonitor/uuid_lb_hm_blue2
      method: GET
      expected:
       - 404
    expect: null
    
  - name: Set quota for loadbalancer_healthmonitor to allow second
    request:
      path: /project/uuid_proj_blue
      method: PUT
      expected:
        - 200
      data:
        project:
          uuid: uuid_proj_blue
          quota:
            loadbalancer_healthmonitor: 2
    expect: null

  - name: Create loadbalancer_healthmonitor blue 2 (again)
    request:
      path: /loadbalancer-healthmonitors
      method: POST
      expected:
        - 200
      data:
        loadbalancer-healthmonitor: *loadbalancer_healthmonitor_blue2
    expect:
      loadbalancer-healthmonitor: *loadbalancer_healthmonitor_blue2

  - name: Delete loadbalancer_healthmonitor blue 2
    request:
      path: /loadbalancer-healthmonitor/uuid_lb_hm_blue2
      method: DELETE
      expected:
        - 200
    expect: null

  - name: Delete loadbalancer_healthmonitor blue 1
    request:
      path: /loadbalancer-healthmonitor/uuid_lb_hm_blue1
      method: DELETE
      expected:
        - 200
    expect: null

# Check quota for LoadBalancer Pool

  - name: Create loadbalancer_pool blue 1
    request:
      path: /loadbalancer-pools
      method: POST
      expected:
        - 200
      data:
        loadbalancer-pool: *loadbalancer_pool_blue1
    expect:
      loadbalancer-pool: *loadbalancer_pool_blue1

  - name: Set quota for loadbalancer_pool to disallow second
    request:
      path: /project/uuid_proj_blue
      method: PUT
      expected:
        - 200
      data:
        project:
          uuid: uuid_proj_blue
          quota:
            loadbalancer_pool: 1
    expect: null

  - name: Create loadbalancer_pool blue 2
    request:
      path: /loadbalancer-pools
      method: POST
      expected:
        - 400
        - 406
      data:
        loadbalancer-pool: *loadbalancer_pool_blue2
    expect: null

  - name: Re-verify loadbalancer_pool blue 2 is not created
    request:
      path: /loadbalancer-pool/uuid_lb_p_blue2
      method: GET
      expected:
       - 404
    expect: null

  - name: Cet quota for loadbalancer_pool to allow second
    request:
      path: /project/uuid_proj_blue
      method: PUT
      expected:
        - 200
      data:
        project:
          uuid: uuid_proj_blue
          quota:
            loadbalancer_pool: 2
    expect: null

  - name: Create Loadbalancer_pool blue 2 (again)
    request:
      path: /loadbalancer-pools
      method: POST
      expected:
        - 200
      data:
        loadbalancer-pool: *loadbalancer_pool_blue2
    expect:
      loadbalancer-pool: *loadbalancer_pool_blue2

  - name: Delete loadbalancer_pool blue 2
    request:
      path: /loadbalancer-pool/uuid_lb_p_blue2
      method: DELETE
      expected:
        - 200
    expect: null

  - name: Delete loadbalancer_pool blue 1
    request:
      path: /loadbalancer-pool/uuid_lb_p_blue1
      method: DELETE
      expected:
        - 200
    expect: null

# Check quota for Network Policy

  - name: Create network_policy blue 1
    request:
      path: /network-policys
      method: POST
      expected:
        - 200
      data:
        network-policy: *network_policy_blue1
    expect:
      network-policy: *network_policy_blue1

  - name: Set quota for network_policy to disallow second
    request:
      path: /project/uuid_proj_blue
      method: PUT
      expected:
        - 200
      data:
        project:
          uuid: uuid_proj_blue
          quota:
            network_policy: 1
    expect: null

  - name: Create network_policy blue 2
    request:
      path: /network-policys
      method: POST
      expected:
        - 400
        - 406
      data:
        network-policy: *network_policy_blue2
    expect: null

  - name: Re-verify network_policy blue 2 is not created
    request:
      path: /network-policy/uuid_netpol_blue2
      method: GET
      expected:
       - 404
    expect: null

  - name: Set quota for network_policy to allow second
    request:
      path: /project/uuid_proj_blue
      method: PUT
      expected:
        - 200
      data:
        project:
          uuid: uuid_proj_blue
          quota:
            network_policy: 2
    expect: null

  - name: Create network_policy blue 2 (again)
    request:
      path: /network-policys
      method: POST
      expected:
        - 200
      data:
        network-policy: *network_policy_blue2
    expect:
      network-policy: *network_policy_blue2

  - name: Delete network_policy blue 2
    request:
      path: /network-policy/uuid_netpol_blue2
      method: DELETE
      expected:
        - 200
    expect: null

  - name: Delete network_policy blue 1
    request:
      path: /network-policy/uuid_netpol_blue1
      method: DELETE
      expected:
        - 200
    expect: null

# Check quota for Route Table

  - name: Create route_table blue 1
    request:
      path: /route-tables
      method: POST
      expected:
        - 200
      data:
        route-table: *route_table_blue1
    expect:
      route-table: *route_table_blue1

  - name: Set quota for route_table to disallow second
    request:
      path: /project/uuid_proj_blue
      method: PUT
      expected:
        - 200
      data:
        project:
          uuid: uuid_proj_blue
          quota:
            route_table: 1
    expect: null

  - name: Create route_table blue 2
    request:
      path: /route-tables
      method: POST
      expected:
        - 400
        - 406
      data:
        route-table: *route_table_blue2
    expect: null

  - name: Re-verify route_table blue 2 is not created
    request:
      path: /network-policy/uuid_rtab_blue2
      method: GET
      expected:
       - 404
    expect: null

  - name: Set quota for route_table to allow second
    request:
      path: /project/uuid_proj_blue
      method: PUT
      expected:
        - 200
      data:
        project:
          uuid: uuid_proj_blue
          quota:
            route_table: 2
    expect: null

  - name: Create route_table blue 2 (again)
    request:
      path: /route-tables
      method: POST
      expected:
        - 200
      data:
        route-table: *route_table_blue2
    expect:
      route-table: *route_table_blue2

  - name: Delete route_table blue 2
    request:
      path: /route-table/uuid_rtab_blue2
      method: DELETE
      expected:
        - 200
    expect: null

  - name: Delete route_table blue 1
    request:
      path: /route-table/uuid_rtab_blue1
      method: DELETE
      expected:
        - 200
    expect: null

# Check quota for Security Logging Object

  - name: Create security_logging_object blue 1
    request:
      path: /security-logging-objects
      method: POST
      expected:
        - 200
      data:
        security-logging-object: *security_logging_object_blue1
    expect:
      security-logging-object: *security_logging_object_blue1

  - name: Set quota for security_logging_object to disallow second
    request:
      path: /project/uuid_proj_blue
      method: PUT
      expected:
        - 200
      data:
        project:
          uuid: uuid_proj_blue
          quota:
            security_logging_object: 1
    expect: null

  - name: Create security_logging_object blue 2
    request:
      path: /security-logging-objects
      method: POST
      expected:
        - 400
        - 406
      data:
        security-logging-object: *security_logging_object_blue2
    expect: null

  - name: Re-verify security_logging_object is not created
    request:
      path: /security-logging-object/uuid_seclogobj_blue2
      method: GET
      expected:
       - 404
    expect: null

  - name: Set quota for security_logging_object to allow second
    request:
      path: /project/uuid_proj_blue
      method: PUT
      expected:
        - 200
      data:
        project:
          uuid: uuid_proj_blue
          quota:
            security_logging_object: 2
    expect: null

  - name: Create security_logging_object blue 2 (again)
    request:
      path: /security-logging-objects
      method: POST
      expected:
        - 200
      data:
        security-logging-object: *security_logging_object_blue2
    expect:
      security-logging-object: *security_logging_object_blue2

  - name: Delete security_logging_object blue 2
    request:
      path: /security-logging-object/uuid_seclogobj_blue2
      method: DELETE
      expected:
        - 200
    expect: null

  - name: Delete security_logging_object blue 1
    request:
      path: /security-logging-object/uuid_seclogobj_blue1
      method: DELETE
      expected:
        - 200
    expect: null

# TODO: Check quota for Service Instance
# Disabled because ServiceTemplate cannot be created yet (JBE-439)
#
#  - name: Create service_template required by service_instance
#    request:
#      path: /service-templates
#      method: POST
#      expected:
#        - 200
#      data:
#        service-template: *service_template
#    expect:
#      service-template: *service_template
#
#  - name: Create service_instance blue 1
#    request:
#      path: /service-instances
#      method: POST
#      expected:
#        - 200
#      data:
#        service-instance: *service_instance_blue1
#    expect:
#      service-instance: *service_instance_blue1
#
#  - name: Set quota for service_instance to disallow second
#    request:
#      path: /project/uuid_proj_blue
#      method: PUT
#      expected:
#        - 200
#      data:
#        project:
#          uuid: uuid_proj_blue
#          quota:
#            service_instance: 1
#    expect: null
#
#  - name: Create service_instance blue 2
#    request:
#      path: /service-instances
#      method: POST
#      expected:
#        - 400
#        - 406
#      data:
#        service-instance: *service_instance_blue2
#    expect: null
#
#  - name: Re-verify service_instance is not created
#    request:
#      path: /service-instance/uuid_servinst_blue2
#      method: GET
#      expected:
#       - 404
#    expect: null
#
#  - name: Set quota for service_instance to allow second
#    request:
#      path: /project/uuid_proj_blue
#      method: PUT
#      expected:
#        - 200
#      data:
#        project:
#          uuid: uuid_proj_blue
#          quota:
#            service_instance: 2
#    expect: null
#
#  - name: Create service_instance blue 2 (again)
#    request:
#      path: /service-instances
#      method: POST
#      expected:
#        - 200
#      data:
#        service-instance: *service_instance_blue2
#    expect:
#      service-instance: *service_instance_blue2
#
#  - name: Delete service_instance blue 2
#    request:
#      path: /service-instance/uuid_servinst_blue2
#      method: DELETE
#      expected:
#        - 200
#    expect: null
#
#  - name: Delete service_instance blue 1
#    request:
#      path: /service-instance/uuid_servinst_blue1
#      method: DELETE
#      expected:
#        - 200
#    expect: null
#
#  - name: Delete service_template
#    request:
#      path: /service-template/uuid_servtmpl
#      method: DELETE
#      expected:
#        - 200
#    expect: null


