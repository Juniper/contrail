name: Virtual Network Test
description:  basic virtual network test
cleanup:
- path: /routing-instance/ri_uuid
- path: /project/admin_project_uuid
- path: /project/demo_project_uuid
- path: /network-ipam/test_ipam_blue
- path: /network-ipam/test_ipam_red
- path: /virtual-network/vn_blue
- path: /virtual-network/vn_red
- path: /network-policy/network_policy_uuid
- path: /network-policy/network_policy_uuid2
  client: bob
- path: /project/admin_project_uuid
- path: /project/demo_project_uuid
test_data:
  admin_project: &admin_project
    fq_name: ["default", "admin"]
    uuid: admin_project_uuid
    parent_type: domain
    parent_uuid: beefbeef-beef-beef-beef-beefbeef0002
    quota: {}
  demo_project: &demo_project
    fq_name: ["default", "demo"]
    uuid: demo_project_uuid
    parent_type: domain
    parent_uuid: beefbeef-beef-beef-beef-beefbeef0002
    quota: {}
  network_policy1: &network_policy1
    fq_name: ["default", "admin", "policy1"]
    uuid: network_policy_uuid
    parent_type: project
    parent_uuid: admin_project_uuid
    network_policy_entries:
      policy_rule:
        - direction: ">"
          protocol: tcp
          rule_sequence:
            major: 4
            minor: 1
  network_policy2: &network_policy2
    fq_name: ["default", "demo", "policy2"]
    uuid: network_policy_uuid2
    parent_type: project
    parent_uuid: demo_project_uuid
    network_policy_entries:
      policy_rule:
        - direction: ">"
          protocol: tcp
          rule_sequence:
            major: 4
            minor: 1
  network_ipam_blue: &network_ipam_blue
    network_ipam_mgmt:
      host_routes:
        route:
          - prefix: "test_prefix"
            next_hop: "1.2.3.5"
    uuid: test_ipam_blue
    display_name: test_ipam_blue
    parent_type: project
    parent_uuid: admin_project_uuid
    fq_name: ["domain","admin","test_ipam_blue"]
  network_ipam_red: &network_ipam_red
    network_ipam_mgmt:
      host_routes:
        route:
          - prefix: "test_prefix"
            next_hop: "1.2.3.5"
    uuid: test_ipam_red
    display_name: test_ipam_red
    parent_type: project
    parent_uuid: admin_project_uuid
    fq_name: ["domain","admin","test_ipam_red"]
  vn_blue: &vn_blue
    fq_name: ["default", "admin", "vn_blue"]
    uuid: vn_blue
    display_name: blue
    parent_type: project
    parent_uuid: admin_project_uuid
    route_target_list:
       route_target: ["100:200"]
    network_policy_refs:
    - uuid: network_policy_uuid
    network_ipam_refs:
    - uuid: test_ipam_blue
  vn_blue_with_detail: &vn_blue_with_detail
    uuid: vn_blue
    display_name: blue
    parent_type: project
    parent_uuid: admin_project_uuid
    network_policy_refs:
    - uuid: network_policy_uuid
    network_ipam_refs:
    - uuid: test_ipam_blue
    virtual_network_network_id: $number
    routing_instances:
    - uuid: ri_uuid
      parent_uuid: vn_blue
  vn_red: &vn_red
    uuid: vn_red
    display_name: red
    fq_name: ["default", "admin", "vn_red"]
    parent_type: project
    parent_uuid: admin_project_uuid
    network_policy_refs:
    - uuid: network_policy_uuid
    network_ipam_refs:
    - uuid: test_ipam_red
  vn_red_with_detail: &vn_red_with_detail
    uuid: vn_red
    display_name: red
    parent_type: project
    parent_uuid: admin_project_uuid
    network_policy_refs:
    - uuid: network_policy_uuid
    network_ipam_refs:
    - uuid: test_ipam_red
    virtual_network_network_id: $number
  vn_blue_simple: &vn_blue_simple
    fq_name: ["default", "admin", "vn_blue"]
    uuid: vn_blue
    display_name: blue
    parent_type: project
    parent_uuid: admin_project_uuid
  vn_red_simple: &vn_red_simple
    uuid: vn_red
    display_name: red
    fq_name: ["default", "admin", "vn_red"]
    parent_type: project
    parent_uuid: admin_project_uuid
clients:
  default:
    id: alice
    password: alice_password
    domain: default
    insecure: true
    scope:
      project:
        name: admin
  bob:
    id: bob
    password: bob_password
    domain: default
    insecure: true
    scope:
      project:
        name: demo
workflow:
- name: create project admin
  request:
    path: /projects
    method: POST
    expected:
    - 201
    data:
      project: *admin_project
  expect:
    project: *admin_project
- name: create project demo
  client: bob
  request:
    path: /projects
    method: POST
    expected:
    - 201
    data:
      project: *demo_project
  expect:
    project: *demo_project
- name: create network policy 1
  request:
    path: /network-policys
    method: POST
    expected:
    - 201
    data:
      network-policy: *network_policy1
  expect:
    network-policy:
      uuid: network_policy_uuid
      fq_name: ["default", "admin", "policy1"]
      parent_type: project
      parent_uuid: admin_project_uuid
      perms2:
        owner: admin
- name: create network policy 2
  client: bob
  request:
    path: /network-policys
    method: POST
    expected:
    - 201
    data:
      network-policy: *network_policy2
  expect:
    network-policy:
      uuid: network_policy_uuid2
      fq_name: ["default", "demo", "policy2"]
      parent_type: project
      parent_uuid: demo_project_uuid
      perms2:
        owner: demo
- name: create network ipam blue
  request:
    path: /network-ipams
    method: POST
    expected:
    - 201
    data:
      network-ipam: *network_ipam_blue
  expect:
    network-ipam: *network_ipam_blue
- name: create virtual network blue
  request:
    path: /virtual-networks
    method: POST
    expected:
    - 201
    data:
      virtual-network: *vn_blue
  expect:
    virtual-network: *vn_blue
- name: create network ipam1
  request:
    path: /network-ipams
    method: POST
    expected:
    - 201
    data:
      network-ipam:
        network_ipam_mgmt:
          host_routes:
            route:
              - prefix: "test_prefix"
                next_hop: "1.2.3.5"
        uuid: test_ipam1
        display_name: test_ipam1
        parent_type: project
        parent_uuid: admin_project_uuid
        fq_name: ["domain","admin","test_ipam1"]
  expect:
    network-ipam:
      uuid: test_ipam1
      display_name: test_ipam1
      parent_type: project
      parent_uuid: admin_project_uuid
      fq_name: ["domain","admin","test_ipam1"]
- name: create network ipam2
  request:
    path: /network-ipams
    method: POST
    expected:
    - 201
    data:
      network-ipam:
        network_ipam_mgmt:
          host_routes:
            route:
              - prefix: "test_prefix"
                next_hop: "1.2.3.5"
        uuid: test_ipam2
        display_name: test_ipam2
        parent_type: project
        parent_uuid: admin_project_uuid
        fq_name: ["domain","admin","test_ipam2"]
  expect:
    network-ipam:
      uuid: test_ipam2
      display_name: test_ipam2
      parent_type: project
      parent_uuid: admin_project_uuid
      fq_name: ["domain","admin","test_ipam2"]
- name: create virtual network ref
  request:
    path: /virtual-networks
    method: POST
    expected:
    - 201
    data:
      virtual-network:
        fq_name: ["default", "admin", "vn_test_ref"]
        uuid: "vn_test_ref"
        display_name: "vn_test_ref"
        parent_type: "project"
        parent_uuid: "admin_project_uuid"
        network_ipam_refs:
          - uuid: "test_ipam1"
            to: ["domain","admin","test_ipam1"]
            attr:
              host_routes:
                route:
                  - prefix: "test_prefix"
                    next_hop: "1.2.3.5"
  expect:
    virtual-network:
      fq_name: ["default", "admin", "vn_test_ref"]
      uuid: vn_test_ref
      display_name: vn_test_ref
      parent_type: project
      parent_uuid: admin_project_uuid
- name: update virtual network ref
  request:
    path: /virtual-network/vn_test_ref
    method: PUT
    expected:
    - 200
    data:
      virtual-network:
        fq_name: ["default", "admin", "vn_test_ref"]
        uuid: "vn_test_ref"
        display_name: "vn_test_ref"
        parent_type: "project"
        parent_uuid: "admin_project_uuid"
        perms2:
          share:
            - tenant: "default:demo"
              tenant_access: 7
        network_ipam_refs:
          - uuid: "test_ipam1"
            to: ["domain","admin","test_ipam1"]
          - uuid: "test_ipam2"
            to: ["domain","admin","test_ipam2"]
            attr:
              host_routes:
                route:
                  - prefix: "test_prefix"
                    next_hop: "1.2.3.5"
  expect:
    virtual-network:
      uuid: vn_test_ref
      network_ipam_refs:
        - uuid: "test_ipam1"
          to: ["domain","admin","test_ipam1"]
        - uuid: "test_ipam2"
          to: ["domain","admin","test_ipam2"]
          attr:
            host_routes:
              route:
                - prefix: "test_prefix"
                  next_hop: "1.2.3.5"
- name: delete virtual network
  request:
    path: /virtual-network/vn_test_ref
    method: DELETE
    expected:
    - 204
  expect: null
- name: delete network ipam
  request:
    path: /network-ipam/test_ipam1
    method: DELETE
    expected:
    - 204
  expect: null
- name: delete network ipam
  request:
    path: /network-ipam/test_ipam2
    method: DELETE
    expected:
    - 204
  expect: null
- name: create network ipam red
  request:
    path: /network-ipams
    method: POST
    expected:
    - 201
    data:
      network-ipam: *network_ipam_red
  expect:
    network-ipam: *network_ipam_red
- name: create virtual network red
  request:
    path: /virtual-networks
    method: POST
    expected:
    - 201
    data:
      virtual-network: *vn_red
  expect:
    virtual-network: *vn_red
- name: create routing instance
  request:
    path: /routing-instances
    method: POST
    expected:
    - 201
    data:
      routing-instance:
        uuid: ri_uuid
        fq_name: ["default", "admin", "ri1"]
        parent_type: virtual-network
        parent_uuid: vn_blue
  expect:
    routing-instance:
      uuid: ri_uuid
      fq_name: ["default", "admin", "ri1"]
      parent_type: virtual-network
      parent_uuid: vn_blue
- name: list virtual networks with detail
  request:
    path: /virtual-networks?detail=true
    method: GET
    expected:
    - 200
  expect:
    virtual-networks:
    - *vn_blue_with_detail
    - *vn_red_with_detail
- name: list virtual networks with share
  request:
    path: /virtual-networks?shared=true
    method: GET
    expected:
    - 200
  expect:
    virtual-networks:
    - *vn_blue_simple
    - *vn_red_simple
- name: list virtual networks with filters
  request:
    path: "/virtual-networks?filters=display_name==blue"
    method: GET
    expected:
    - 200
  expect:
    virtual-networks:
    - *vn_blue_simple
- name: list virtual networks with back_ref_id
  request:
    path: "/virtual-networks?back_ref_id=ri_uuid"
    method: GET
    expected:
    - 200
  expect:
    virtual-networks:
    - *vn_blue_simple
- name: list virtual networks with parent_id
  request:
    path: "/virtual-networks?parent_id=admin_project_uuid"
    method: GET
    expected:
    - 200
  expect:
    virtual-networks:
    - *vn_blue_simple
    - *vn_red_simple
- name: list virtual networks with parent_fq_name_str
  request:
    path: "/virtual-networks?parent_fq_name_str=default:admin"
    method: GET
    expected:
    - 200
  expect:
    virtual-networks:
    - *vn_blue_simple
    - *vn_red_simple
- name: list virtual networks with page limit
  request:
    path: "/virtual-networks?pageLimit=1&detail=true"
    method: GET
    expected:
    - 200
  expect:
    virtual-networks:
    - *vn_blue_with_detail
- name: list virtual networks with obj_uuids
  request:
    path: "/virtual-networks?obj_uuids=vn_blue&detail=true"
    method: GET
    expected:
    - 200
  expect:
    virtual-networks:
    - *vn_blue_with_detail
- name: list network policy
  request:
    path: /network-policys
    method: GET
    expected:
    - 200
  expect:
    network-policys:
    - uuid: network_policy_uuid
      perms2:
        owner: admin
- name: list network policy
  client: bob
  request:
    path: /network-policys
    method: GET
    expected:
    - 200
  expect:
    network-policys:
    - uuid: network_policy_uuid2
      perms2:
        owner: demo
- name: delete routing instance
  request:
    path: /routing-instance/ri_uuid
    method: DELETE
    expected:
    - 204
  expect: null
- name: delete virtual network
  request:
    path: /virtual-network/vn_blue
    method: DELETE
    expected:
    - 204
  expect: null
- name: delete network ipam blue
  request:
    path: /network-ipam/test_ipam_blue
    method: DELETE
    expected:
    - 204
  expect: null
- name: delete virtual network
  request:
    path: /virtual-network/vn_red
    method: DELETE
    expected:
    - 204
  expect: null
- name: delete network ipam red
  request:
    path: /network-ipam/test_ipam_red
    method: DELETE
    expected:
    - 204
  expect: null
- name: delete network policy
  request:
    path: /network-policy/network_policy_uuid
    method: DELETE
    expected:
    - 204
  expect: null
