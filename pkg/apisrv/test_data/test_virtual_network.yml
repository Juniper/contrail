name: Virtual Network Test
description:  basic virtual network test
cleanup:
- path: /routing-instance/ri_uuid
- path: /virtual-network/vn_blue
- path: /virtual-network/vn_red
- path: /virtual-network/vn_test_ref
- path: /network-ipam/test_ipam_blue
- path: /network-ipam/test_ipam_red
- path: /network-ipam/test_ipam1
- path: /network-ipam/test_ipam2
- path: /instance-ip/test_instance_ip
- path: /network-policy/network_policy_uuid
- path: /network-policy/network_policy_uuid2
  client: bob
- path: /project/admin_project_uuid
- path: /project/demo_project_uuid
  client: bob
test_data:
  admin_project: &admin_project
    fq_name: ["default", "admin_project_uuid"]
    uuid: admin_project_uuid
    parent_type: domain
    parent_uuid: beefbeef-beef-beef-beef-beefbeef0002
    quota: {}
  demo_project: &demo_project
    fq_name: ["default", "demo_project_uuid"]
    uuid: demo_project_uuid
    parent_type: domain
    parent_uuid: beefbeef-beef-beef-beef-beefbeef0002
    quota: {}
  network_policy1: &network_policy1
    fq_name: ["default", "admin_project_uuid", "policy1"]
    uuid: network_policy_uuid
    parent_type: project
    parent_uuid: admin_project_uuid
    network_policy_entries:
      policy_rule:
        - direction: ">"
          protocol: tcp
          rule_sequence:
            major: 4
            minor: 1
          src_ports: [{}]
          dst_ports: [{}]
          ethertype: IPv4
          src_addresses: [{}]
          dst_addresses: [{}]
          action_list:
            simple_action: pass
  admin_project_with_network_policy1: &admin_project_with_network_policy1
    <<: *admin_project
    network_policys:
    - <<: *network_policy1
  network_policy2: &network_policy2
    fq_name: ["default", "demo_project_uuid", "policy2"]
    uuid: network_policy_uuid2
    parent_type: project
    parent_uuid: demo_project_uuid
    network_policy_entries:
      policy_rule:
        - direction: ">"
          protocol: tcp
          rule_sequence:
            major: 4
            minor: 1
          src_ports: [{}]
          dst_ports: [{}]
          ethertype: IPv4
          src_addresses: [{}]
          dst_addresses: [{}]
          action_list:
            simple_action: pass
  network_ipam_blue: &network_ipam_blue
    network_ipam_mgmt:
      host_routes:
        route:
          - prefix: "test_prefix"
            next_hop: "1.2.3.5"
    uuid: test_ipam_blue
    display_name: test_ipam_blue
    parent_type: project
    parent_uuid: admin_project_uuid
    fq_name: ["domain","admin_project_uuid","test_ipam_blue"]
  network_ipam_red: &network_ipam_red
    network_ipam_mgmt:
      host_routes:
        route:
          - prefix: "test_prefix"
            next_hop: "1.2.3.5"
    uuid: test_ipam_red
    display_name: test_ipam_red
    parent_type: project
    parent_uuid: admin_project_uuid
    fq_name: ["domain","admin_project_uuid","test_ipam_red"]
  vn_blue: &vn_blue
    fq_name: ["default", "admin_project_uuid", "vn_blue"]
    uuid: vn_blue
    display_name: blue
    parent_type: project
    parent_uuid: admin_project_uuid
    route_target_list:
       route_target: ["100:200"]
    network_policy_refs:
    - uuid: network_policy_uuid
      to: ["default", "admin_project_uuid", "policy1"]
    network_ipam_refs:
    - uuid: test_ipam_blue
  vn_blue_ri1: &vn_blue_ri1
    uuid: ri_uuid
    fq_name: ["default", "admin_project_uuid", "ri1"]
    parent_type: virtual-network
    parent_uuid: vn_blue
  vn_blue_ri_default: &vn_blue_ri_default
    fq_name: ["default", "admin_project_uuid", "vn_blue", "vn_blue"]
    parent_type: virtual-network
    parent_uuid: vn_blue
  vn_blue_with_detail: &vn_blue_with_detail
    uuid: vn_blue
    display_name: blue
    parent_type: project
    parent_uuid: admin_project_uuid
    network_policy_refs:
    - uuid: network_policy_uuid
    network_ipam_refs:
    - uuid: test_ipam_blue
    routing_instances:
    - *vn_blue_ri1
    - *vn_blue_ri_default
  vn_red: &vn_red
    uuid: vn_red
    display_name: red
    fq_name: ["default", "admin_project_uuid", "vn_red"]
    parent_type: project
    parent_uuid: admin_project_uuid
    network_policy_refs:
    - uuid: network_policy_uuid
    network_ipam_refs:
    - uuid: test_ipam_red
  vn_red_with_detail: &vn_red_with_detail
    uuid: vn_red
    display_name: red
    parent_type: project
    parent_uuid: admin_project_uuid
    network_policy_refs:
    - uuid: network_policy_uuid
    network_ipam_refs:
    - uuid: test_ipam_red
  vn_blue_simple: &vn_blue_simple
    uuid: vn_blue
    display_name: blue
    parent_type: project
    parent_uuid: admin_project_uuid
  vn_red_simple: &vn_red_simple
    uuid: vn_red
    display_name: red
    fq_name: ["default", "admin_project_uuid", "vn_red"]
    parent_type: project
    parent_uuid: admin_project_uuid
clients:
  default:
    id: alice
    password: alice_password
    domain: default
    insecure: true
    scope:
      project:
        name: admin
  bob:
    id: bob
    password: bob_password
    domain: default
    insecure: true
    scope:
      project:
        name: demo
workflow:
- name: create project admin
  request:
    path: /projects
    method: POST
    expected:
    - 200
    data:
      project: *admin_project
  expect:
    project: *admin_project
- name: create project demo
  client: bob
  request:
    path: /projects
    method: POST
    expected:
    - 200
    data:
      project: *demo_project
  expect:
    project: *demo_project
- name: create network policy 1
  request:
    path: /network-policys
    method: POST
    expected:
    - 200
    data:
      network-policy: *network_policy1
  expect:
    network-policy: *network_policy1
- name: get project with network policy 1
  request:
    path: /project/admin_project_uuid
    method: GET
    expected:
    - 200
  expect:
    project: *admin_project_with_network_policy1
- name: create network policy 2
  client: bob
  request:
    path: /network-policys
    method: POST
    expected:
    - 200
    data:
      network-policy: *network_policy2
  expect:
    network-policy:
      uuid: network_policy_uuid2
      fq_name: ["default", "demo_project_uuid", "policy2"]
      parent_type: project
      parent_uuid: demo_project_uuid
      perms2:
        owner: demo
- name: create network ipam blue
  request:
    path: /network-ipams
    method: POST
    expected:
    - 200
    data:
      network-ipam: *network_ipam_blue
  expect:
    network-ipam: *network_ipam_blue
- name: create virtual network blue
  request:
    path: /virtual-networks
    method: POST
    expected:
    - 200
    data:
      virtual-network: *vn_blue
  expect:
    virtual-network: *vn_blue
- name: create network ipam1
  request:
    path: /network-ipams
    method: POST
    expected:
    - 200
    data:
      network-ipam:
        network_ipam_mgmt:
          host_routes:
            route:
            - prefix: "test_prefix"
              next_hop: "1.2.3.5"
        uuid: test_ipam1
        display_name: test_ipam1
        parent_type: project
        parent_uuid: admin_project_uuid
        fq_name: ["domain","admin_project_uuid","test_ipam1"]
  expect:
    network-ipam:
      uuid: test_ipam1
      display_name: test_ipam1
      parent_type: project
      parent_uuid: admin_project_uuid
      fq_name: ["domain","admin_project_uuid","test_ipam1"]
- name: create network ipam2
  request:
    path: /network-ipams
    method: POST
    expected:
    - 200
    data:
      network-ipam:
        network_ipam_mgmt:
          host_routes:
            route:
            - prefix: "test_prefix"
              next_hop: "1.2.3.5"
        uuid: test_ipam2
        display_name: test_ipam2
        parent_type: project
        parent_uuid: admin_project_uuid
        fq_name: ["domain","admin_project_uuid","test_ipam2"]
  expect:
    network-ipam:
      uuid: test_ipam2
      display_name: test_ipam2
      parent_type: project
      parent_uuid: admin_project_uuid
      fq_name: ["domain","admin_project_uuid","test_ipam2"]
- name: create virtual network ref
  request:
    path: /virtual-networks
    method: POST
    expected:
    - 200
    data:
      virtual-network:
        fq_name: ["default", "admin_project_uuid", "vn_test_ref"]
        uuid: "vn_test_ref"
        display_name: "vn_test_ref"
        parent_type: "project"
        parent_uuid: "admin_project_uuid"
        network_ipam_refs:
          - to: ["domain","admin_project_uuid","test_ipam1"]
            attr:
              host_routes:
                route:
                - prefix: "test_prefix"
                  next_hop: "1.2.3.5"
  expect:
    virtual-network:
      fq_name: ["default", "admin_project_uuid", "vn_test_ref"]
      uuid: vn_test_ref
      display_name: vn_test_ref
      parent_type: project
      parent_uuid: admin_project_uuid
      network_ipam_refs:
        - uuid: "test_ipam1"
          to: ["domain","admin_project_uuid","test_ipam1"]
- name: update virtual network ref
  request:
    path: /virtual-network/vn_test_ref
    method: PUT
    expected:
    - 200
    data:
      virtual-network:
        fq_name: ["default", "admin_project_uuid", "vn_test_ref"]
        uuid: "vn_test_ref"
        display_name: "vn_test_ref"
        parent_type: "project"
        parent_uuid: "admin_project_uuid"
        perms2:
          share:
            - tenant: "default:demo"
              tenant_access: 7
        network_ipam_refs:
          - to: ["domain","admin_project_uuid","test_ipam1"]
          - uuid: "test_ipam2"
            to: ["domain","admin_project_uuid","test_ipam2"]
            attr:
              host_routes:
                route:
                  - prefix: "test_prefix"
                    next_hop: "1.2.3.5"
  expect:
    virtual-network:
      uuid: vn_test_ref
      network_ipam_refs:
        - uuid: "test_ipam1"
          to: ["domain","admin_project_uuid","test_ipam1"]
        - uuid: "test_ipam2"
          to: ["domain","admin_project_uuid","test_ipam2"]
          attr:
            host_routes:
              route:
                - prefix: "test_prefix"
                  next_hop: "1.2.3.5"
- name: delete virtual network
  request:
    path: /virtual-network/vn_test_ref
    method: DELETE
    expected:
    - 200
  expect: null
- name: delete network ipam
  request:
    path: /network-ipam/test_ipam1
    method: DELETE
    expected:
    - 200
  expect: null
- name: delete network ipam
  request:
    path: /network-ipam/test_ipam2
    method: DELETE
    expected:
    - 200
  expect: null
- name: create network ipam red
  request:
    path: /network-ipams
    method: POST
    expected:
    - 200
    data:
      network-ipam: *network_ipam_red
  expect:
    network-ipam: *network_ipam_red
- name: create virtual network red
  request:
    path: /virtual-networks
    method: POST
    expected:
    - 200
    data:
      virtual-network: *vn_red
  expect:
    virtual-network: *vn_red
- name: create routing instance
  request:
    path: /routing-instances
    method: POST
    expected:
    - 200
    data:
      routing-instance: *vn_blue_ri1
  expect:
    routing-instance: *vn_blue_ri1
- name: get network ipam with back reference to virtual network
  request:
    path: /network-ipam/test_ipam_blue?detail=true
    method: GET
    expected:
    - 200
  expect:
    network-ipam:
      <<: *network_ipam_blue
      virtual_network_backrefs:
      - *vn_blue_simple
- name: list virtual networks with detail
  request:
    # TODO: parent_id is temporary fix as tests in gen_db_test.go are not cleaning database.
    path: /virtual-networks?detail=true&parent_id=admin_project_uuid
    method: GET
    expected:
    - 200
  expect:
    virtual-networks:
    - *vn_blue_with_detail
    - *vn_red_with_detail
- name: list virtual networks with share
  request:
    # TODO: parent_id is temporary fix as tests in gen_db_test.go are not cleaning database.
    path: /virtual-networks?shared=true&parent_id=admin_project_uuid
    method: GET
    expected:
    - 200
  expect:
    virtual-networks:
    - *vn_blue_simple
    - *vn_red_simple
- name: list virtual networks with filters
  request:
    path: "/virtual-networks?filters=display_name==blue"
    method: GET
    expected:
    - 200
  expect:
    virtual-networks:
    - *vn_blue_simple
- name: list network ipams with back_ref_id filter
  request:
    path: "/network-ipams?back_ref_id=vn_blue"
    method: GET
    expected:
    - 200
  expect:
    network-ipams:
    - *network_ipam_blue
- name: list network ipams with back_ref_id filter (invalid uuid, empty result)
  request:
    path: "/network-ipams?back_ref_id=hogehoge"
    method: GET
    expected:
    - 200
  expect:
    network-ipams: null
- name: list virtual networks with parent_id
  request:
    path: "/virtual-networks?parent_id=admin_project_uuid"
    method: GET
    expected:
    - 200
  expect:
    virtual-networks:
    - *vn_blue_simple
    - *vn_red_simple
# TODO enable when ParentFQName filter is implemented (pkg/db/basedb/query_builder.go:244)
#- name: list virtual networks with parent_fq_name_str
#  request:
#    path: "/virtual-networks?parent_fq_name_str=default:admin_project_uuid"
#    method: GET
#    expected:
#    - 200
#  expect:
#    virtual-networks:
#    - *vn_blue_simple
#    - *vn_red_simple
- name: list virtual networks with page limit
  request:
    # TODO: parent_id is temporary fix as tests in gen_db_test.go are not cleaning database.
    # Display name is needed as adding parent_id constraint is changing order.
    path: /virtual-networks?pageLimit=1&detail=true&parent_id=admin_project_uuid&filters=display_name==blue
    method: GET
    expected:
    - 200
  expect:
    virtual-networks:
    - *vn_blue_with_detail
- name: list virtual networks with obj_uuids
  request:
    path: "/virtual-networks?obj_uuids=vn_blue&detail=true"
    method: GET
    expected:
    - 200
  expect:
    virtual-networks:
    - *vn_blue_with_detail
- name: count virtual networks
  request:
    path: "/virtual-networks?parent_id=admin_project_uuid&count=true"
    method: GET
    expected:
    - 200
  expect:
    virtual-networks:
      count: 2
- name: count virtual networks with filters
  request:
    path: "/virtual-networks?filters=display_name==blue&count=true"
    method: GET
    expected:
    - 200
  expect:
    virtual-networks:
      count: 1
- name: count virtual networks with share
  request:
    # TODO: parent_id is temporary fix as tests in gen_db_test.go are not cleaning database.
    path: "/virtual-networks?shared=true&parent_id=admin_project_uuid&count=true"
    method: GET
    expected:
    - 200
  expect:
    virtual-networks:
      count: 2
- name: count network ipams with back_ref_id filter
  request:
    path: "/network-ipams?back_ref_id=vn_blue&count=true"
    method: GET
    expected:
    - 200
  expect:
    network-ipams:
      count: 1
- name: count network ipams with back_ref_id filter (invalid uuid, empty result)
  request:
    path: "/network-ipams?back_ref_id=hogehoge&count=true"
    method: GET
    expected:
    - 200
  expect:
    network-ipams:
      count: 0
- name: list network policy
  request:
    # TODO: parent_id is temporary fix as tests in gen_db_test.go are not cleaning database.
    path: /network-policys?parent_id=admin_project_uuid
    method: GET
    expected:
    - 200
  expect:
    network-policys:
    - *network_policy1
- name: list network policy by user bob
  client: bob
  request:
    path: /network-policys
    method: GET
    expected:
    - 200
  expect:
    network-policys:
    - *network_policy2
- name: count network policies
  request:
    # TODO: parent_id is temporary fix as tests in gen_db_test.go are not cleaning database.
    path: "/network-policys?parent_id=admin_project_uuid&count=true"
    method: GET
    expected:
    - 200
  expect:
    network-policys:
      count: 1

- name: update vn_blue with user-defined subnet
  request:
    path: /virtual-network/vn_blue
    method: PUT
    expected:
    - 200
    data:
      virtual-network:
        uuid: "vn_blue"
        network_ipam_refs:
          - to: ["domain","admin_project_uuid","test_ipam_blue"]
            attr:
              ipam_subnets:
                - subnet_uuid: "054ca01e-cef3-444e-b4d5-4ac16554ac3d"
                  subnet:
                    ip_prefix: "10.0.0.0"
                    ip_prefix_len: 24
  expect:
    virtual-network:
      network_ipam_refs:
        - uuid: test_ipam_blue
          to: ["domain","admin_project_uuid","test_ipam_blue"]
          attr:
            ipam_subnets:
              - subnet_uuid: "054ca01e-cef3-444e-b4d5-4ac16554ac3d"
                subnet:
                  ip_prefix: "10.0.0.0"
                  ip_prefix_len: 24

- name: update virtual network properties it shouldn't affect subnets in address manager
  request:
    path: /virtual-network/vn_blue
    method: PUT
    expected:
    - 200
    data:
      virtual-network:
        virtual_network_properties:
          forwarding_mode: l3
  expect:
    virtual-network:
      virtual_network_properties:
        forwarding_mode: l3

- name: create instance ip
  request:
    path: /instance-ips
    method: POST
    expected:
    - 200
    data:
      instance-ip:
        uuid: "test_instance_ip"
        subnet_uuid: "054ca01e-cef3-444e-b4d5-4ac16554ac3d"
        instance_ip_address: "10.0.0.1"
        network_ipam_refs:
        - to: ["domain","admin_project_uuid","test_ipam_blue"]
        virtual_network_refs:
        - to: ["default", "admin_project_uuid", "vn_blue"]
  expect:
    instance-ip:
      network_ipam_refs:
      - uuid: test_ipam_blue
        to: ["domain","admin_project_uuid","test_ipam_blue"]
      virtual_network_refs:
      - uuid: vn_blue
        to: ["default", "admin_project_uuid", "vn_blue"]

# Virtual Network can't be updated since there is an instance IP attached to it
- name: try update vn_blue with different subnet
  request:
    path: /virtual-network/vn_blue
    method: PUT
    expected:
    - 409
    data:
      virtual-network:
        uuid: "vn_blue"
        network_ipam_refs:
          - uuid: test_ipam_blue
            attr:
              ipam_subnets:
                - subnet_uuid: "16ee1b2f-caa3-4465-ab2f-b0941da44d43"
                  subnet:
                    ip_prefix: "10.0.0.0"
                    ip_prefix_len: 24

- name: delete instance ip
  request:
    path: /instance-ip/test_instance_ip
    method: DELETE
    expected:
    - 200
  expect: null

- name: update vn_blue with different subnet
  request:
    path: /virtual-network/vn_blue
    method: PUT
    expected:
    - 200
    data:
      virtual-network:
        uuid: "vn_blue"
        network_ipam_refs:
          - uuid: test_ipam_blue
            attr:
              ipam_subnets:
                - subnet_uuid: "16ee1b2f-caa3-4465-ab2f-b0941da44d43"
                  subnet:
                    ip_prefix: "10.0.0.0"
                    ip_prefix_len: 24

- name: try to update vn_blue by changing is_provider_network
  request:
    path: /virtual-network/vn_blue
    method: PUT
    expected:
    - 400
    data:
      virtual-network:
        uuid: "vn_blue"
        is_provider_network: true
- name: try to update vn_blue by linking it with non-provider network
  request:
    path: /virtual-network/vn_blue
    method: PUT
    expected:
    - 400
    data:
      virtual-network:
        uuid: "vn_blue"
        virtual_network_refs:
          - uuid: "vn_red"
          - to: ["default", "admin_project_uuid", "vn_red"]
- name: delete routing instance
  request:
    path: /routing-instance/ri_uuid
    method: DELETE
    expected:
    - 200
  expect: null
- name: show default routing instance for vn_blue
  request:
    path: /routing-instances?parent_id=vn_blue
    method: GET
    expected:
    - 200
  expect:
    routing-instances:
    - &vn_blue_ri_default
- name: delete virtual network
  request:
    path: /virtual-network/vn_blue
    method: DELETE
    expected:
    - 200
  expect: null
- name: show routing instances for vn_blue after deleting vn_blue
  request:
    path: /routing-instances?parent_id=vn_blue
    method: GET
    expected:
    - 200
  expect:
    routing-instances: []
- name: delete network ipam blue
  request:
    path: /network-ipam/test_ipam_blue
    method: DELETE
    expected:
    - 200
  expect: null
- name: delete virtual network
  request:
    path: /virtual-network/vn_red
    method: DELETE
    expected:
    - 200
  expect: null
- name: delete network ipam red
  request:
    path: /network-ipam/test_ipam_red
    method: DELETE
    expected:
    - 200
  expect: null
- name: delete network policy
  request:
    path: /network-policy/network_policy_uuid
    method: DELETE
    expected:
    - 200
  expect: null
- name: list virtual networks after deletes
  request:
    path: "/virtual-networks?parent_id=admin_project_uuid"
    method: GET
    expected:
    - 200
  expect:
    virtual-networks: []
- name: count virtual networks after deletes
  request:
    path: "/virtual-networks?parent_id=admin_project_uuid&count=true"
    method: GET
    expected:
    - 200
  expect:
    virtual-networks:
      count: 0
