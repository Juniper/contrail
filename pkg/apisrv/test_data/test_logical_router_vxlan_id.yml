name: Logical Router Test for VxLAN IDs
description:  tests that VxLAN IDs are allocated properly
cleanup:
- path: /bgpvpn/lr_vxlan_bgpvpn_l3
- path: /virtual-network/test_vn_lr_vxlan_blue
- path: /network-ipam/test_ipam_lr_vxlan_blue
- path: /virtual-machine-interface/ce14a053-3f09-49aa-a57a-20cc6a1506a4
- path: /logical-router/vn_vxlan_logical_router
- path: /project/admin_lr_vxlan_project_uuid
- path: /virtual-network/vn_vxlan_conflicting_vn
- path: /logical-router/vn_vxlan_conflicting_logical_router
test_data:

  admin_project: &admin_project_lr
    uuid: admin_lr_vxlan_project_uuid
    name: admin_lr_vxlan_project
    parent_type: domain
    parent_uuid: beefbeef-beef-beef-beef-beefbeef0002
    vxlan_routing: true
    quota: {}

  bgpvpn_l3: &bgpvpn_l3
    uuid: lr_vxlan_bgpvpn_l3
    name: lr_vxlan_bgpvpn_l3
    parent_type: project
    parent_uuid: admin_lr_vxlan_project_uuid
    bgpvpn_type: l3

  network_ipam_blue: &network_ipam_blue
    uuid: test_ipam_lr_vxlan_blue
    name: test_ipam_lr_vxlan_blue
    parent_type: project
    parent_uuid: admin_lr_vxlan_project_uuid

  vn_blue: &virtual_network_blue
    uuid: test_vn_lr_vxlan_blue
    name: test_vn_lr_vxlan_blue
    parent_type: project
    parent_uuid: admin_lr_vxlan_project_uuid
    network_ipam_refs:
      - uuid: test_ipam_lr_vxlan_blue

  vmi_blue: &vmi_blue
    uuid: ce14a053-3f09-49aa-a57a-20cc6a1506a4
    fq_name: ["default-domain", "admin_lr_vxlan_project", "test_vmi_lr_vxlan_blue"]
    parent_type: project
    virtual_network_refs:
      - uuid: test_vn_lr_vxlan_blue
        to: ["default-domain", "admin_lr_vxlan_project", "test_vn_lr_vxlan_blue"]

  vn_vxlan_logical_router: &vn_vxlan_logical_router
    uuid: vn_vxlan_logical_router
    fq_name: ["default-domain", "admin_lr_vxlan_project", "vn_vxlan_logical_router"]
    parent_type: project
    vxlan_network_identifier: "20"
    virtual_machine_interface_refs:
      - uuid: ce14a053-3f09-49aa-a57a-20cc6a1506a4
    bgpvpn_refs:
      - uuid: lr_vxlan_bgpvpn_l3

  vn_vxlan_conflicting_logical_router: &vn_vxlan_conflicting_logical_router
    uuid: vn_vxlan_conflicting_logical_router
    fq_name: ["default-domain", "admin_lr_vxlan_project", "vn_vxlan_conflicting_logical_router"]
    parent_type: project
    vxlan_network_identifier: "20"
    virtual_machine_interface_refs:
      - uuid: ce14a053-3f09-49aa-a57a-20cc6a1506a4
    bgpvpn_refs:
      - uuid: lr_vxlan_bgpvpn_l3

  vn_vxlan_conflicting_vn: &vn_vxlan_conflicting_vn
    fq_name: ["default", "admin_vn_vxlan_project_uuid", "vn_vxlan_conflicting_vn"]
    uuid: vn_vxlan_conflicting_vn
    parent_type: project
    parent_uuid: admin_vn_vxlan_project_uuid
    virtual_network_properties:
      vxlan_network_identifier: 20

clients:
  default:
    id: alice
    password: alice_password
    insecure: true
    scope:
      project:
        name: admin

workflow:
- name: create project
  request:
    path: /projects
    method: POST
    expected:
    - 200
    data:
      project: *admin_project_lr
  expect:
    project: *admin_project_lr

- name: create bgpvpn l3
  request:
    path: /bgpvpns
    method: POST
    expected:
    - 200
    data:
      bgpvpn: *bgpvpn_l3
  expect:
    bgpvpn: *bgpvpn_l3

- name: create network ipam blue
  request:
    path: /network-ipams
    method: POST
    expected:
    - 200
    data:
      network-ipam: *network_ipam_blue
  expect:
    network-ipam: *network_ipam_blue

- name: create virtual network blue
  request:
    path: /virtual-networks
    method: POST
    expected:
    - 200
    data:
      virtual-network: *virtual_network_blue
  expect:
    virtual-network: *virtual_network_blue

- name: create virtual machine interface blue
  request:
    path: /virtual-machine-interfaces
    method: POST
    expected:
    - 200
    data:
      virtual-machine-interface: *vmi_blue
  expect:
    virtual-machine-interface: *vmi_blue

- name: count virtual networks
  request:
    path: "/virtual-networks?count=true&parent_id=admin_lr_vxlan_project_uuid"
    method: GET
    expected:
    - 200
  expect:
    virtual-networks:
      count: 1

- name: create logical router
  request:
    path: /logical-routers
    method: POST
    expected:
    - 200
    data:
      logical-router: *vn_vxlan_logical_router
  expect:
    logical-router: *vn_vxlan_logical_router

- name: count virtual networks after creating internal virtual network
  request:
    path: "/virtual-networks?count=true&parent_id=admin_lr_vxlan_project_uuid"
    method: GET
    expected:
    - 200
  expect:
    virtual-networks:
      count: 2

- name: check the created internal virtual network
  request:
    path: "/virtual-networks?parent_id=admin_lr_vxlan_project_uuid&filters=name==__contrail_lr_internal_vn_vn_vxlan_logical_router__&detail=true"
    method: GET
    expected:
    - 200
  expect:
    virtual-networks:
      - virtual-network:
          name: __contrail_lr_internal_vn_vn_vxlan_logical_router__
          parent_uuid: admin_lr_vxlan_project_uuid
          parent_type: project
          virtual_network_properties:
            vxlan_network_identifier: 20
            forwarding_mode: l3
          route_target_list:
          id_perms:
            enable: true
          logical_router_back_refs:
            - uuid: vn_vxlan_logical_router

- name: fail to create another logical router with the same VxLAN ID
  request:
    path: /logical-routers
    method: POST
    expected:
    - 400
    data:
      logical-router: *vn_vxlan_conflicting_logical_router
  expect: null

- name: fail to create a virtual network with the same VxLAN ID
  request:
    path: /virtual-networks
    method: POST
    expected:
    - 400
    data:
      virtual-network: *vn_vxlan_conflicting_vn
  expect: null

- name: update logical router with a different VxLAN ID
  request:
    path: /logical-router/vn_vxlan_logical_router
    method: PUT
    expected:
    - 200
    data:
      logical-router:
        uuid: vn_vxlan_logical_router
        vxlan_network_identifier: "21"
  expect: null

- name: fail to create another logical router with the same VxLAN ID
  request:
    path: /logical-routers
    method: POST
    expected:
    - 400
    data:
      logical-router:
        <<: *vn_vxlan_conflicting_logical_router
        vxlan_network_identifier: "21"
  expect: null

- name: fail to create a virtual network with the same VxLAN ID
  request:
    path: /virtual-networks
    method: POST
    expected:
    - 400
    data:
      virtual-network:
        <<: *vn_vxlan_conflicting_vn
        virtual_network_properties:
          vxlan_network_identifier: 21
  expect: null

- name: delete logical router
  request:
    path: /logical-router/vn_vxlan_logical_router
    method: DELETE
    expected:
    - 200
  expect: null

- name: count virtual networks after deleting internal one
  request:
    path: "/virtual-networks?count=true&parent_id=admin_lr_vxlan_project_uuid"
    method: GET
    expected:
    - 200
  expect:
    virtual-networks:
      count: 1

- name: delete virtual machine interface blue
  request:
    path: /virtual-machine-interface/ce14a053-3f09-49aa-a57a-20cc6a1506a4
    method: DELETE
    expected:
    - 200
  expect: null

- name: delete virtual network blue
  request:
    path: /virtual-network/test_vn_lr_vxlan_blue
    method: DELETE
    expected:
    - 200
  expect: null

- name: delete network ipam blue
  request:
    path: /network-ipam/test_ipam_lr_vxlan_blue
    method: DELETE
    expected:
    - 200
  expect: null
