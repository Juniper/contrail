name: Base poperties tests for logical interface which has 2 parents
cleanup:
- path: /logical_interface/logical_interface_blue
- path: /logical_interface/logical_interface_blue2
- path: /physical-router/physical_router_blue_uuid
- path: /physical-interface/physical_interface_blue_uuid
test_data:
  logical_interface_minimal: &logical_interface_minimal_base_props
    uuid: logical_interface_blue

clients:
  default:
    id: alice
    password: alice_password
    domain: default
    insecure: true
    scope:
      project:
        name: admin

workflow:
- name: create physical_router
  request:
    path: /physical-routers
    method: POST
    expected: [200]
    data:
      physical-router:
        uuid: physical_router_blue_uuid
        name: physical_router_blue_name
        physical_router_device_family: juniper
        physical_router_vendor_name: juniper
        physical_router_management_ip: localhost
        physical_router_product_name: juniper
        parent_uuid: beefbeef-beef-beef-beef-beefbeef0001  # default global-system-config uuid

- name: create physical_interface
  request:
    path: /physical-interfaces
    method: POST
    expected: [200]
    data:
      physical-interface:
        uuid: physical_interface_blue_uuid
        name: physical_interface_blue_name
        parent_uuid: physical_router_blue_uuid

- name: create logical_interface w/o parent_type
  request:
    path: /logical-interfaces
    method: POST
    expected: [400]
    data:
      logical-interface:
        <<: *logical_interface_minimal_base_props
        parent_uuid: physical_interface_blue_uuid
        fq_name: [default-global-system-config, physical_router_blue_name, physical_interface_blue_name]
  expect: null

- name: create logical_interface w/ physical-interface parent_type and fq_name
  request:
    path: /logical-interfaces
    method: POST
    expected: [200]
    data:
      logical-interface:
        <<: *logical_interface_minimal_base_props
        parent_type: physical-interface
        parent_uuid: physical_interface_blue_uuid
  expect:
    logical-interface:
      <<: *logical_interface_minimal_base_props
      name: default-logical-interface
      display_name: default-logical-interface
      parent_type: physical-interface
      fq_name: [default-global-system-config, physical_router_blue_name, physical_interface_blue_name, default-logical-interface]

- name: delete logical_interface
  request:
    path: /logical-interface/logical_interface_blue
    method: DELETE
    expected: [200]
  expect: null

- name: create logical_interface w/ parent_type and parent_uuid
  request:
    path: /logical-interfaces
    method: POST
    expected: [200]
    data:
      logical-interface:
        <<: *logical_interface_minimal_base_props
        parent_type: physical-interface
        parent_uuid: physical_interface_blue_uuid
  expect:
    logical-interface:
      <<: *logical_interface_minimal_base_props
      name: default-logical-interface
      display_name: default-logical-interface
      parent_type: physical-interface
      fq_name: [default-global-system-config, physical_router_blue_name, physical_interface_blue_name, default-logical-interface]

- name: create logical_interface w/ same name but different partent type
  request:
    path: /logical-interfaces
    method: POST
    expected: [200]
    data:
      logical-interface:
        uuid: logical_interface_blue2
        parent_type: physical-router
        parent_uuid: physical_router_blue_uuid
  expect:
    logical-interface:
      uuid: logical_interface_blue2
      name: default-logical-interface
      display_name: default-logical-interface
      parent_type: physical-router
      fq_name: [default-global-system-config, physical_router_blue_name, default-logical-interface]
