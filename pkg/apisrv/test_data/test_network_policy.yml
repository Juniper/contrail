name: Network Policy Rules
description:  Test Network Policy Rules Validation
cleanup:
- path: /network-policy/beefbeef-beef-beef-beef-beefbeef1002
- path: /security-group/beefbeef-beef-beef-beef-beefbeef1001

test_data:
  security_group: &security_group
    uuid: beefbeef-beef-beef-beef-beefbeef1001
    fq_name:
      - default-domain
      - default-project
      - security-group
    security_group_entries:
      policy_rule:
        - direction: ">"
          protocol: "any"
          dst_addresses:
          - security_group: "local"
          dst_ports:
          - end_port: 65535
            start_port: 0
          ethertype: "IPv4"
          src_addresses:
          - security_group: "default-domain:default-project:security-group"
          src_ports:
          - end_port: 65535
            start_port: 0

  policy_rule_network_policy_virtual_network: &policy_rule_network_policy_virtual_network
    direction: "<>"
    protocol: any
    dst_addresses:
    - virtual_network: default-domain:default-project:default-virtual-network
    action_list:
      simple_action: pass
    dst_ports:
    - end_port: -1
      start_port: -1
    src_addresses:
    - network_policy: default-domain:default-project:network-policy
    src_ports:
    - end_port: -1
      start_port: -1

  network_policy_base: &network_policy_base
    fq_name:
    - default-domain
    - default-project
    - network-policy
    parent_type: project

  network_policy_with_security_group: &network_policy_with_security_group
    <<: *network_policy_base
    network_policy_entries:
      policy_rule:
      - <<: *policy_rule_network_policy_virtual_network
        dst_addresses:
        - security_group: default-domain:default-project:security-group

  network_policy_with_the_same_rules: &network_policy_with_the_same_rules
    <<: *network_policy_base
    network_policy_entries:
      policy_rule:
      - <<: *policy_rule_network_policy_virtual_network
      - <<: *policy_rule_network_policy_virtual_network

  network_policy_with_invalid_number_protocol: &network_policy_with_invalid_number_protocol
    <<: *network_policy_base
    network_policy_entries:
      policy_rule:
      - <<: *policy_rule_network_policy_virtual_network
        protocol: "300"

  network_policy_with_invalid_protocol_name: &network_policy_with_invalid_protocol_name
    <<: *network_policy_base
    network_policy_entries:
      policy_rule:
      - <<: *policy_rule_network_policy_virtual_network
        protocol: non-valid

  network_policy_valid: &network_policy_valid
    uuid: beefbeef-beef-beef-beef-beefbeef1002
    <<: *network_policy_base
    network_policy_entries:
      policy_rule:
      - <<: *policy_rule_network_policy_virtual_network

clients:
  default:
    id: alice
    password: alice_password
    insecure: true
    scope:
      project:
        name: admin

workflow:
- name: create security group
  request:
    path: /security-groups
    method: POST
    expected:
    - 200
    data:
      security-group: *security_group
  expect:
    security-group: *security_group

- name: create network policy with security group entries
  request:
    path: /network-policys
    method: POST
    expected:
    - 400
    data:
      network-policy: *network_policy_with_security_group
  expect: null

- name: create network policy with two the same rules
  request:
    path: /network-policys
    method: POST
    expected:
    - 409
    data:
      network-policy: *network_policy_with_the_same_rules
  expect: null

- name: create network policy with invalid protocol number
  request:
    path: /network-policys
    method: POST
    expected:
    - 400
    data:
      network-policy: *network_policy_with_invalid_number_protocol
  expect: null

- name: create network policy with invalid protocol
  request:
    path: /network-policys
    method: POST
    expected:
    - 400
    data:
      network-policy: *network_policy_with_invalid_protocol_name
  expect: null

- name: create valid network policy and check if rule uuid is filled
  request:
    path: /network-policys
    method: POST
    expected:
    - 200
    data:
      network-policy: *network_policy_valid
  expect:
    network-policy:
      <<: *network_policy_valid
      network_policy_entries:
        policy_rule:
        - <<: *policy_rule_network_policy_virtual_network
          rule_uuid: $uuid

- name: delete valid network policy
  request:
    path: /network-policy/beefbeef-beef-beef-beef-beefbeef1002
    method: DELETE
    expected:
    - 200
  expect: null

- name: delete security group
  request:
    path: /security-group/beefbeef-beef-beef-beef-beefbeef1001
    method: DELETE
    expected:
    - 200
  expect: null