name: Network Policy Rules
description:  Test Network Policy Rules Validation
cleanup:
- path: /network-policy/beefbeef-beef-beef-beef-beefbeef1003
- path: /network-policy/beefbeef-beef-beef-beef-beefbeef1002
- path: /security-group/beefbeef-beef-beef-beef-beefbeef1001

test_data:
  sg: &sg
    uuid: beefbeef-beef-beef-beef-beefbeef1001
    fq_name:
      - default-domain
      - default-project
      - temp-sg
    security_group_entries:
      policy_rule:
        - direction: ">"
          protocol: "any"
          dst_addresses:
          - security_group: "local"
          dst_ports:
          - end_port: 65535
            start_port: 0
          ethertype: "IPv4"
          src_addresses:
          - security_group: "default-domain:default-project:temp-sg"
          src_ports:
          - end_port: 65535
            start_port: 0

  policy_rule_np_vn: &policy_rule_np_vn
    direction: "<>"
    protocol: any
    dst_addresses:
    - virtual_network: default-domain:default-project:default-virtual-network
    action_list:
      simple_action: pass
    dst_ports:
    - end_port: -1
      start_port: -1
    src_addresses:
    - network_policy: default-domain:default-project:valid-np-a
    src_ports:
    - end_port: -1
      start_port: -1

  net_pol: &net_pol
    fq_name:
    - default-domain
    - default-project
    - n-policy
    parent_type: project

  sg_network_policy: &sg_network_policy
    <<: *net_pol
    network_policy_entries:
      policy_rule:
      - <<: *policy_rule_np_vn
        dst_addresses:
        - security_group: default-domain:default-project:temp-sg

  same_rules_network_policy: &same_rules_network_policy
    <<: *net_pol
    network_policy_entries:
      policy_rule:
      - <<: *policy_rule_np_vn
      - <<: *policy_rule_np_vn

  invalid_number_protocol_network_policy: &invalid_number_protocol_network_policy
    <<: *net_pol
    network_policy_entries:
      policy_rule:
      - <<: *policy_rule_np_vn
        protocol: "300"

  invalid_protocol_network_policy: &invalid_protocol_network_policy
    <<: *net_pol
    network_policy_entries:
      policy_rule:
      - <<: *policy_rule_np_vn
        protocol: non-valid

  valid_network_policy_a: &valid_network_policy_a
    uuid: beefbeef-beef-beef-beef-beefbeef1002
    <<: *net_pol
    network_policy_entries:
      policy_rule:
      - <<: *policy_rule_np_vn

clients:
  default:
    id: alice
    password: alice_password
    insecure: true
    scope:
      project:
        name: admin

workflow:
- name: create sg
  request:
    path: /security-groups
    method: POST
    expected:
    - 200
    data:
      security-group: *sg
  expect:
    security-group: *sg

- name: create network policy with security group entries
  request:
    path: /network-policys
    method: POST
    expected:
    - 400
    data:
      network-policy: *sg_network_policy
  expect: null

- name: create network policy with two the same rules
  request:
    path: /network-policys
    method: POST
    expected:
    - 409
    data:
      network-policy: *same_rules_network_policy
  expect: null

- name: create network policy with invalid protocol number
  request:
    path: /network-policys
    method: POST
    expected:
    - 400
    data:
      network-policy: *invalid_number_protocol_network_policy
  expect: null

- name: create network policy with invalid protocol
  request:
    path: /network-policys
    method: POST
    expected:
    - 400
    data:
      network-policy: *invalid_protocol_network_policy
  expect: null

- name: create valid network policy a
  request:
    path: /network-policys
    method: POST
    expected:
    - 200
    data:
      network-policy: *valid_network_policy_a
  expect:
    network-policy: *valid_network_policy_a

- name: delete valid network policy a
  request:
    path: /network-policy/beefbeef-beef-beef-beef-beefbeef1002
    method: DELETE
    expected:
    - 200
  expect: null

- name: delete security group
  request:
    path: /security-group/beefbeef-beef-beef-beef-beefbeef1001
    method: DELETE
    expected:
    - 200
  expect: null