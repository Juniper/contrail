name: Endpoints test
description:  basic endpoints test
cleanup:
- path: /virtual-network/vn_floating_blue
- path: /network-ipam/test_ipam_floating_blue
test_data:

  admin_project: &admin_project_floating_ip
    uuid: admin_floating_project_uuid
    name: admin_floating_project
    parent_type: domain
    parent_uuid: beefbeef-beef-beef-beef-beefbeef0002
    quota: {}

  network_ipam_blue: &network_ipam_blue
    network_ipam_mgmt:
      host_routes:
        route:
          - prefix: "test_prefix"
            next_hop: "1.2.3.5"
    uuid: test_ipam_floating_blue
    display_name: test_ipam_floating_blue
    parent_type: project
    parent_uuid: admin_floating_project_uuid
    fq_name: ["domain","admin","test_ipam_floating_blue"]

  vn_floating_blue: &vn_floating_blue
    fq_name: ["default", "admin_floating", "vn_floating_blue"]
    uuid: vn_floating_blue
    display_name: blue
    parent_type: project
    parent_uuid: admin_floating_project_uuid
    route_target_list:
      route_target: ["100:200"]
    network_ipam_refs:
      - uuid: test_ipam_floating_blue
        attr:
          ipam_subnets:
            - subnet_uuid: "054ca01e-cef3-444e-b4d5-4ac16554ac3d"
              subnet:
                ip_prefix: "10.0.0.0"
                ip_prefix_len: 24

clients:
  default:
    id: alice
    password: alice_password
    domain: default
    insecure: true
    scope:
      project:
        name: admin

workflow:
- name: create project
  request:
    path: /projects
    method: POST
    expected:
    - 201
    data:
      project: *admin_project_floating_ip
  expect:
    project: *admin_project_floating_ip

- name: create network ipam blue
  request:
    path: /network-ipams
    method: POST
    expected:
    - 201
    data:
      network-ipam: *network_ipam_blue
  expect:
    network-ipam: *network_ipam_blue

- name: create virtual network blue
  request:
    path: /virtual-networks
    method: POST
    expected:
    - 201
    data:
      virtual-network: *vn_floating_blue
  expect:
    virtual-network: *vn_floating_blue

- name: get virtual network uuid from fqname
  request: 
    path: /fqname-to-id
    method: POST
    expected:
    - 200
    data:
      fq_name: ["default", "admin_floating", "vn_floating_blue"]
      type: project
    expect:
      id: "vn_floating_blue"

- name: get network ipam uuid from fqname
  request: 
    path: /fqname-to-id
    method: POST
    expected:
    - 200
    data:
      fq_name: ["domain","admin","test_ipam_floating_blue"]
      type: project
    expect:
      id: "test_ipam_floating_blue"

- name: get uuid from fqname when it does not exist
  request: 
    path: /fqname-to-id
    method: POST
    expected:
    - 404
    data:
      fq_name: ["domain","admin","test"]
      type: project

- name: get uuid from fqname when bad request
  request: 
    path: /fqname-to-id
    method: POST
    expected:
    - 400
    data:
      fq_name: "domain"

- name: delete virtual network
  request:
    path: /virtual-network/vn_floating_blue
    method: DELETE
    expected:
    - 204
  expect: null

- name: delete network ipam blue
  request:
    path: /network-ipam/test_ipam_floating_blue
    method: DELETE
    expected:
    - 204
  expect: null
