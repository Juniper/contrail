name: Test unique name validation
description: |
  Test creates two different resources with same, implicit name.
  Second creation should fail, because first resource takes the default name.
cleanup:
- path: /virtual-network/vn_blue
- path: /virtual-network/vn_red
- path: /project/admin_project_name_unique_uuid
test_data:
  admin_project: &admin_project_name_unique
    uuid: admin_project_name_unique_uuid
    name: admin_project_name_unique
    parent_type: domain
    parent_uuid: beefbeef-beef-beef-beef-beefbeef0002
    quota: {}

  vn_minimal: &vn_minimal_name_unique
    parent_type: project
    parent_uuid: admin_project_name_unique_uuid

clients:
  default:
    id: alice
    password: alice_password
    insecure: true
    scope:
      project:
        name: admin

workflow:
- name: create project
  request:
    path: /projects
    method: POST
    expected:
    - 200
    data:
      project: *admin_project_name_unique
  expect:
    project: *admin_project_name_unique

- name: create virtual_network without name
  request:
    path: /virtual-networks
    method: POST
    expected:
    - 200
    data:
      virtual-network:
        <<: *vn_minimal_name_unique
        uuid: vn_blue
        display_name: blue
  expect:
    virtual-network:
      <<: *vn_minimal_name_unique
      uuid: vn_blue
      name: default-virtual-network
      display_name: blue

- name: create virtual_network with same name, but different uuid and display_name
  request:
    path: /virtual-networks
    method: POST
    expected:
    - 409
    data:
      virtual-network:
        <<: *vn_minimal_name_unique
        name: default-virtual-network
        uuid: vn_red
        display_name: red
  expect: null

- name: delete virtual network
  request:
    path: /virtual-network/vn_blue
    method: DELETE
    expected:
    - 200
  expect: null
- name: delete project
  request:
    path: /project/admin_project_name_unique_uuid
    method: DELETE
    expected:
    - 200
  expect: null
