name: Test prop collection update
description: |
  Integration test for /prop-collection-update endpoint which allows modifying
  data stored in List and Map properties of object.
cleanup:
- path: /virtual-network/virtual_network_prop_collection_update_uuid
- path: /project/project_prop_collection_update_uuid
test_data:
  project: &project_prop_collection_update
    uuid: project_prop_collection_update_uuid
    name: project_prop_collection_update
    parent_type: domain
    parent_uuid: beefbeef-beef-beef-beef-beefbeef0002
    quota: {}
  virtual_network: &virtual_network_prop_collection_update
    uuid: virtual_network_prop_collection_update_uuid
    name: virtual_network_prop_collection_update
    parent_type: project
    parent_uuid: project_prop_collection_update_uuid
clients:
  default:
    id: alice
    password: alice_password
    domain: default
    insecure: true
    scope:
      project:
        name: admin

workflow:
- name: create project
  request:
    path: /projects
    method: POST
    expected: [200]
    data:
      project: *project_prop_collection_update
  expect:
    project: *project_prop_collection_update

- name: create virtual network
  request:
    path: /virtual-networks
    method: POST
    expected: [200]
    data:
      virtual-network: *virtual_network_prop_collection_update
  expect:
    virtual-network: *virtual_network_prop_collection_update

##########################
# Tests of common errors #
##########################

- name: request with invalid data should fail
  request:
    path: /prop-collection-update
    method: POST
    expected: [400]
    data:
      invalidKey: invalidValue
  expect: null

- name: request with no uuid should fail
  request:
    path: /prop-collection-update
    method: POST
    expected: [400]
    data:
      updates:
        - field: annotations
          operation: set
          value:
            key: some-key
            value: some value
  expect: null

- name: request with invalid uuid should fail
  request:
    path: /prop-collection-update
    method: POST
    expected: [404]
    data:
      uuid: invalid-uuid
      updates:
        - field: annotations
          operation: set
          value:
            key: some-key
            value: some value
  expect: null

- name: request with invalid field should fail
  request:
    path: /prop-collection-update
    method: POST
    expected: [400]
    data:
      uuid: project_prop_collection_update_uuid
      updates:
        - field: invalid-field
          operation: set
          value:
            key: some-key
            value: some value
  expect: null

#################################################
# Tests of project's annotations map collection #
#################################################

# Errors

- name: invalid operation on project's annotations should fail
  request:
    path: /prop-collection-update
    method: POST
    expected: [400]
    data:
      uuid: project_prop_collection_update_uuid
      updates:
        - field: annotations
          operation: invalid
          value:
            key: some-key
            value: some value
  expect: null

- name: setting key-value pair in project's annotations with no update value should fail
  request:
    path: /prop-collection-update
    method: POST
    expected: [400]
    data:
      uuid: project_prop_collection_update_uuid
      updates:
        - field: annotations
          operation: set
  expect: null

- name: setting key-value pair in project's annotations with invalid value should fail
  request:
    path: /prop-collection-update
    method: POST
    expected: [400]
    data:
      uuid: project_prop_collection_update_uuid
      updates:
        - field: annotations
          operation: set
          value: invalid-value
  expect: null

- name: setting key-value pair in project's annotations with no KeyValuePair key should fail
  request:
    path: /prop-collection-update
    method: POST
    expected: [400]
    data:
      uuid: project_prop_collection_update_uuid
      updates:
        - field: annotations
          operation: set
          value:
            value: some value
  expect: null

- name: deleting key-value pair from project's annotations with no position should fail
  request:
    path: /prop-collection-update
    method: POST
    expected: [400]
    data:
      uuid: project_prop_collection_update_uuid
      updates:
        - field: annotations
          operation: delete
  expect: null

# OK scenario

- name: set key-value pairs in project's annotations
  request:
    path: /prop-collection-update
    method: POST
    expected: [200]
    data:
      uuid: project_prop_collection_update_uuid
      updates:
        - field: annotations
          operation: set
          value:
            key: some-key
            value: some value
        - field: annotations
          operation: set
          value:
            key: another-key # TODO: key with empty value
            value: another value
  expect: null

- name: verify key-value pairs were set in project's annotations
  request:
    path: /project/project_prop_collection_update_uuid
    method: GET
    expected: [200]
  expect:
    project:
      <<: *project_prop_collection_update
      annotations:
        key_value_pair:
          - key: some-key
            value: some value
          - key: another-key
            value: another value

- name: delete key-value pair from project's annotations
  request:
    path: /prop-collection-update
    method: POST
    expected: [200]
    data:
      uuid: project_prop_collection_update_uuid
      updates:
        - field: annotations
          operation: delete
          position: some-key
  expect: null

- name: verify key-value pair was removed from project's annotations
  request:
    path: /project/project_prop_collection_update_uuid
    method: GET
    expected: [200]
  expect:
    project:
      <<: *project_prop_collection_update
      annotations:
        key_value_pair:
          - key: another-key
            value: another value

#################################################################
# Tests of virtual network's fat flow protocols list collection #
#################################################################

# Errors

- name: invalid operation on virtual network's fat flow protocols should fail
  request:
    path: /prop-collection-update
    method: POST
    expected: [400]
    data:
      uuid: virtual_network_prop_collection_update_uuid
      updates:
        - field: virtual_network_fat_flow_protocols
          operation: invalid
          value:
            ignore_address: ignored
            port: 8000
  expect: null

- name: adding value to virtual network's fat flow protocols with no value should fail
  request:
    path: /prop-collection-update
    method: POST
    expected: [400]
    data:
      uuid: virtual_network_prop_collection_update_uuid
      updates:
        - field: virtual_network_fat_flow_protocols
          operation: add
  expect: null

- name: modifying value of virtual network's fat flow protocols with no value should fail
  request:
    path: /prop-collection-update
    method: POST
    expected: [400]
    data:
      uuid: virtual_network_prop_collection_update_uuid
      updates:
        - field: virtual_network_fat_flow_protocols
          operation: modify
          position: 5
  expect: null

- name: modifying value of virtual network's fat flow protocols with invalid position should fail
  request:
    path: /prop-collection-update
    method: POST
    expected: [400]
    data:
      uuid: virtual_network_prop_collection_update_uuid
      updates:
        - field: virtual_network_fat_flow_protocols
          operation: modify
          value:
            ignore_address: modified
            port: 7000
          position: invalid
  expect: null

- name: deleting value of virtual network's fat flow protocols with invalid position should fail
  request:
    path: /prop-collection-update
    method: POST
    expected: [400]
    data:
      uuid: virtual_network_prop_collection_update_uuid
      updates:
        - field: virtual_network_fat_flow_protocols
          operation: delete
          position: invalid
  expect: null

- name: deleting unexisting value of virtual network's fat flow protocols should fail
  request:
    path: /prop-collection-update
    method: POST
    expected: [400]
    data:
      uuid: virtual_network_prop_collection_update_uuid
      updates:
        - field: virtual_network_fat_flow_protocols
          operation: delete
          position: 5
  expect: null

# OK scenario

- name: add values to virtual network's fat flow protocols
  request:
    path: /prop-collection-update
    method: POST
    expected: [200]
    data:
      uuid: virtual_network_prop_collection_update_uuid
      updates:
        - field: virtual_network_fat_flow_protocols
          operation: add
          value:
            ignore_address: ignored
            port: 8000
        - field: virtual_network_fat_flow_protocols
          operation: add
          value:
            ignore_address: another one
            port: 9000
  expect: null

- name: verify values were added to virtual network's fat flow protocols
  request:
    path: /virtual-network/virtual_network_prop_collection_update_uuid
    method: GET
    expected: [200]
  expect:
    virtual-network:
      <<: *virtual_network_prop_collection_update
      virtual_network_fat_flow_protocols:
        fat_flow_protocol:
          - ignore_address: ignored
            port: 8000
          - ignore_address: another one
            port: 9000

- name: delete and modify values in virtual network's fat flow protocols
  request:
    path: /prop-collection-update
    method: POST
    expected: [200]
    data:
      uuid: virtual_network_prop_collection_update_uuid
      updates:
        - field: virtual_network_fat_flow_protocols
          operation: delete
          position: "1"
        - field: virtual_network_fat_flow_protocols
          operation: modify
          value:
            ignore_address: modified
            port: 7000
          position: "0"
  expect: null

- name: verify values were deleted and modified in virtual network's fat flow protocols
  request:
    path: /virtual-network/virtual_network_prop_collection_update_uuid
    method: GET
    expected: [200]
  expect:
    virtual-network:
      <<: *virtual_network_prop_collection_update
      virtual_network_fat_flow_protocols:
        fat_flow_protocol:
          - ignore_address: modified
            port: 7000

- name: delete virtual network
  request:
    path: /virtual-network/virtual_network_prop_collection_update_uuid
    method: DELETE
    expected: [200]
  expect: null

- name: delete project
  request:
    path: /project/project_prop_collection_update_uuid
    method: DELETE
    expected: [200]
  expect: null
