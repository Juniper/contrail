name: Test ref objects read from DB
description: Check if ref objects read from DB contain all fields
cleanup:
- path: /routing-instance/routing_instance_ref_read_uuid
- path: /route-target/route_target_ref_read_uuid
- path: /virtual-network/virtual_network_ref_read
- path: /network-ipam/network_ipam_ref_read_uuid
- path: /project/project_ref_read_uuid
test_data:

  project: &project_ref_read
    uuid: project_ref_read_uuid
    name: project_ref_read
    parent_type: domain
    parent_uuid: beefbeef-beef-beef-beef-beefbeef0002
    quota: {}

  virtual_network: &virtual_network_ref_read
    uuid: "virtual_network_ref_read_uuid"
    name: "virtual_network_ref_read"
    parent_type: "project"
    parent_uuid: project_ref_read_uuid
    virtual_network_properties:
      forwarding_mode: "l3"
      vxlan_network_identifier: 1
    network_ipam_refs:
      - uuid: "network_ipam_ref_read_uuid"

  network_ipam: &network_ipam_ref_read
    network_ipam_mgmt:
      host_routes:
        route:
          - prefix: "test_prefix"
            next_hop: "1.2.3.5"
    ipam_subnet_method: flat-subnet
    uuid: network_ipam_ref_read_uuid
    name: network_ipam_ref_read
    parent_type: project
    parent_uuid: project_ref_read_uuid

  routing_instance: &routing_instance_ref_read
    uuid: routing_instance_ref_read_uuid
    parent_type: virtual-network
    parent_uuid: virtual_network_ref_read_uuid
    route_target_refs:
      - uuid: route_target_ref_read_uuid
        attr:
          import_export: import

  route_target: &route_target_ref_read
    uuid: route_target_ref_read_uuid
    fq_name: ["target:100:200"]

clients:
  default:
    id: alice
    password: alice_password
    domain: default
    insecure: true
    scope:
      project:
        name: admin

workflow:
- name: create project
  request:
    path: /projects
    method: POST
    expected:
    - 200
    data:
      project: *project_ref_read
  expect:
    project: *project_ref_read

- name: create network ipam
  request:
    path: /network-ipams
    method: POST
    expected:
    - 200
    data:
      network-ipam: *network_ipam_ref_read
  expect:
    network-ipam: *network_ipam_ref_read

- name: create virtual network
  request:
    path: /virtual-networks
    method: POST
    expected:
    - 200
    data:
      virtual-network: *virtual_network_ref_read
  expect: null

- name: check if network ipam ref contains all fields
  request:
    path: /virtual-network/virtual_network_ref_read_uuid
    method: GET
    expected: [200]
  expect:
    virtual-network:
      network_ipam_refs:
        - uuid: "network_ipam_ref_read_uuid"
          to: ["default-domain", "project_ref_read", "network_ipam_ref_read"]

- name: create route target
  request:
    path: /route-targets
    method: POST
    expected: [200]
    data:
      route-target: *route_target_ref_read
  expect:
    route-target: *route_target_ref_read

- name: create routing instance
  request:
    path: /routing-instances
    method: POST
    expected: [200]
    data:
      routing-instance: *routing_instance_ref_read
  expect:
    routing-instance: *routing_instance_ref_read

- name: check if route target ref contains all fields and fqname was parsed properly
  request:
    path: /routing-instance/routing_instance_ref_read_uuid
    method: GET
    expected: [200]
  expect:
    routing-instance:
      route_target_refs:
      - uuid: route_target_ref_read_uuid
        to: ["target:100:200"]
        attr:
          import_export: import

- name: delete routing instance
  request:
    path: /routing-instance/routing_instance_ref_read_uuid
    method: DELETE
    expected: [200]
  expect: null

- name: delete route target
  request:
    path: /route-target/route_target_ref_read_uuid
    method: DELETE
    expected: [200]
  expect: null

- name: delete virtual network
  request:
    path: /virtual-network/virtual_network_ref_read_uuid
    method: DELETE
    expected:
    - 200
  expect: null

- name: delete network ipam
  request:
    path: /network-ipam/network_ipam_ref_read_uuid
    method: DELETE
    expected:
    - 200
  expect: null

- name: delete project
  request:
    path: /project/project_ref_read_uuid
    method: DELETE
    expected:
    - 200
  expect: null
