name: referred Security Groups test
description: this tests checks whether referred security groups are handled properly on delete
intent_compiler_enabled: true
cleanup:
- kind:  access-control-list
  fq_name: ["default-domain", "blue", "sg_referring", "ingress-access-control-list"]
- kind:  access-control-list
  fq_name: ["default-domain", "blue", "sg_referring", "egress-access-control-list"]
- path: /security-group/beefbeef-beef-beef-beef-beefbeef1001
- path: /security-group/beefbeef-beef-beef-beef-beefbeef1002
- path: /project/beefbeef-beef-beef-beef-beefbeef1000
test_data:
  project: &project
    uuid: beefbeef-beef-beef-beef-beefbeef1000
    name: blue
    parent_uuid: beefbeef-beef-beef-beef-beefbeef0002
    quota: {}
  sg: &sg
    uuid: beefbeef-beef-beef-beef-beefbeef1001
    parent_uuid: beefbeef-beef-beef-beef-beefbeef1000
    name: sg
    security_group_entries:
      policy_rule:
      - direction: ">"
        protocol: any
        dst_addresses:
        - security_group: local
        dst_ports:
        - end_port: 65535
          start_port: 0
        ethertype: IPv4
        src_addresses:
        - security_group: local
        src_ports:
        - end_port: 65535
          start_port: 0
  sg_referring: &sg_referring
    uuid: beefbeef-beef-beef-beef-beefbeef1002
    parent_uuid: beefbeef-beef-beef-beef-beefbeef1000
    name: sg_referring
    security_group_entries:
      policy_rule:
      - direction: ">"
        protocol: any
        dst_addresses:
        - security_group: local
        dst_ports:
        - end_port: 65535
          start_port: 0
        ethertype: IPv4
        src_addresses:
        - security_group: default-domain:blue:sg
        src_ports:
        - end_port: 65535
          start_port: 0
  ingress_acl: &ingress_acl
    name: ingress-access-control-list
    parent_uuid: beefbeef-beef-beef-beef-beefbeef1001
    access_control_list_entries:
      acl_rule:
        - action_list:
            simple_action: pass
          match_condition:
            dst_address: null
            dst_port:
              end_port: 65535
            ethertype: IPv4
            protocol: any
            src_address: null
            src_port:
              end_port: 65535
  egress_acl: &egress_acl
    name: egress-access-control-list
    parent_uuid: beefbeef-beef-beef-beef-beefbeef1001
  ingress_acl_referring: &ingress_acl_referring
    name: ingress-access-control-list
    parent_uuid: beefbeef-beef-beef-beef-beefbeef1002
    access_control_list_entries:
      acl_rule:
      - action_list:
          simple_action: pass
        match_condition:
          dst_port:
            end_port: 65535
          ethertype: IPv4
          protocol: any
          src_address:
            security_group: '8000001'
          src_port:
            end_port: 65535
  egress_acl: &egress_acl_referring
    name: egress-access-control-list
    parent_uuid: beefbeef-beef-beef-beef-beefbeef1002
  ingress_acl_referring_update: &ingress_acl_referring_update
    <<: *ingress_acl_referring
    access_control_list_entries:
      acl_rule: $null

workflow:
- name: create project
  request:
    path: /projects
    method: POST
    expected:
    - 200
    data:
      project: *project
  expect:
    project: *project

- name: create 1st security group
  request:
    path: /security-groups
    method: POST
    expected:
    - 200
    data:
      security-group: *sg
  expect:
    security-group: *sg
  watchers:
    /contrail/security_group/: [*sg]
    /contrail/access_control_list/: [*ingress_acl, *egress_acl]

- name: create 2nd security group that refers 1st
  request:
    path: /security-groups
    method: POST
    expected:
    - 200
    data:
      security-group: *sg_referring
  expect:
    security-group: *sg_referring
  watchers:
    /contrail/security_group/: [*sg_referring]
    /contrail/access_control_list/: [*ingress_acl_referring, *egress_acl_referring]

- name: delete referred security group
  request:
    path: /security-group/beefbeef-beef-beef-beef-beefbeef1001
    method: DELETE
    expected:
    - 200
  expect: null
  watchers:
    # TODO assert 3rd acl is ingress_acl_referring_update once etcd update is fixed
    /contrail/access_control_list/: [null, null, null, *egress_acl_referring]

- name: check whether ingress acl in sg_referring was updated
  request:
    path: /access-control-lists?parent_id=beefbeef-beef-beef-beef-beefbeef1002
    method: GET
    expected:
    - 200
  expect:
    access-control-lists: [*ingress_acl_referring_update, *egress_acl_referring]

- name: delete security group 2
  request:
    path: /security-group/beefbeef-beef-beef-beef-beefbeef1002
    method: DELETE
    expected:
    - 200
  expect: null
  watchers:
    /contrail/access_control_list/: [null, null]

- name: delete project
  request:
    path: /project/beefbeef-beef-beef-beef-beefbeef1000
    method: DELETE
    expected:
    - 200
  expect: null

clients:
  default:
    id: alice
    password: alice_password
    domain: default
    insecure: true
    scope:
      project:
        name: admin
