name: All in one azure cloud
description: all-in-one azure update test
{% if !("private" in CLOUD_TYPE) %}
cleanup:
- path: /cloud-region/cloud_region_vpc2_uuid
- path: /tag/public_cloud_tag_vpc2_uuid
{% endif %}
test_data:
  {% if !("private" in CLOUD_TYPE) %}
  vc_tag_vpc2: &vc_tag_vpc2
    name: public_cloud_tag_vpc2
    uuid: public_cloud_tag_vpc2_uuid
    tag_type_name: namespace
    tag_value: vc2
  cloud_region_vpc2: &cloud_region_vpc2
    {% if "azure" in CLOUD_TYPE %}
    name: EastUS
    {% elif "aws" in CLOUD_TYPE %}
    name: us-east-1
    {% endif %}
    parent_type: cloud-provider
    parent_uuid: cloud_provider_uuid
    uuid: cloud_region_vpc2_uuid
    {% if "azure" in CLOUD_TYPE %}
    resource_group: unit_test
    {% endif %}
  virtual_cloud_vpc2: &virtual_cloud_vpc2
    name: virtual_cloud_vpc2
    uuid: virtual_cloud_vpc2_uuid
    parent_type: cloud-region
    parent_uuid: cloud_region_vpc2_uuid
    cidr_block: 172.16.10.0/16
    tag_refs:
      - uuid: public_cloud_tag_vpc2_uuid
  cloud_private_subnet_vpc2: &cloud_private_subnet_vpc2
    name: cloud_private_subnet_vpc2
    uuid: cloud_private_subnet_vpc2_uuid
    cidr_block: 172.16.10.0/24
    {% if "aws" in CLOUD_TYPE %}
    availability_zone: a
    {% endif %}
    parent_type: virtual-cloud
    parent_uuid: virtual_cloud_vpc2_uuid
  cloud_security_group_vpc2: &cloud_security_group_vpc2
    name: cloud_security_group_vpc2
    uuid: cloud_security_group_vpc2_uuid
    parent_type: virtual-cloud
    parent_uuid: virtual_cloud_vpc2_uuid
    cloud_private_subnet_refs:
      - uuid: cloud_private_subnet_vpc2_uuid
  cloud_security_group_rule_vpc2: &cloud_security_group_rule_vpc2
    name: cloud_security_group_rule_vpc2
    uuid: cloud_security_group_rule_vpc2_uuid
    parent_type: cloud-security-group
    parent_uuid: cloud_security_group_vpc2_uuid
    direction: ingress
    protocol: tcp
    {% if "aws" in CLOUD_TYPE %}
    from_port: 0
    to_port: 0
    cidr_block: 0.0.0.0/0
    {% endif %}
  cloud_node_gw_vpc2: &cloud_node_gw_vpc2
    name: cloud_node_gw_vpc2
    uuid: cloud_node_gw_vpc2_uuid
    hostname: cloud_node_gw_vpc2
    cloud_info:
      {% if "azure" in CLOUD_TYPE %}
      operating_system: rhel75
      instance_type: F16sv2
      {% elif "aws" in CLOUD_TYPE %}
      operating_system: rhel75
      instance_type: t2.xlarge
      {% elif "gcp" in CLOUD_TYPE %}
      operating_system: rhel75
      instance_type: n1-standard-1
      {% endif %}
      roles:
        - gateway
    cloud_private_subnet_refs:
      - uuid: cloud_private_subnet_vpc2_uuid
    {% if "aws" in CLOUD_TYPE %}
    cloud_security_group_refs:
      - uuid: cloud_security_group_vpc2_uuid
    {% endif %}
    tag_refs:
      - uuid: public_cloud_tag_vpc2_uuid
    parent_type: global-system-config
    parent_uuid: beefbeef-beef-beef-beef-beefbeef0001
  cloud_node_comp_vpc2: &cloud_node_comp_vpc2
    name: cloud_node_comp_vpc2
    uuid: cloud_node_comp_vpc2_uuid
    hostname: cloud_node_comp_vpc2
    cloud_info:
      {% if "azure" in CLOUD_TYPE %}
      operating_system: rhel75
      instance_type: F16sv2
      {% elif "aws" in CLOUD_TYPE %}
      operating_system: rhel75
      instance_type: t2.xlarge
      {% elif "gcp" in CLOUD_TYPE %}
      operating_system: rhel75
      instance_type: n1-standard-1
      {% endif %}
      roles:
        - none
    cloud_private_subnet_refs:
      - uuid: cloud_private_subnet_vpc2_uuid
    {% if "aws" in CLOUD_TYPE %}
    cloud_security_group_refs:
      - uuid: cloud_security_group_vpc2_uuid
    {% endif %}
    tag_refs:
      - uuid: public_cloud_tag_vpc2_uuid
    parent_type: global-system-config
    parent_uuid: beefbeef-beef-beef-beef-beefbeef0001
  {% endif %}
  cloud: &cloud
    provisioning_state: NOSTATE
    uuid: cloud_uuid

clients:
  default:
    id: alice
    password: alice_password
    insecure: true
    scope:
      project:
        name: admin

workflow:
{% if !("private" in CLOUD_TYPE) %}
- name: create virtual cloud 2 tag
  request:
    path: /tags
    method: POST
    expected:
    - 200
    data:
      tag: *vc_tag_vpc2
  expect:
    tag: *vc_tag_vpc2

- name: create cloud region vpc2
  request:
    path: /cloud-regions
    method: POST
    expected:
    - 200
    data:
      cloud-region: *cloud_region_vpc2
  expect:
    cloud-region: *cloud_region_vpc2

- name: create virtual cloud 2
  request:
    path: /virtual-clouds
    method: POST
    expected:
    - 200
    data:
      virtual-cloud: *virtual_cloud_vpc2
  expect:
    virtual-cloud: *virtual_cloud_vpc2

- name: create cloud private subnet 2
  request:
    path: /cloud-private-subnets
    method: POST
    expected:
    - 200
    data:
      cloud-private-subnet: *cloud_private_subnet_vpc2
  expect:
    cloud-private-subnet: *cloud_private_subnet_vpc2

- name: create cloud security group 2
  request:
    path: /cloud-security-groups
    method: POST
    expected:
    - 200
    data:
      cloud-security-group: *cloud_security_group_vpc2
  expect:
    cloud-security-group: *cloud_security_group_vpc2

- name: create cloud security group rule 2
  request:
    path: /cloud-security-group-rules
    method: POST
    expected:
    - 200
    data:
      cloud-security-group-rule: *cloud_security_group_rule_vpc2
  expect:
    cloud-security-group-rule: *cloud_security_group_rule_vpc2

- name: create cloud node gw 2
  request:
    path: /nodes
    method: POST
    expected:
    - 200
    data:
      node: *cloud_node_gw_vpc2
  expect:
    node: *cloud_node_gw_vpc2

- name: create cloud node compute 2
  request:
    path: /nodes
    method: POST
    expected:
    - 200
    data:
      node: *cloud_node_comp_vpc2
  expect:
    node: *cloud_node_comp_vpc2
{% endif %}

- name: update cloud
  request:
    path: /cloud/cloud_uuid
    method: PUT
    expected:
    - 200
    data:
      cloud: *cloud
  expect:
    cloud: *cloud
