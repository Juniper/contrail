name: All in one Cloud Test
description: all-in-one CRUD test
cleanup:
- path: /cloud/cloud_uuid
- path: /cloud-account/cloud_account_uuid
- path: /cloud-user/cloud_user_uuid
- path: /cloud-project/cloud_project_uuid
- path: /cloud-region/cloud_region_uuid
- path: /virtual-cloud/virtual_cloud_uuid
- path: /cloud-private-subnet/cloud_private_subnet_uuid
- path: /cloud-security-group/cloud_security_group_uuid
- path: /cloud-security-group-rule/cloud_security_group_rule_uuid
- path: /node/cloud_node_gw_uuid
- path: /node/cloud_node_controller_uuid
- path: /node/cloud_node_compute_uuid
- path: /keypair/cloud_keypair_uuid
- path: /credential/cloud_credential_uuid
- path: /var/tmp/cloud/config/cloud_uuid/topology.yml
- path: /var/tmp/cloud/config/cloud_uuid/secret.yml
test_data:
  cloud_keypair: &cloud_keypair
    name: cloud_keypair
    uuid: cloud_keypair_uuid
    ssh_public_key: test_ssh_key
    parent_type: global-system-config
    parent_uuid: global-system-config-0001
  cloud_credential: &cloud_credential
    name: cloud_credential
    uuid: cloud_credential_uuid
    keypair_refs:
      - uuid: cloud_keypair_uuid
    parent_type: global-system-config
    parent_uuid: global-system-config-0001
  cloud: &cloud
    uuid: cloud_uuid
    type: {{ CLOUD_TYPE }}
    organization: unit_test
    credential_refs:
      - uuid: cloud_credential_uuid
  cloud_region: &cloud_region
    name: cloud_region
    uuid: cloud_region_uuid
    parent_type: cloud
    parent_uuid: cloud_uuid
    {% if CLOUD_TYPE == "azure" %}
    resource_group: unit_test
    {% elif CLOUD_TYPE == "aws" %}
    availability_zone: a
    {% endif %}
  cloud_account: &cloud_account
    uuid: cloud_account_uuid
    parent_type: cloud
    parent_uuid: cloud_uuid
  cloud_user: &cloud_user:
    uuid: cloud_user_uuid
    azure_credential:
      username_cred:
        username: user
        password: password
  cloud_project: &cloud_project
    name: cloud_project
    uuid: cloud_project_uuid
    parent_type: cloud_account
    parent_uuid: cloud_account_uuid
    cloud_user_refs:
      - uuid: cloud_user_uuid
  virtual_cloud: &virtual_cloud
    name: virtual_cloud
    uuid: virtual_cloud_uuid
    parent_type: cloud-region
    parent_uuid: cloud_region_uuid
    cidr_block: 192.168.10.0/16
  cloud_private_subnet: &cloud_private_subnet
    name: cloud_private_subnet
    uuid: cloud_private_subnet_uuid
    cidr_block: 192.168.10.0/24
    {% if CLOUD_TYPE == "aws" %}
    availability_zone: a
    {% endif %}
    parent_type: virtual-cloud
    parent_uuid: virtual_cloud_uuid
  cloud_security_group: &cloud_security_group
    name: cloud_security_group
    uuid: cloud_security_group_uuid
    parent_type: virtual-cloud
    parent_uuid: virtual_cloud_uuid
    cloud_private_subnet_refs:
      - uuid: cloud_private_subnet_uuid
  cloud_security_group_rule: &cloud_security_group_rule
    name: cloud_security_group_rule
    uuid: cloud_security_group_rule_uuid
    parent_type: cloud_security_group
    parent_uuid: cloud_security_group_uuid
    direction: ingress
    protocol: tcp
  cloud_node_gw: &cloud_node_gw
    uuid: cloud_node_gw_uuid
    hostname: cloud_node_gw
    interface_name: cloud_node_gw_interface
    cloud_info:
      operating_system: centos7
      instance_type: F16sv2
      roles:
        - gateway
    credential_refs:
      - uuid: cloud_credential_uuid
    cloud_private_subnet_refs:
      - uuid: cloud_private_subnet_uuid
    parent_type: virtual-cloud
    parent_uuid: virtual_cloud_uuid
  cloud_node_controller: &cloud_node_controller
    uuid: cloud_node_controller_uuid
    hostname: cloud_node_controller
    interface_name: cloud_node_controller_interface
    cloud_info:
      operating_system: centos7
      instance_type: F16sv2
      roles:
        - controller
    credential_refs:
      - uuid: cloud_credential_uuid
    cloud_private_subnet_refs:
      - uuid: cloud_private_subnet_uuid
    parent_type: virtual-cloud
    parent_uuid: virtual_cloud_uuid
  cloud_node_compute: &cloud_node_compute
    uuid: cloud_node_compute_uuid
    hostname: cloud_node_compute
    interface_name: cloud_node_compute_interface
    cloud_info:
      operating_system: centos7
      instance_type: F16sv2
      roles:
        - compute
    credential_refs:
      - uuid: cloud_credential_uuid
    cloud_private_subnet_refs:
      - uuid: cloud_private_subnet_uuid
    parent_type: virtual-cloud
    parent_uuid: virtual_cloud_uuid
clients:
  default:
    id: alice
    password: alice_password
    domain: default
    insecure: true
    scope:
      project:
        name: admin
workflow:
- name: create  keypair
  request:
    path: /keypairs
    method: POST
    expected:
    - 200
    data:
      keypair: *cloud_keypair
  expect:
    keypair:
      perms2:
        owner: admin
      uuid: cloud_keypair_uuid
      parent_type: global-system-config
      parent_uuid: global-system-config-0001
      ssh_public_key: test_ssh_key

- name: create cloud credential
  request:
    path: /credentials
    method: POST
    expected:
    - 200
    data:
      credential: *cloud_credential
  expect:
    credential:
      perms2:
        owner: admin
      uuid: cloud_credential_uuid
      parent_type: global-system-config
      parent_uuid: global-system-config-0001
      keypair_refs:
        - uuid: cloud_keypair_uuid

- name: create cloud
  request:
    path: /clouds
    method: POST
    expected:
    - 200
    data:
      cloud: *cloud
  expect:
    cloud:
      perms2:
        owner: admin
      uuid: cloud_uuid
      type: {{ CLOUD_TYPE }}
      organization: unit_test
      credential_refs:
      - uuid: cloud_credential_uuid

- name: create cloud region
  request:
    path: /cloud-regions
    method: POST
    expected:
    - 200
    data:
      cloud_region: *cloud_region
  expect:
    cloud-region:
      perms2:
        owner: admin
      uuid: cloud_region_uuid
      parent_type: cloud
      parent_uuid: cloud_uuid
      {% if CLOUD_TYPE == "azure" %}
      resource_group: unit_test
      {% elif CLOUD_TYPE == "aws" %}
      availability_zone: a
      {% endif %}

- name: create cloud account
  request:
    path: /cloud-accounts
    method: POST
    expected:
    - 200
    data:
      cloud_account: *cloud_account
  expect:
    cloud-account:
      perms2:
        owner: admin
      uuid: cloud_account_uuid
      parent_type: cloud
      parent_uuid: cloud_uuid

- name: create cloud project
  request:
    path: /cloud-projects
    method: POST
    expected:
    - 200
    data:
      cloud_project: *cloud_project
  expect:
    cloud-project:
      perms2:
        owner: admin
      uuid: cloud_project_uuid
      parent_type: cloud_account
      parent_uuid: cloud_account_uuid
      cloud_user_refs:
        - uuid: cloud_user_uuid

- name: create virtual cloud
  request:
    path: /virtual-clouds
    method: POST
    expected:
    - 200
    data:
      virtual_cloud: *virtual_cloud
  expect:
    virtual_cloud:
      perms2:
        owner: admin
      uuid: virtual_cloud_uuid
      parent_type: cloud-region
      parent_uuid: cloud_region_uuid

- name: create cloud private subnet
  request:
    path: /cloud_private_subnets
    method: POST
    expected:
    - 200
    data:
      cloud_private_subnet: *cloud_private_subnet
  expect:
    cloud_private_subnet:
      uuid: cloud_private_subnet_uuid
      cidr_block: 192.168.10.0/24
      {% if CLOUD_TYPE == "aws" %}
      availability_zone: a
      {% endif %}
      parent_type: virtual-cloud
      parent_uuid: virtual_cloud_uuid

- name: create cloud security group
  request:
    path: /cloud_security_groups
    method: POST
    expected:
    - 200
    data:
      cloud_security_group: *cloud_security_group
  expect:
    cloud_security_group:
      uuid: cloud_security_group_uuid
      parent_type: virtual-cloud
      parent_uuid: virtual_cloud_uuid
      cloud_private_subnet_refs:
        - uuid: cloud_private_subnet_uuid

- name: create cloud security group rule
  request:
    path: /cloud_security_group_rules
    method: POST
    expected:
    - 200
    data:
      cloud_security_group_rule: *cloud_security_group_rule
  expect:
    cloud_security_group_rule:
      uuid: cloud_security_group_rule_uuid
      parent_type: cloud_security_group
      parent_uuid: cloud_security_group_uuid
      direction: ingress
      protocol: tcp

- name: create cloud node gw
  request:
    path: /nodes
    method: POST
    expected:
    - 200
    data:
      node: *cloud_node_gw
  expect:
    node:
      uuid: cloud_node_gw_uuid
      hostname: cloud_node_gw
      interface_name: cloud_node_gw_interface
      cloud_info:
        operating_system: centos7
        instance_type: F16sv2
        roles:
          - gateway
      credential_refs:
        - uuid: cloud_credential_uuid
      cloud_private_subnet_refs:
        - uuid: cloud_private_subnet_uuid
      parent_type: virtual-cloud
      parent_uuid: virtual_cloud_uuid

- name: create cloud node controller
  request:
    path: /nodes
    method: POST
    expected:
    - 200
    data:
      node: *cloud_node_controller
  expect:
    node:
      uuid: cloud_node_controller_uuid
      hostname: cloud_node_controller
      interface_name: cloud_node_controller_interface
      cloud_info:
        operating_system: centos7
        instance_type: F16sv2
        roles:
          - controller
      credential_refs:
        - uuid: cloud_credential_uuid
      cloud_private_subnet_refs:
        - uuid: cloud_private_subnet_uuid
      parent_type: virtual-cloud
      parent_uuid: virtual_cloud_uuid

- name: create cloud node compute
  request:
    path: /nodes
    method: POST
    expected:
    - 200
    data:
      node: *cloud_node_compute
  expect:
    node:
      uuid: cloud_node_compute_uuid
      hostname: cloud_node_compute
      interface_name: cloud_node_compute_interface
      cloud_info:
        operating_system: centos7
        instance_type: F16sv2
        roles:
          - compute
      credential_refs:
        - uuid: cloud_credential_uuid
      cloud_private_subnet_refs:
        - uuid: cloud_private_subnet_uuid
      parent_type: virtual-cloud
      parent_uuid: virtual_cloud_uuid
